

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 27 10:52:39 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18344
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.30
    51                           ; Generated 26/08/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F18344 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0097                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020D                     	;# 
   177  020E                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028E                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0297                     	;# 
   206  0298                     	;# 
   207  029F                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  030E                     	;# 
   211  0311                     	;# 
   212  0311                     	;# 
   213  0312                     	;# 
   214  0313                     	;# 
   215  0314                     	;# 
   216  0315                     	;# 
   217  0315                     	;# 
   218  0316                     	;# 
   219  0317                     	;# 
   220  0318                     	;# 
   221  038C                     	;# 
   222  038D                     	;# 
   223  038E                     	;# 
   224  0391                     	;# 
   225  0392                     	;# 
   226  0393                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  0397                     	;# 
   231  0398                     	;# 
   232  0399                     	;# 
   233  039A                     	;# 
   234  039C                     	;# 
   235  039D                     	;# 
   236  039E                     	;# 
   237  039F                     	;# 
   238  0411                     	;# 
   239  0411                     	;# 
   240  0412                     	;# 
   241  0413                     	;# 
   242  0414                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  0418                     	;# 
   247  0418                     	;# 
   248  0419                     	;# 
   249  041A                     	;# 
   250  041B                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  041F                     	;# 
   255  0498                     	;# 
   256  0498                     	;# 
   257  0499                     	;# 
   258  049A                     	;# 
   259  049B                     	;# 
   260  049B                     	;# 
   261  049C                     	;# 
   262  049D                     	;# 
   263  049E                     	;# 
   264  049F                     	;# 
   265  0617                     	;# 
   266  0618                     	;# 
   267  0619                     	;# 
   268  0619                     	;# 
   269  061A                     	;# 
   270  061B                     	;# 
   271  061C                     	;# 
   272  061C                     	;# 
   273  061F                     	;# 
   274  0691                     	;# 
   275  0692                     	;# 
   276  0693                     	;# 
   277  0694                     	;# 
   278  0695                     	;# 
   279  0696                     	;# 
   280  0697                     	;# 
   281  0698                     	;# 
   282  0699                     	;# 
   283  0711                     	;# 
   284  0712                     	;# 
   285  0713                     	;# 
   286  0714                     	;# 
   287  0715                     	;# 
   288  0716                     	;# 
   289  0717                     	;# 
   290  0718                     	;# 
   291  0719                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0892                     	;# 
   299  0892                     	;# 
   300  0892                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0894                     	;# 
   308  0894                     	;# 
   309  0894                     	;# 
   310  0895                     	;# 
   311  0895                     	;# 
   312  0895                     	;# 
   313  0896                     	;# 
   314  0896                     	;# 
   315  0896                     	;# 
   316  089B                     	;# 
   317  0911                     	;# 
   318  0912                     	;# 
   319  0913                     	;# 
   320  0914                     	;# 
   321  0915                     	;# 
   322  0916                     	;# 
   323  0918                     	;# 
   324  0919                     	;# 
   325  091A                     	;# 
   326  091B                     	;# 
   327  091C                     	;# 
   328  091D                     	;# 
   329  091E                     	;# 
   330  091F                     	;# 
   331  0E0F                     	;# 
   332  0E10                     	;# 
   333  0E11                     	;# 
   334  0E12                     	;# 
   335  0E13                     	;# 
   336  0E14                     	;# 
   337  0E15                     	;# 
   338  0E16                     	;# 
   339  0E17                     	;# 
   340  0E18                     	;# 
   341  0E19                     	;# 
   342  0E1A                     	;# 
   343  0E1B                     	;# 
   344  0E1C                     	;# 
   345  0E20                     	;# 
   346  0E21                     	;# 
   347  0E22                     	;# 
   348  0E24                     	;# 
   349  0E25                     	;# 
   350  0E28                     	;# 
   351  0E29                     	;# 
   352  0E2A                     	;# 
   353  0E2B                     	;# 
   354  0E2C                     	;# 
   355  0E2D                     	;# 
   356  0E2E                     	;# 
   357  0E2F                     	;# 
   358  0E90                     	;# 
   359  0E91                     	;# 
   360  0E92                     	;# 
   361  0E94                     	;# 
   362  0E95                     	;# 
   363  0E9C                     	;# 
   364  0E9D                     	;# 
   365  0E9E                     	;# 
   366  0E9F                     	;# 
   367  0EA0                     	;# 
   368  0EA1                     	;# 
   369  0EA2                     	;# 
   370  0EA3                     	;# 
   371  0EA4                     	;# 
   372  0EA5                     	;# 
   373  0EA6                     	;# 
   374  0EA7                     	;# 
   375  0F0F                     	;# 
   376  0F10                     	;# 
   377  0F11                     	;# 
   378  0F12                     	;# 
   379  0F13                     	;# 
   380  0F14                     	;# 
   381  0F15                     	;# 
   382  0F16                     	;# 
   383  0F17                     	;# 
   384  0F18                     	;# 
   385  0F19                     	;# 
   386  0F1A                     	;# 
   387  0F1B                     	;# 
   388  0F1C                     	;# 
   389  0F1D                     	;# 
   390  0F1E                     	;# 
   391  0F1F                     	;# 
   392  0F20                     	;# 
   393  0F21                     	;# 
   394  0F22                     	;# 
   395  0F23                     	;# 
   396  0F24                     	;# 
   397  0F25                     	;# 
   398  0F26                     	;# 
   399  0F27                     	;# 
   400  0F28                     	;# 
   401  0F29                     	;# 
   402  0F2A                     	;# 
   403  0F2B                     	;# 
   404  0F2C                     	;# 
   405  0F2D                     	;# 
   406  0F2E                     	;# 
   407  0F2F                     	;# 
   408  0F30                     	;# 
   409  0F31                     	;# 
   410  0F32                     	;# 
   411  0F33                     	;# 
   412  0F34                     	;# 
   413  0F35                     	;# 
   414  0F36                     	;# 
   415  0F37                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  0008                     	;# 
   436  0009                     	;# 
   437  000A                     	;# 
   438  000B                     	;# 
   439  000C                     	;# 
   440  000D                     	;# 
   441  000E                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  0019                     	;# 
   455  001A                     	;# 
   456  001B                     	;# 
   457  001C                     	;# 
   458  001D                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0097                     	;# 
   470  009B                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  010E                     	;# 
   479  0111                     	;# 
   480  0112                     	;# 
   481  0113                     	;# 
   482  0114                     	;# 
   483  0115                     	;# 
   484  0116                     	;# 
   485  0117                     	;# 
   486  0118                     	;# 
   487  0119                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  018E                     	;# 
   491  0197                     	;# 
   492  0199                     	;# 
   493  0199                     	;# 
   494  0199                     	;# 
   495  019A                     	;# 
   496  019A                     	;# 
   497  019A                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019C                     	;# 
   504  019C                     	;# 
   505  019C                     	;# 
   506  019D                     	;# 
   507  019D                     	;# 
   508  019D                     	;# 
   509  019E                     	;# 
   510  019E                     	;# 
   511  019E                     	;# 
   512  019F                     	;# 
   513  019F                     	;# 
   514  019F                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  020C                     	;# 
   518  020D                     	;# 
   519  020E                     	;# 
   520  0211                     	;# 
   521  0211                     	;# 
   522  0212                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0213                     	;# 
   526  0214                     	;# 
   527  0214                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0216                     	;# 
   533  0216                     	;# 
   534  0217                     	;# 
   535  0217                     	;# 
   536  028C                     	;# 
   537  028D                     	;# 
   538  028E                     	;# 
   539  0291                     	;# 
   540  0291                     	;# 
   541  0292                     	;# 
   542  0293                     	;# 
   543  0294                     	;# 
   544  0295                     	;# 
   545  0295                     	;# 
   546  0296                     	;# 
   547  0297                     	;# 
   548  0298                     	;# 
   549  029F                     	;# 
   550  030C                     	;# 
   551  030D                     	;# 
   552  030E                     	;# 
   553  0311                     	;# 
   554  0311                     	;# 
   555  0312                     	;# 
   556  0313                     	;# 
   557  0314                     	;# 
   558  0315                     	;# 
   559  0315                     	;# 
   560  0316                     	;# 
   561  0317                     	;# 
   562  0318                     	;# 
   563  038C                     	;# 
   564  038D                     	;# 
   565  038E                     	;# 
   566  0391                     	;# 
   567  0392                     	;# 
   568  0393                     	;# 
   569  0394                     	;# 
   570  0395                     	;# 
   571  0396                     	;# 
   572  0397                     	;# 
   573  0398                     	;# 
   574  0399                     	;# 
   575  039A                     	;# 
   576  039C                     	;# 
   577  039D                     	;# 
   578  039E                     	;# 
   579  039F                     	;# 
   580  0411                     	;# 
   581  0411                     	;# 
   582  0412                     	;# 
   583  0413                     	;# 
   584  0414                     	;# 
   585  0415                     	;# 
   586  0416                     	;# 
   587  0417                     	;# 
   588  0418                     	;# 
   589  0418                     	;# 
   590  0419                     	;# 
   591  041A                     	;# 
   592  041B                     	;# 
   593  041C                     	;# 
   594  041D                     	;# 
   595  041E                     	;# 
   596  041F                     	;# 
   597  0498                     	;# 
   598  0498                     	;# 
   599  0499                     	;# 
   600  049A                     	;# 
   601  049B                     	;# 
   602  049B                     	;# 
   603  049C                     	;# 
   604  049D                     	;# 
   605  049E                     	;# 
   606  049F                     	;# 
   607  0617                     	;# 
   608  0618                     	;# 
   609  0619                     	;# 
   610  0619                     	;# 
   611  061A                     	;# 
   612  061B                     	;# 
   613  061C                     	;# 
   614  061C                     	;# 
   615  061F                     	;# 
   616  0691                     	;# 
   617  0692                     	;# 
   618  0693                     	;# 
   619  0694                     	;# 
   620  0695                     	;# 
   621  0696                     	;# 
   622  0697                     	;# 
   623  0698                     	;# 
   624  0699                     	;# 
   625  0711                     	;# 
   626  0712                     	;# 
   627  0713                     	;# 
   628  0714                     	;# 
   629  0715                     	;# 
   630  0716                     	;# 
   631  0717                     	;# 
   632  0718                     	;# 
   633  0719                     	;# 
   634  0891                     	;# 
   635  0891                     	;# 
   636  0891                     	;# 
   637  0891                     	;# 
   638  0891                     	;# 
   639  0891                     	;# 
   640  0892                     	;# 
   641  0892                     	;# 
   642  0892                     	;# 
   643  0893                     	;# 
   644  0893                     	;# 
   645  0893                     	;# 
   646  0893                     	;# 
   647  0893                     	;# 
   648  0893                     	;# 
   649  0894                     	;# 
   650  0894                     	;# 
   651  0894                     	;# 
   652  0895                     	;# 
   653  0895                     	;# 
   654  0895                     	;# 
   655  0896                     	;# 
   656  0896                     	;# 
   657  0896                     	;# 
   658  089B                     	;# 
   659  0911                     	;# 
   660  0912                     	;# 
   661  0913                     	;# 
   662  0914                     	;# 
   663  0915                     	;# 
   664  0916                     	;# 
   665  0918                     	;# 
   666  0919                     	;# 
   667  091A                     	;# 
   668  091B                     	;# 
   669  091C                     	;# 
   670  091D                     	;# 
   671  091E                     	;# 
   672  091F                     	;# 
   673  0E0F                     	;# 
   674  0E10                     	;# 
   675  0E11                     	;# 
   676  0E12                     	;# 
   677  0E13                     	;# 
   678  0E14                     	;# 
   679  0E15                     	;# 
   680  0E16                     	;# 
   681  0E17                     	;# 
   682  0E18                     	;# 
   683  0E19                     	;# 
   684  0E1A                     	;# 
   685  0E1B                     	;# 
   686  0E1C                     	;# 
   687  0E20                     	;# 
   688  0E21                     	;# 
   689  0E22                     	;# 
   690  0E24                     	;# 
   691  0E25                     	;# 
   692  0E28                     	;# 
   693  0E29                     	;# 
   694  0E2A                     	;# 
   695  0E2B                     	;# 
   696  0E2C                     	;# 
   697  0E2D                     	;# 
   698  0E2E                     	;# 
   699  0E2F                     	;# 
   700  0E90                     	;# 
   701  0E91                     	;# 
   702  0E92                     	;# 
   703  0E94                     	;# 
   704  0E95                     	;# 
   705  0E9C                     	;# 
   706  0E9D                     	;# 
   707  0E9E                     	;# 
   708  0E9F                     	;# 
   709  0EA0                     	;# 
   710  0EA1                     	;# 
   711  0EA2                     	;# 
   712  0EA3                     	;# 
   713  0EA4                     	;# 
   714  0EA5                     	;# 
   715  0EA6                     	;# 
   716  0EA7                     	;# 
   717  0F0F                     	;# 
   718  0F10                     	;# 
   719  0F11                     	;# 
   720  0F12                     	;# 
   721  0F13                     	;# 
   722  0F14                     	;# 
   723  0F15                     	;# 
   724  0F16                     	;# 
   725  0F17                     	;# 
   726  0F18                     	;# 
   727  0F19                     	;# 
   728  0F1A                     	;# 
   729  0F1B                     	;# 
   730  0F1C                     	;# 
   731  0F1D                     	;# 
   732  0F1E                     	;# 
   733  0F1F                     	;# 
   734  0F20                     	;# 
   735  0F21                     	;# 
   736  0F22                     	;# 
   737  0F23                     	;# 
   738  0F24                     	;# 
   739  0F25                     	;# 
   740  0F26                     	;# 
   741  0F27                     	;# 
   742  0F28                     	;# 
   743  0F29                     	;# 
   744  0F2A                     	;# 
   745  0F2B                     	;# 
   746  0F2C                     	;# 
   747  0F2D                     	;# 
   748  0F2E                     	;# 
   749  0F2F                     	;# 
   750  0F30                     	;# 
   751  0F31                     	;# 
   752  0F32                     	;# 
   753  0F33                     	;# 
   754  0F34                     	;# 
   755  0F35                     	;# 
   756  0F36                     	;# 
   757  0F37                     	;# 
   758  0FE4                     	;# 
   759  0FE5                     	;# 
   760  0FE6                     	;# 
   761  0FE7                     	;# 
   762  0FE8                     	;# 
   763  0FE9                     	;# 
   764  0FEA                     	;# 
   765  0FEB                     	;# 
   766  0FED                     	;# 
   767  0FEE                     	;# 
   768  0FEF                     	;# 
   769  000D                     _PORTB	set	13
   770  006F                     _RB7	set	111
   771  006E                     _RB6	set	110
   772  006D                     _RB5	set	109
   773  006C                     _RB4	set	108
   774  0073                     _RC3	set	115
   775  0071                     _RC1	set	113
   776  0074                     _RC4	set	116
   777  0075                     _RC5	set	117
   778  0076                     _RC6	set	118
   779  0077                     _RC7	set	119
   780  0070                     _RC0	set	112
   781  008C                     _TRISA	set	140
   782  008D                     _TRISB	set	141
   783  008E                     _TRISC	set	142
   784  010E                     _LATC	set	270
   785  018D                     _ANSELB	set	397
   786  018E                     _ANSELC	set	398
   787                           
   788                           	psect	stringtext1
   789  0800                     __pstringtext1:
   790  0800                     STR_8:
   791  0800  3444               	retlw	68	;'D'
   792  0801  3461               	retlw	97	;'a'
   793  0802  3474               	retlw	116	;'t'
   794  0803  3461               	retlw	97	;'a'
   795  0804  3420               	retlw	32	;' '
   796  0805  346F               	retlw	111	;'o'
   797  0806  346E               	retlw	110	;'n'
   798  0807  3420               	retlw	32	;' '
   799  0808  3450               	retlw	80	;'P'
   800  0809  344F               	retlw	79	;'O'
   801  080A  3452               	retlw	82	;'R'
   802  080B  3454               	retlw	84	;'T'
   803  080C  3442               	retlw	66	;'B'
   804  080D  343A               	retlw	58	;':'
   805  080E  3400               	retlw	0
   806                           
   807                           	psect	stringtext2
   808  080F                     __pstringtext2:
   809  080F                     STR_9:
   810  080F  3453               	retlw	83	;'S'
   811  0810  3479               	retlw	121	;'y'
   812  0811  3473               	retlw	115	;'s'
   813  0812  3474               	retlw	116	;'t'
   814  0813  3465               	retlw	101	;'e'
   815  0814  346D               	retlw	109	;'m'
   816  0815  3420               	retlw	32	;' '
   817  0816  3473               	retlw	115	;'s'
   818  0817  3474               	retlw	116	;'t'
   819  0818  3461               	retlw	97	;'a'
   820  0819  3474               	retlw	116	;'t'
   821  081A  3475               	retlw	117	;'u'
   822  081B  3473               	retlw	115	;'s'
   823  081C  343A               	retlw	58	;':'
   824  081D  3400               	retlw	0
   825                           
   826                           	psect	stringtext3
   827  081E                     __pstringtext3:
   828  081E                     STR_6:
   829  081E  3441               	retlw	65	;'A'
   830  081F  3469               	retlw	105	;'i'
   831  0820  3472               	retlw	114	;'r'
   832  0821  3420               	retlw	32	;' '
   833  0822  3450               	retlw	80	;'P'
   834  0823  3472               	retlw	114	;'r'
   835  0824  3465               	retlw	101	;'e'
   836  0825  3473               	retlw	115	;'s'
   837  0826  3473               	retlw	115	;'s'
   838  0827  3475               	retlw	117	;'u'
   839  0828  3472               	retlw	114	;'r'
   840  0829  3465               	retlw	101	;'e'
   841  082A  343A               	retlw	58	;':'
   842  082B  3400               	retlw	0
   843                           
   844                           	psect	stringtext4
   845  082C                     __pstringtext4:
   846  082C                     STR_2:
   847  082C  3454               	retlw	84	;'T'
   848  082D  3465               	retlw	101	;'e'
   849  082E  346D               	retlw	109	;'m'
   850  082F  3470               	retlw	112	;'p'
   851  0830  3465               	retlw	101	;'e'
   852  0831  3472               	retlw	114	;'r'
   853  0832  3461               	retlw	97	;'a'
   854  0833  3474               	retlw	116	;'t'
   855  0834  3475               	retlw	117	;'u'
   856  0835  3472               	retlw	114	;'r'
   857  0836  3465               	retlw	101	;'e'
   858  0837  343A               	retlw	58	;':'
   859  0838  3400               	retlw	0
   860                           
   861                           	psect	stringtext5
   862  0839                     __pstringtext5:
   863  0839                     STR_4:
   864  0839  3457               	retlw	87	;'W'
   865  083A  3469               	retlw	105	;'i'
   866  083B  346E               	retlw	110	;'n'
   867  083C  3464               	retlw	100	;'d'
   868  083D  3420               	retlw	32	;' '
   869  083E  3453               	retlw	83	;'S'
   870  083F  3470               	retlw	112	;'p'
   871  0840  3465               	retlw	101	;'e'
   872  0841  3465               	retlw	101	;'e'
   873  0842  3464               	retlw	100	;'d'
   874  0843  343A               	retlw	58	;':'
   875  0844  3400               	retlw	0
   876                           
   877                           	psect	stringtext6
   878  0845                     __pstringtext6:
   879  0845                     STR_12:
   880  0845  3452               	retlw	82	;'R'
   881  0846  3445               	retlw	69	;'E'
   882  0847  3443               	retlw	67	;'C'
   883  0848  3445               	retlw	69	;'E'
   884  0849  3449               	retlw	73	;'I'
   885  084A  3456               	retlw	86	;'V'
   886  084B  3449               	retlw	73	;'I'
   887  084C  344E               	retlw	78	;'N'
   888  084D  3447               	retlw	71	;'G'
   889  084E  3400               	retlw	0
   890                           
   891                           	psect	stringtext7
   892  084F                     __pstringtext7:
   893  084F                     STR_14:
   894  084F  344E               	retlw	78	;'N'
   895  0850  344F               	retlw	79	;'O'
   896  0851  3420               	retlw	32	;' '
   897  0852  3453               	retlw	83	;'S'
   898  0853  3449               	retlw	73	;'I'
   899  0854  3447               	retlw	71	;'G'
   900  0855  344E               	retlw	78	;'N'
   901  0856  3441               	retlw	65	;'A'
   902  0857  344C               	retlw	76	;'L'
   903  0858  3400               	retlw	0
   904                           
   905                           	psect	stringtext8
   906  0859                     __pstringtext8:
   907  0859                     STR_10:
   908  0859  3442               	retlw	66	;'B'
   909  085A  344F               	retlw	79	;'O'
   910  085B  344F               	retlw	79	;'O'
   911  085C  3454               	retlw	84	;'T'
   912  085D  3449               	retlw	73	;'I'
   913  085E  344E               	retlw	78	;'N'
   914  085F  3447               	retlw	71	;'G'
   915  0860  3400               	retlw	0
   916                           
   917                           	psect	stringtext9
   918  0861                     __pstringtext9:
   919  0861                     STR_5:
   920  0861  3420               	retlw	32	;' '
   921  0862  344D               	retlw	77	;'M'
   922  0863  3450               	retlw	80	;'P'
   923  0864  3448               	retlw	72	;'H'
   924  0865  3400               	retlw	0
   925                           
   926                           	psect	stringtext10
   927  0866                     __pstringtext10:
   928  0866                     STR_7:
   929  0866  3420               	retlw	32	;' '
   930  0867  346B               	retlw	107	;'k'
   931  0868  3450               	retlw	80	;'P'
   932  0869  3461               	retlw	97	;'a'
   933  086A  3400               	retlw	0
   934                           
   935                           	psect	stringtext11
   936  086B                     __pstringtext11:
   937  086B                     STR_1:
   938  086B  3425               	retlw	37	;'%'
   939  086C  3464               	retlw	100	;'d'
   940  086D  3400               	retlw	0
   941                           
   942                           	psect	stringtext12
   943  086E                     __pstringtext12:
   944  086E                     STR_3:
   945  086E  3446               	retlw	70	;'F'
   946  086F  3400               	retlw	0
   947                           
   948                           	psect	stringtext13
   949  0000                     __pstringtext13:
   950  080F                     
   951                           	psect	cinit
   952  07F5                     start_initialization:	
   953                           ; #config settings
   954                           
   955  07F5                     __initialization:
   956                           
   957                           ; Clear objects allocated to BANK1
   958  07F5  30A0               	movlw	low __pbssBANK1
   959  07F6  0084               	movwf	4
   960  07F7  3000               	movlw	high __pbssBANK1
   961  07F8  0085               	movwf	5
   962  07F9  3028               	movlw	40
   963  07FA  318E  2639  3187   	fcall	clear_ram0
   964  07FD                     end_of_initialization:	
   965                           ;End of C runtime variable initialization code
   966                           
   967  07FD                     __end_of__initialization:
   968  07FD  0020               	movlb	0
   969  07FE  3180  28D6         	ljmp	_main	;jump to C main() function
   970                           
   971                           	psect	bssBANK1
   972  00A0                     __pbssBANK1:
   973  00A0                     _nout:
   974  00A0                     	ds	2
   975  00A2                     _width:
   976  00A2                     	ds	2
   977  00A4                     _prec:
   978  00A4                     	ds	2
   979  00A6                     _flags:
   980  00A6                     	ds	2
   981  00A8                     _dbuf:
   982  00A8                     	ds	32
   983                           
   984                           	psect	clrtext
   985  0E39                     clear_ram0:	
   986                           ;	Called with FSR0 containing the base address, and
   987                           ;	WREG with the size to clear
   988                           
   989  0E39  0064               	clrwdt	;clear the watchdog before getting into this loop
   990  0E3A                     clrloop0:
   991  0E3A  0180               	clrf	0	;clear RAM location pointed to by FSR
   992  0E3B  3101               	addfsr 0,1
   993  0E3C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   994  0E3D  2E3A               	goto	clrloop0	;have we reached the end yet?
   995  0E3E  3400               	retlw	0	;all done for this memory range, return
   996                           
   997                           	psect	cstackBANK1
   998  00C8                     __pcstackBANK1:
   999  00C8                     	ds	2
  1000  00CA                     sprintf@ap:
  1001                           
  1002                           ; 1 bytes @ 0x2
  1003  00CA                     	ds	1
  1004  00CB                     sprintf@s:
  1005                           
  1006                           ; 1 bytes @ 0x3
  1007  00CB                     	ds	1
  1008  00CC                     sprintf@f:
  1009                           
  1010                           ; 5 bytes @ 0x4
  1011  00CC                     	ds	5
  1012  00D1                     LCD_Print_num@str:
  1013                           
  1014                           ; 10 bytes @ 0x9
  1015  00D1                     	ds	10
  1016  00DB                     ?_Print_DTMF_data:
  1017  00DB                     Print_DTMF_data@temp:	
  1018                           ; 1 bytes @ 0x13
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x13
  1022  00DB                     	ds	2
  1023  00DD                     Print_DTMF_data@speed:
  1024                           
  1025                           ; 2 bytes @ 0x15
  1026  00DD                     	ds	2
  1027  00DF                     Print_DTMF_data@press:
  1028                           
  1029                           ; 2 bytes @ 0x17
  1030  00DF                     	ds	2
  1031  00E1                     read_DTMF_Data@temp:
  1032                           
  1033                           ; 2 bytes @ 0x19
  1034  00E1                     	ds	2
  1035  00E3                     read_DTMF_Data@wind:
  1036                           
  1037                           ; 2 bytes @ 0x1B
  1038  00E3                     	ds	2
  1039  00E5                     read_DTMF_Data@press:
  1040                           
  1041                           ; 2 bytes @ 0x1D
  1042  00E5                     	ds	2
  1043  00E7                     read_DTMF_Data@up:
  1044                           
  1045                           ; 2 bytes @ 0x1F
  1046  00E7                     	ds	2
  1047  00E9                     read_DTMF_Data@low:
  1048                           
  1049                           ; 2 bytes @ 0x21
  1050  00E9                     	ds	2
  1051  00EB                     ??_main:
  1052                           
  1053                           ; 1 bytes @ 0x23
  1054  00EB                     	ds	2
  1055                           
  1056                           	psect	cstackCOMMON
  1057  0070                     __pcstackCOMMON:
  1058  0070                     ?_send_CMD:
  1059  0070                     ?_LDC_clear:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_Lcd_SetBit:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ??_Lcd_SetBit:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_putch:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ??_putch:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_LCD_init:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_Lcd_Print_Char:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_DTMF_start:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ??_DTMF_start:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_read_DTMF_Data:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_main:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ??___aodiv:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ??___aomod:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_fputc:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_strlen:	
  1102                           ; 2 bytes @ 0x0
  1103                           
  1104  0070                     Lcd_SetBit@data_bit:	
  1105                           ; 2 bytes @ 0x0
  1106                           
  1107  0070                     putch@c:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     send_CMD@d7:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     fputc@c:	
  1114                           ; 2 bytes @ 0x0
  1115                           
  1116                           
  1117                           ; 2 bytes @ 0x0
  1118  0070                     	ds	1
  1119  0071                     ??_Lcd_Print_Char:
  1120  0071                     ___aodiv@counter:	
  1121                           ; 1 bytes @ 0x1
  1122                           
  1123  0071                     ___aomod@counter:	
  1124                           ; 1 bytes @ 0x1
  1125                           
  1126                           
  1127                           ; 1 bytes @ 0x1
  1128  0071                     	ds	1
  1129  0072                     ??_strlen:
  1130  0072                     Lcd_Print_Char@Lower_Nibble:	
  1131                           ; 1 bytes @ 0x2
  1132                           
  1133  0072                     ___aodiv@sign:	
  1134                           ; 1 bytes @ 0x2
  1135                           
  1136  0072                     ___aomod@sign:	
  1137                           ; 1 bytes @ 0x2
  1138                           
  1139  0072                     fputc@fp:	
  1140                           ; 1 bytes @ 0x2
  1141                           
  1142  0072                     send_CMD@d6:	
  1143                           ; 1 bytes @ 0x2
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x2
  1147  0072                     	ds	1
  1148  0073                     ??_fputc:
  1149  0073                     ?_abs:	
  1150                           ; 1 bytes @ 0x3
  1151                           
  1152  0073                     Lcd_Print_Char@Upper_Nibble:	
  1153                           ; 2 bytes @ 0x3
  1154                           
  1155  0073                     strlen@a:	
  1156                           ; 1 bytes @ 0x3
  1157                           
  1158  0073                     abs@a:	
  1159                           ; 1 bytes @ 0x3
  1160                           
  1161  0073                     ___aodiv@quotient:	
  1162                           ; 2 bytes @ 0x3
  1163                           
  1164                           
  1165                           ; 8 bytes @ 0x3
  1166  0073                     	ds	1
  1167  0074                     Lcd_Print_Char@data:
  1168  0074                     strlen@s:	
  1169                           ; 1 bytes @ 0x4
  1170                           
  1171  0074                     send_CMD@d5:	
  1172                           ; 1 bytes @ 0x4
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x4
  1176  0074                     	ds	1
  1177  0075                     ??_abs:
  1178  0075                     ?_Lcd_Print_String:	
  1179                           ; 1 bytes @ 0x5
  1180                           
  1181  0075                     Lcd_Print_String@a:	
  1182                           ; 1 bytes @ 0x5
  1183                           
  1184                           
  1185                           ; 2 bytes @ 0x5
  1186  0075                     	ds	1
  1187  0076                     send_CMD@d4:
  1188                           
  1189                           ; 2 bytes @ 0x6
  1190  0076                     	ds	1
  1191  0077                     ??_Lcd_Print_String:
  1192                           
  1193                           ; 1 bytes @ 0x7
  1194  0077                     	ds	1
  1195  0078                     ??_send_CMD:
  1196  0078                     ?_fputs:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199  0078                     fputs@fp:	
  1200                           ; 2 bytes @ 0x8
  1201                           
  1202  0078                     Lcd_Print_String@i:	
  1203                           ; 1 bytes @ 0x8
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0x8
  1207  0078                     	ds	1
  1208  0079                     ?_LCD_row_set:
  1209  0079                     ??_LDC_clear:	
  1210                           ; 1 bytes @ 0x9
  1211                           
  1212  0079                     ??_fputs:	
  1213                           ; 1 bytes @ 0x9
  1214                           
  1215  0079                     LCD_row_set@row:	
  1216                           ; 1 bytes @ 0x9
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0x9
  1220  0079                     	ds	2
  1221  007B                     ??_LCD_row_set:
  1222  007B                     ??_LCD_init:	
  1223                           ; 1 bytes @ 0xB
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0xB
  1227  007B                     	ds	1
  1228  007C                     ??_pad:
  1229                           
  1230                           ; 1 bytes @ 0xC
  1231  007C                     	ds	1
  1232  007D                     ??_sprintf:
  1233                           
  1234                           ; 1 bytes @ 0xD
  1235  007D                     	ds	1
  1236  007E                     ??_LCD_Print_num:
  1237                           
  1238                           	psect	cstackBANK0
  1239  0020                     __pcstackBANK0:	
  1240                           ; 1 bytes @ 0xE
  1241                           
  1242  0020                     ?___aodiv:
  1243  0020                     ?___aomod:	
  1244                           ; 8 bytes @ 0x0
  1245                           
  1246  0020                     fputs@c:	
  1247                           ; 8 bytes @ 0x0
  1248                           
  1249  0020                     ___aodiv@divisor:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0020                     ___aomod@divisor:	
  1253                           ; 8 bytes @ 0x0
  1254                           
  1255                           
  1256                           ; 8 bytes @ 0x0
  1257  0020                     	ds	1
  1258  0021                     fputs@i:
  1259                           
  1260                           ; 2 bytes @ 0x1
  1261  0021                     	ds	2
  1262  0023                     fputs@s:
  1263                           
  1264                           ; 1 bytes @ 0x3
  1265  0023                     	ds	1
  1266  0024                     ?_pad:
  1267  0024                     pad@buf:	
  1268                           ; 2 bytes @ 0x4
  1269                           
  1270                           
  1271                           ; 1 bytes @ 0x4
  1272  0024                     	ds	1
  1273  0025                     pad@p:
  1274                           
  1275                           ; 2 bytes @ 0x5
  1276  0025                     	ds	2
  1277  0027                     pad@i:
  1278                           
  1279                           ; 2 bytes @ 0x7
  1280  0027                     	ds	1
  1281  0028                     ___aodiv@dividend:
  1282  0028                     ___aomod@dividend:	
  1283                           ; 8 bytes @ 0x8
  1284                           
  1285                           
  1286                           ; 8 bytes @ 0x8
  1287  0028                     	ds	1
  1288  0029                     pad@w:
  1289                           
  1290                           ; 2 bytes @ 0x9
  1291  0029                     	ds	2
  1292  002B                     pad@fp:
  1293                           
  1294                           ; 1 bytes @ 0xB
  1295  002B                     	ds	5
  1296  0030                     ?_dtoa:
  1297  0030                     dtoa@d:	
  1298                           ; 2 bytes @ 0x10
  1299                           
  1300                           
  1301                           ; 8 bytes @ 0x10
  1302  0030                     	ds	8
  1303  0038                     ??_dtoa:
  1304                           
  1305                           ; 1 bytes @ 0x18
  1306  0038                     	ds	3
  1307  003B                     _dtoa$662:
  1308                           
  1309                           ; 2 bytes @ 0x1B
  1310  003B                     	ds	2
  1311  003D                     dtoa@fp:
  1312                           
  1313                           ; 1 bytes @ 0x1D
  1314  003D                     	ds	1
  1315  003E                     dtoa@p:
  1316                           
  1317                           ; 2 bytes @ 0x1E
  1318  003E                     	ds	2
  1319  0040                     dtoa@w:
  1320                           
  1321                           ; 2 bytes @ 0x20
  1322  0040                     	ds	2
  1323  0042                     dtoa@s:
  1324                           
  1325                           ; 2 bytes @ 0x22
  1326  0042                     	ds	2
  1327  0044                     dtoa@n:
  1328                           
  1329                           ; 8 bytes @ 0x24
  1330  0044                     	ds	8
  1331  004C                     dtoa@i:
  1332                           
  1333                           ; 2 bytes @ 0x2C
  1334  004C                     	ds	2
  1335  004E                     ?_vfpfcnvrt:
  1336  004E                     vfpfcnvrt@fmt:	
  1337                           ; 2 bytes @ 0x2E
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x2E
  1341  004E                     	ds	1
  1342  004F                     vfpfcnvrt@ap:
  1343                           
  1344                           ; 1 bytes @ 0x2F
  1345  004F                     	ds	1
  1346  0050                     ??_vfpfcnvrt:
  1347                           
  1348                           ; 1 bytes @ 0x30
  1349  0050                     	ds	5
  1350  0055                     vfpfcnvrt@ll:
  1351                           
  1352                           ; 8 bytes @ 0x35
  1353  0055                     	ds	8
  1354  005D                     vfpfcnvrt@fp:
  1355                           
  1356                           ; 1 bytes @ 0x3D
  1357  005D                     	ds	1
  1358  005E                     ?_vfprintf:
  1359  005E                     vfprintf@fmt:	
  1360                           ; 2 bytes @ 0x3E
  1361                           
  1362                           
  1363                           ; 2 bytes @ 0x3E
  1364  005E                     	ds	2
  1365  0060                     vfprintf@ap:
  1366                           
  1367                           ; 1 bytes @ 0x40
  1368  0060                     	ds	1
  1369  0061                     ??_vfprintf:
  1370                           
  1371                           ; 1 bytes @ 0x41
  1372  0061                     	ds	2
  1373  0063                     vfprintf@fp:
  1374                           
  1375                           ; 1 bytes @ 0x43
  1376  0063                     	ds	1
  1377  0064                     vfprintf@cfmt:
  1378                           
  1379                           ; 2 bytes @ 0x44
  1380  0064                     	ds	2
  1381  0066                     ?_sprintf:
  1382  0066                     sprintf@fmt:	
  1383                           ; 2 bytes @ 0x46
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x46
  1387  0066                     	ds	4
  1388  006A                     ?_LCD_Print_num:
  1389  006A                     LCD_Print_num@num:	
  1390                           ; 1 bytes @ 0x4A
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x4A
  1394  006A                     	ds	2
  1395  006C                     ??_Print_DTMF_data:
  1396                           
  1397                           ; 1 bytes @ 0x4C
  1398  006C                     	ds	2
  1399  006E                     ??_read_DTMF_Data:
  1400                           
  1401                           ; 1 bytes @ 0x4E
  1402  006E                     	ds	2
  1403                           
  1404                           	psect	maintext
  1405  00D6                     __pmaintext:	
  1406 ;;
  1407 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1408 ;;
  1409 ;; *************** function _main *****************
  1410 ;; Defined at:
  1411 ;;		line 10 in file "Main.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : B1F/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1425 ;;      Params:         0       0       0       0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       2       0       0       0       0       0
  1428 ;;      Totals:         0       0       2       0       0       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels required when called:   11
  1431 ;; This function calls:
  1432 ;;		_DTMF_start
  1433 ;;		_LCD_init
  1434 ;;		_LCD_row_set
  1435 ;;		_LDC_clear
  1436 ;;		_Lcd_Print_String
  1437 ;;		_read_DTMF_Data
  1438 ;; This function is called by:
  1439 ;;		Startup code after reset
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _main
  1445  00D6                     _main:
  1446  00D6                     l1796:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1449                           
  1450                           
  1451                           ;Main.c: 12:     LATC = 0;
  1452  00D6  0022               	movlb	2	; select bank2
  1453  00D7  018E               	clrf	14	;volatile
  1454  00D8                     l1798:
  1455                           
  1456                           ;Main.c: 13:     TRISC = 0b00001000;
  1457  00D8  3008               	movlw	8
  1458  00D9  0021               	movlb	1	; select bank1
  1459  00DA  008E               	movwf	14	;volatile
  1460  00DB                     l1800:
  1461                           
  1462                           ;Main.c: 14:     ANSELC = 0;
  1463  00DB  0023               	movlb	3	; select bank3
  1464  00DC  018E               	clrf	14	;volatile
  1465                           
  1466                           ;Main.c: 16:     TRISB = 0b11110000;
  1467  00DD  30F0               	movlw	240
  1468  00DE  0021               	movlb	1	; select bank1
  1469  00DF  008D               	movwf	13	;volatile
  1470  00E0                     l1802:
  1471                           
  1472                           ;Main.c: 17:     ANSELB = 0;
  1473  00E0  0023               	movlb	3	; select bank3
  1474  00E1  018D               	clrf	13	;volatile
  1475  00E2                     l1804:
  1476                           
  1477                           ;Main.c: 19:     TRISA = 0b00000100;
  1478  00E2  3004               	movlw	4
  1479  00E3  0021               	movlb	1	; select bank1
  1480  00E4  008C               	movwf	12	;volatile
  1481                           
  1482                           ;Main.c: 20:     ANSELB = 0;
  1483  00E5  0023               	movlb	3	; select bank3
  1484  00E6  018D               	clrf	13	;volatile
  1485  00E7                     l1806:
  1486                           
  1487                           ;Main.c: 23:     LCD_init();
  1488  00E7  3182  2210  3180   	fcall	_LCD_init
  1489  00EA                     l1808:
  1490                           
  1491                           ;Main.c: 24:     Lcd_Print_String("System status:");
  1492  00EA  300F               	movlw	low (STR_9| (0+32768))
  1493  00EB  00F5               	movwf	Lcd_Print_String@a
  1494  00EC  3088               	movlw	high (STR_9| (0+32768))
  1495  00ED  00F6               	movwf	Lcd_Print_String@a+1
  1496  00EE  318E  26A0  3180   	fcall	_Lcd_Print_String
  1497  00F1                     l1810:
  1498                           
  1499                           ;Main.c: 25:     LCD_row_set(2);
  1500  00F1  3002               	movlw	2
  1501  00F2  00F9               	movwf	LCD_row_set@row
  1502  00F3  3000               	movlw	0
  1503  00F4  00FA               	movwf	LCD_row_set@row+1
  1504  00F5  318F  27B3  3180   	fcall	_LCD_row_set
  1505  00F8                     l1812:
  1506                           
  1507                           ;Main.c: 26:     Lcd_Print_String("BOOTING");
  1508  00F8  3059               	movlw	low (STR_10| (0+32768))
  1509  00F9  00F5               	movwf	Lcd_Print_String@a
  1510  00FA  3088               	movlw	high (STR_10| (0+32768))
  1511  00FB  00F6               	movwf	Lcd_Print_String@a+1
  1512  00FC  318E  26A0  3180   	fcall	_Lcd_Print_String
  1513  00FF                     l1814:
  1514                           
  1515                           ;Main.c: 27:     LCD_row_set(1);
  1516  00FF  3001               	movlw	1
  1517  0100  00F9               	movwf	LCD_row_set@row
  1518  0101  3000               	movlw	0
  1519  0102  00FA               	movwf	LCD_row_set@row+1
  1520  0103  318F  27B3  3180   	fcall	_LCD_row_set
  1521  0106                     l1816:
  1522                           
  1523                           ;Main.c: 28:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  1524  0106  301F               	movlw	31
  1525  0107  0021               	movlb	1	; select bank1
  1526  0108  00EC               	movwf	(??_main^(0+128)+1)
  1527  0109  3071               	movlw	113
  1528  010A  00EB               	movwf	??_main^(0+128)
  1529  010B  301E               	movlw	30
  1530  010C                     u1387:
  1531  010C  0B89               	decfsz	9,f
  1532  010D  290C               	goto	u1387
  1533  010E  0BEB               	decfsz	??_main^(0+128),f
  1534  010F  290C               	goto	u1387
  1535  0110  0BEC               	decfsz	(??_main^(0+128)+1),f
  1536  0111  290C               	goto	u1387
  1537  0112  0000               	nop
  1538  0113                     l1818:
  1539                           
  1540                           ;Main.c: 29:     LDC_clear();
  1541  0113  318E  26BD  3180   	fcall	_LDC_clear
  1542  0116                     l1820:
  1543                           
  1544                           ;Main.c: 32:       if(DTMF_start()){
  1545  0116  318E  2654  3180   	fcall	_DTMF_start
  1546  0119  3A00               	xorlw	0
  1547  011A  1903               	skipnz
  1548  011B  291D               	goto	u1371
  1549  011C  291E               	goto	u1370
  1550  011D                     u1371:
  1551  011D  2937               	goto	l1830
  1552  011E                     u1370:
  1553  011E                     l1822:
  1554                           
  1555                           ;Main.c: 33:         Lcd_Print_String("System status:");
  1556  011E  300F               	movlw	low (STR_9| (0+32768))
  1557  011F  00F5               	movwf	Lcd_Print_String@a
  1558  0120  3088               	movlw	high (STR_9| (0+32768))
  1559  0121  00F6               	movwf	Lcd_Print_String@a+1
  1560  0122  318E  26A0  3180   	fcall	_Lcd_Print_String
  1561  0125                     l1824:
  1562                           
  1563                           ;Main.c: 34:         LCD_row_set(2);
  1564  0125  3002               	movlw	2
  1565  0126  00F9               	movwf	LCD_row_set@row
  1566  0127  3000               	movlw	0
  1567  0128  00FA               	movwf	LCD_row_set@row+1
  1568  0129  318F  27B3  3180   	fcall	_LCD_row_set
  1569  012C                     l1826:
  1570                           
  1571                           ;Main.c: 35:         Lcd_Print_String("RECEIVING");
  1572  012C  3045               	movlw	low (STR_12| (0+32768))
  1573  012D  00F5               	movwf	Lcd_Print_String@a
  1574  012E  3088               	movlw	high (STR_12| (0+32768))
  1575  012F  00F6               	movwf	Lcd_Print_String@a+1
  1576  0130  318E  26A0  3180   	fcall	_Lcd_Print_String
  1577  0133                     l1828:
  1578                           
  1579                           ;Main.c: 36:         read_DTMF_Data();
  1580  0133  3182  22E8  3180   	fcall	_read_DTMF_Data
  1581                           
  1582                           ;Main.c: 37:       }
  1583  0136  2916               	goto	l1820
  1584  0137                     l1830:
  1585                           
  1586                           ;Main.c: 39:       LCD_row_set(1);
  1587  0137  3001               	movlw	1
  1588  0138  00F9               	movwf	LCD_row_set@row
  1589  0139  3000               	movlw	0
  1590  013A  00FA               	movwf	LCD_row_set@row+1
  1591  013B  318F  27B3  3180   	fcall	_LCD_row_set
  1592  013E                     l1832:
  1593                           
  1594                           ;Main.c: 40:       Lcd_Print_String("System status:");
  1595  013E  300F               	movlw	low (STR_9| (0+32768))
  1596  013F  00F5               	movwf	Lcd_Print_String@a
  1597  0140  3088               	movlw	high (STR_9| (0+32768))
  1598  0141  00F6               	movwf	Lcd_Print_String@a+1
  1599  0142  318E  26A0  3180   	fcall	_Lcd_Print_String
  1600  0145                     l1834:
  1601                           
  1602                           ;Main.c: 41:       LCD_row_set(2);
  1603  0145  3002               	movlw	2
  1604  0146  00F9               	movwf	LCD_row_set@row
  1605  0147  3000               	movlw	0
  1606  0148  00FA               	movwf	LCD_row_set@row+1
  1607  0149  318F  27B3  3180   	fcall	_LCD_row_set
  1608                           
  1609                           ;Main.c: 42:       Lcd_Print_String("NO SIGNAL");
  1610  014C  304F               	movlw	low (STR_14| (0+32768))
  1611  014D  00F5               	movwf	Lcd_Print_String@a
  1612  014E  3088               	movlw	high (STR_14| (0+32768))
  1613  014F  00F6               	movwf	Lcd_Print_String@a+1
  1614  0150  318E  26A0  3180   	fcall	_Lcd_Print_String
  1615  0153                     l1836:
  1616                           
  1617                           ;Main.c: 43:       _delay((unsigned long)((100)*(8000000/4000.0)));
  1618  0153  3002               	movlw	2
  1619  0154  0021               	movlb	1	; select bank1
  1620  0155  00EC               	movwf	(??_main^(0+128)+1)
  1621  0156  3004               	movlw	4
  1622  0157  00EB               	movwf	??_main^(0+128)
  1623  0158  30BA               	movlw	186
  1624  0159                     u1397:
  1625  0159  0B89               	decfsz	9,f
  1626  015A  2959               	goto	u1397
  1627  015B  0BEB               	decfsz	??_main^(0+128),f
  1628  015C  2959               	goto	u1397
  1629  015D  0BEC               	decfsz	(??_main^(0+128)+1),f
  1630  015E  2959               	goto	u1397
  1631  015F  0000               	nop
  1632  0160  2913               	goto	l1818
  1633  0161  3180  2802         	ljmp	start
  1634  0163                     __end_of_main:
  1635                           
  1636                           	psect	text1
  1637  02E8                     __ptext1:	
  1638 ;; *************** function _read_DTMF_Data *****************
  1639 ;; Defined at:
  1640 ;;		line 26 in file "./DTMF_Drivers.h"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  low             2   33[BANK1 ] int 
  1645 ;;  up              2   31[BANK1 ] int 
  1646 ;;  press           2   29[BANK1 ] int 
  1647 ;;  wind            2   27[BANK1 ] int 
  1648 ;;  temp            2   25[BANK1 ] int 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1658 ;;      Params:         0       0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0      10       0       0       0       0       0
  1660 ;;      Temps:          0       2       0       0       0       0       0       0
  1661 ;;      Totals:         0       2      10       0       0       0       0       0
  1662 ;;Total ram usage:       12 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:   10
  1665 ;; This function calls:
  1666 ;;		_Print_DTMF_data
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function _read_DTMF_Data
  1674  02E8                     _read_DTMF_Data:
  1675  02E8                     l1756:	
  1676                           ;incstack = 0
  1677                           ; Regs used in _read_DTMF_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1678                           
  1679                           
  1680                           ;./DTMF_Drivers.h: 27:     int up,low,temp,wind,press;;./DTMF_Drivers.h: 28:     _delay(
      +                          (unsigned long)((1500)*(8000000/4000.0)));
  1681  02E8  3010               	movlw	16
  1682  02E9  0020               	movlb	0	; select bank0
  1683  02EA  00EF               	movwf	??_read_DTMF_Data+1
  1684  02EB  3039               	movlw	57
  1685  02EC  00EE               	movwf	??_read_DTMF_Data
  1686  02ED  300D               	movlw	13
  1687  02EE                     u1407:
  1688  02EE  0B89               	decfsz	9,f
  1689  02EF  2AEE               	goto	u1407
  1690  02F0  0BEE               	decfsz	??_read_DTMF_Data,f
  1691  02F1  2AEE               	goto	u1407
  1692  02F2  0BEF               	decfsz	??_read_DTMF_Data+1,f
  1693  02F3  2AEE               	goto	u1407
  1694  02F4  3200               	nop2
  1695                           
  1696                           ;./DTMF_Drivers.h: 29:     up = PORTB;;
  1697  02F5  0020               	movlb	0	; select bank0
  1698  02F6  080D               	movf	13,w	;volatile
  1699  02F7  00EE               	movwf	??_read_DTMF_Data
  1700  02F8  01EF               	clrf	??_read_DTMF_Data+1
  1701  02F9  086E               	movf	??_read_DTMF_Data,w
  1702  02FA  0021               	movlb	1	; select bank1
  1703  02FB  00E7               	movwf	read_DTMF_Data@up^(0+128)
  1704  02FC  0020               	movlb	0	; select bank0
  1705  02FD  086F               	movf	??_read_DTMF_Data+1,w
  1706  02FE  0021               	movlb	1	; select bank1
  1707  02FF  00E8               	movwf	(read_DTMF_Data@up+1)^(0+128)
  1708                           
  1709                           ;./DTMF_Drivers.h: 30:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1710  0300  300B               	movlw	11
  1711  0301  0020               	movlb	0	; select bank0
  1712  0302  00EF               	movwf	??_read_DTMF_Data+1
  1713  0303  3026               	movlw	38
  1714  0304  00EE               	movwf	??_read_DTMF_Data
  1715  0305  305D               	movlw	93
  1716  0306                     u1417:
  1717  0306  0B89               	decfsz	9,f
  1718  0307  2B06               	goto	u1417
  1719  0308  0BEE               	decfsz	??_read_DTMF_Data,f
  1720  0309  2B06               	goto	u1417
  1721  030A  0BEF               	decfsz	??_read_DTMF_Data+1,f
  1722  030B  2B06               	goto	u1417
  1723  030C  3200               	nop2
  1724                           
  1725                           ;./DTMF_Drivers.h: 31:     low = PORTB;;
  1726  030D  0020               	movlb	0	; select bank0
  1727  030E  080D               	movf	13,w	;volatile
  1728  030F  00EE               	movwf	??_read_DTMF_Data
  1729  0310  01EF               	clrf	??_read_DTMF_Data+1
  1730  0311  086E               	movf	??_read_DTMF_Data,w
  1731  0312  0021               	movlb	1	; select bank1
  1732  0313  00E9               	movwf	read_DTMF_Data@low^(0+128)
  1733  0314  0020               	movlb	0	; select bank0
  1734  0315  086F               	movf	??_read_DTMF_Data+1,w
  1735  0316  0021               	movlb	1	; select bank1
  1736  0317  00EA               	movwf	(read_DTMF_Data@low+1)^(0+128)
  1737  0318                     l1758:
  1738                           
  1739                           ;./DTMF_Drivers.h: 32:     low = low>>4;
  1740  0318  0E69               	swapf	read_DTMF_Data@low^(0+128),w
  1741  0319  390F               	andlw	15
  1742  031A  00E9               	movwf	read_DTMF_Data@low^(0+128)
  1743  031B  0E6A               	swapf	(read_DTMF_Data@low+1)^(0+128),w
  1744  031C  39F0               	andlw	240
  1745  031D  04E9               	iorwf	read_DTMF_Data@low^(0+128),f
  1746  031E  0E6A               	swapf	(read_DTMF_Data@low+1)^(0+128),w
  1747  031F  390F               	andlw	15
  1748  0320  00EA               	movwf	(read_DTMF_Data@low^(0+128)+1)
  1749  0321  30F0               	movlw	240
  1750  0322  1DEA               	btfss	(read_DTMF_Data@low^(0+128)+1),3
  1751  0323  3000               	movlw	0
  1752  0324  04EA               	iorwf	(read_DTMF_Data@low^(0+128)+1),f
  1753  0325                     l1760:
  1754                           
  1755                           ;./DTMF_Drivers.h: 33:     temp = up|low;
  1756  0325  0869               	movf	read_DTMF_Data@low^(0+128),w
  1757  0326  0467               	iorwf	read_DTMF_Data@up^(0+128),w
  1758  0327  00E1               	movwf	read_DTMF_Data@temp^(0+128)
  1759  0328  086A               	movf	(read_DTMF_Data@low+1)^(0+128),w
  1760  0329  0468               	iorwf	(read_DTMF_Data@up+1)^(0+128),w
  1761  032A  00E2               	movwf	(read_DTMF_Data@temp+1)^(0+128)
  1762  032B                     l1762:
  1763                           
  1764                           ;./DTMF_Drivers.h: 34:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1765  032B  300B               	movlw	11
  1766  032C  0020               	movlb	0	; select bank0
  1767  032D  00EF               	movwf	??_read_DTMF_Data+1
  1768  032E  3026               	movlw	38
  1769  032F  00EE               	movwf	??_read_DTMF_Data
  1770  0330  305D               	movlw	93
  1771  0331                     u1427:
  1772  0331  0B89               	decfsz	9,f
  1773  0332  2B31               	goto	u1427
  1774  0333  0BEE               	decfsz	??_read_DTMF_Data,f
  1775  0334  2B31               	goto	u1427
  1776  0335  0BEF               	decfsz	??_read_DTMF_Data+1,f
  1777  0336  2B31               	goto	u1427
  1778  0337  3200               	nop2
  1779  0338                     l1764:
  1780                           
  1781                           ;./DTMF_Drivers.h: 36:     up = PORTB;;
  1782  0338  0020               	movlb	0	; select bank0
  1783  0339  080D               	movf	13,w	;volatile
  1784  033A  00EE               	movwf	??_read_DTMF_Data
  1785  033B  01EF               	clrf	??_read_DTMF_Data+1
  1786  033C  086E               	movf	??_read_DTMF_Data,w
  1787  033D  0021               	movlb	1	; select bank1
  1788  033E  00E7               	movwf	read_DTMF_Data@up^(0+128)
  1789  033F  0020               	movlb	0	; select bank0
  1790  0340  086F               	movf	??_read_DTMF_Data+1,w
  1791  0341  0021               	movlb	1	; select bank1
  1792  0342  00E8               	movwf	(read_DTMF_Data@up+1)^(0+128)
  1793  0343                     l1766:
  1794                           
  1795                           ;./DTMF_Drivers.h: 37:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1796  0343  300B               	movlw	11
  1797  0344  0020               	movlb	0	; select bank0
  1798  0345  00EF               	movwf	??_read_DTMF_Data+1
  1799  0346  3026               	movlw	38
  1800  0347  00EE               	movwf	??_read_DTMF_Data
  1801  0348  305D               	movlw	93
  1802  0349                     u1437:
  1803  0349  0B89               	decfsz	9,f
  1804  034A  2B49               	goto	u1437
  1805  034B  0BEE               	decfsz	??_read_DTMF_Data,f
  1806  034C  2B49               	goto	u1437
  1807  034D  0BEF               	decfsz	??_read_DTMF_Data+1,f
  1808  034E  2B49               	goto	u1437
  1809  034F  3200               	nop2
  1810  0350                     l1768:
  1811                           
  1812                           ;./DTMF_Drivers.h: 38:     low = PORTB;;
  1813  0350  0020               	movlb	0	; select bank0
  1814  0351  080D               	movf	13,w	;volatile
  1815  0352  00EE               	movwf	??_read_DTMF_Data
  1816  0353  01EF               	clrf	??_read_DTMF_Data+1
  1817  0354  086E               	movf	??_read_DTMF_Data,w
  1818  0355  0021               	movlb	1	; select bank1
  1819  0356  00E9               	movwf	read_DTMF_Data@low^(0+128)
  1820  0357  0020               	movlb	0	; select bank0
  1821  0358  086F               	movf	??_read_DTMF_Data+1,w
  1822  0359  0021               	movlb	1	; select bank1
  1823  035A  00EA               	movwf	(read_DTMF_Data@low+1)^(0+128)
  1824                           
  1825                           ;./DTMF_Drivers.h: 39:     low = low>>4;
  1826  035B  0E69               	swapf	read_DTMF_Data@low^(0+128),w
  1827  035C  390F               	andlw	15
  1828  035D  00E9               	movwf	read_DTMF_Data@low^(0+128)
  1829  035E  0E6A               	swapf	(read_DTMF_Data@low+1)^(0+128),w
  1830  035F  39F0               	andlw	240
  1831  0360  04E9               	iorwf	read_DTMF_Data@low^(0+128),f
  1832  0361  0E6A               	swapf	(read_DTMF_Data@low+1)^(0+128),w
  1833  0362  390F               	andlw	15
  1834  0363  00EA               	movwf	(read_DTMF_Data@low^(0+128)+1)
  1835  0364  30F0               	movlw	240
  1836  0365  1DEA               	btfss	(read_DTMF_Data@low^(0+128)+1),3
  1837  0366  3000               	movlw	0
  1838  0367  04EA               	iorwf	(read_DTMF_Data@low^(0+128)+1),f
  1839  0368                     l1770:
  1840                           
  1841                           ;./DTMF_Drivers.h: 40:     wind = up|low;
  1842  0368  0869               	movf	read_DTMF_Data@low^(0+128),w
  1843  0369  0467               	iorwf	read_DTMF_Data@up^(0+128),w
  1844  036A  00E3               	movwf	read_DTMF_Data@wind^(0+128)
  1845  036B  086A               	movf	(read_DTMF_Data@low+1)^(0+128),w
  1846  036C  0468               	iorwf	(read_DTMF_Data@up+1)^(0+128),w
  1847  036D  00E4               	movwf	(read_DTMF_Data@wind+1)^(0+128)
  1848  036E                     l1772:
  1849                           
  1850                           ;./DTMF_Drivers.h: 41:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1851  036E  300B               	movlw	11
  1852  036F  0020               	movlb	0	; select bank0
  1853  0370  00EF               	movwf	??_read_DTMF_Data+1
  1854  0371  3026               	movlw	38
  1855  0372  00EE               	movwf	??_read_DTMF_Data
  1856  0373  305D               	movlw	93
  1857  0374                     u1447:
  1858  0374  0B89               	decfsz	9,f
  1859  0375  2B74               	goto	u1447
  1860  0376  0BEE               	decfsz	??_read_DTMF_Data,f
  1861  0377  2B74               	goto	u1447
  1862  0378  0BEF               	decfsz	??_read_DTMF_Data+1,f
  1863  0379  2B74               	goto	u1447
  1864  037A  3200               	nop2
  1865  037B                     l1774:
  1866                           
  1867                           ;./DTMF_Drivers.h: 43:     up = PORTB;;
  1868  037B  0020               	movlb	0	; select bank0
  1869  037C  080D               	movf	13,w	;volatile
  1870  037D  00EE               	movwf	??_read_DTMF_Data
  1871  037E  01EF               	clrf	??_read_DTMF_Data+1
  1872  037F  086E               	movf	??_read_DTMF_Data,w
  1873  0380  0021               	movlb	1	; select bank1
  1874  0381  00E7               	movwf	read_DTMF_Data@up^(0+128)
  1875  0382  0020               	movlb	0	; select bank0
  1876  0383  086F               	movf	??_read_DTMF_Data+1,w
  1877  0384  0021               	movlb	1	; select bank1
  1878  0385  00E8               	movwf	(read_DTMF_Data@up+1)^(0+128)
  1879  0386                     l1776:
  1880                           
  1881                           ;./DTMF_Drivers.h: 44:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1882  0386  300B               	movlw	11
  1883  0387  0020               	movlb	0	; select bank0
  1884  0388  00EF               	movwf	??_read_DTMF_Data+1
  1885  0389  3026               	movlw	38
  1886  038A  00EE               	movwf	??_read_DTMF_Data
  1887  038B  305D               	movlw	93
  1888  038C                     u1457:
  1889  038C  0B89               	decfsz	9,f
  1890  038D  2B8C               	goto	u1457
  1891  038E  0BEE               	decfsz	??_read_DTMF_Data,f
  1892  038F  2B8C               	goto	u1457
  1893  0390  0BEF               	decfsz	??_read_DTMF_Data+1,f
  1894  0391  2B8C               	goto	u1457
  1895  0392  3200               	nop2
  1896  0393                     l1778:
  1897                           
  1898                           ;./DTMF_Drivers.h: 45:     low = PORTB;;
  1899  0393  0020               	movlb	0	; select bank0
  1900  0394  080D               	movf	13,w	;volatile
  1901  0395  00EE               	movwf	??_read_DTMF_Data
  1902  0396  01EF               	clrf	??_read_DTMF_Data+1
  1903  0397  086E               	movf	??_read_DTMF_Data,w
  1904  0398  0021               	movlb	1	; select bank1
  1905  0399  00E9               	movwf	read_DTMF_Data@low^(0+128)
  1906  039A  0020               	movlb	0	; select bank0
  1907  039B  086F               	movf	??_read_DTMF_Data+1,w
  1908  039C  0021               	movlb	1	; select bank1
  1909  039D  00EA               	movwf	(read_DTMF_Data@low+1)^(0+128)
  1910  039E                     l1780:
  1911                           
  1912                           ;./DTMF_Drivers.h: 46:     low = low>>4;
  1913  039E  0E69               	swapf	read_DTMF_Data@low^(0+128),w
  1914  039F  390F               	andlw	15
  1915  03A0  00E9               	movwf	read_DTMF_Data@low^(0+128)
  1916  03A1  0E6A               	swapf	(read_DTMF_Data@low+1)^(0+128),w
  1917  03A2  39F0               	andlw	240
  1918  03A3  04E9               	iorwf	read_DTMF_Data@low^(0+128),f
  1919  03A4  0E6A               	swapf	(read_DTMF_Data@low+1)^(0+128),w
  1920  03A5  390F               	andlw	15
  1921  03A6  00EA               	movwf	(read_DTMF_Data@low^(0+128)+1)
  1922  03A7  30F0               	movlw	240
  1923  03A8  1DEA               	btfss	(read_DTMF_Data@low^(0+128)+1),3
  1924  03A9  3000               	movlw	0
  1925  03AA  04EA               	iorwf	(read_DTMF_Data@low^(0+128)+1),f
  1926                           
  1927                           ;./DTMF_Drivers.h: 47:     press = up|low;
  1928  03AB  0869               	movf	read_DTMF_Data@low^(0+128),w
  1929  03AC  0467               	iorwf	read_DTMF_Data@up^(0+128),w
  1930  03AD  00E5               	movwf	read_DTMF_Data@press^(0+128)
  1931  03AE  086A               	movf	(read_DTMF_Data@low+1)^(0+128),w
  1932  03AF  0468               	iorwf	(read_DTMF_Data@up+1)^(0+128),w
  1933  03B0  00E6               	movwf	(read_DTMF_Data@press+1)^(0+128)
  1934  03B1                     l1782:
  1935                           
  1936                           ;./DTMF_Drivers.h: 49:     Print_DTMF_data(temp, wind, press);
  1937  03B1  0862               	movf	(read_DTMF_Data@temp+1)^(0+128),w
  1938  03B2  00DC               	movwf	(Print_DTMF_data@temp+1)^(0+128)
  1939  03B3  0861               	movf	read_DTMF_Data@temp^(0+128),w
  1940  03B4  00DB               	movwf	Print_DTMF_data@temp^(0+128)
  1941  03B5  0864               	movf	(read_DTMF_Data@wind+1)^(0+128),w
  1942  03B6  00DE               	movwf	(Print_DTMF_data@speed+1)^(0+128)
  1943  03B7  0863               	movf	read_DTMF_Data@wind^(0+128),w
  1944  03B8  00DD               	movwf	Print_DTMF_data@speed^(0+128)
  1945  03B9  0866               	movf	(read_DTMF_Data@press+1)^(0+128),w
  1946  03BA  00E0               	movwf	(Print_DTMF_data@press+1)^(0+128)
  1947  03BB  0865               	movf	read_DTMF_Data@press^(0+128),w
  1948  03BC  00DF               	movwf	Print_DTMF_data@press^(0+128)
  1949  03BD  3181  2163  3182   	fcall	_Print_DTMF_data
  1950  03C0                     l103:
  1951  03C0  0008               	return
  1952  03C1                     __end_of_read_DTMF_Data:
  1953                           
  1954                           	psect	text2
  1955  0163                     __ptext2:	
  1956 ;; *************** function _Print_DTMF_data *****************
  1957 ;; Defined at:
  1958 ;;		line 52 in file "./DTMF_Drivers.h"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  temp            2   19[BANK1 ] int 
  1961 ;;  speed           2   21[BANK1 ] int 
  1962 ;;  press           2   23[BANK1 ] int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1974 ;;      Params:         0       0       6       0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0
  1976 ;;      Temps:          0       2       0       0       0       0       0       0
  1977 ;;      Totals:         0       2       6       0       0       0       0       0
  1978 ;;Total ram usage:        8 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    9
  1981 ;; This function calls:
  1982 ;;		_LCD_Print_num
  1983 ;;		_LCD_row_set
  1984 ;;		_LDC_clear
  1985 ;;		_Lcd_Print_Char
  1986 ;;		_Lcd_Print_String
  1987 ;; This function is called by:
  1988 ;;		_read_DTMF_Data
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           
  1993                           ;psect for function _Print_DTMF_data
  1994  0163                     _Print_DTMF_data:
  1995  0163                     l1686:	
  1996                           ;incstack = 0
  1997                           ; Regs used in _Print_DTMF_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1998                           
  1999                           
  2000                           ;./DTMF_Drivers.h: 53:     LDC_clear();
  2001  0163  318E  26BD  3181   	fcall	_LDC_clear
  2002                           
  2003                           ;./DTMF_Drivers.h: 54:     LCD_row_set(1);
  2004  0166  3001               	movlw	1
  2005  0167  00F9               	movwf	LCD_row_set@row
  2006  0168  3000               	movlw	0
  2007  0169  00FA               	movwf	LCD_row_set@row+1
  2008  016A  318F  27B3  3181   	fcall	_LCD_row_set
  2009  016D                     l1688:
  2010                           
  2011                           ;./DTMF_Drivers.h: 55:     Lcd_Print_String("Temperature:");
  2012  016D  302C               	movlw	low (STR_2| (0+32768))
  2013  016E  00F5               	movwf	Lcd_Print_String@a
  2014  016F  3088               	movlw	high (STR_2| (0+32768))
  2015  0170  00F6               	movwf	Lcd_Print_String@a+1
  2016  0171  318E  26A0  3181   	fcall	_Lcd_Print_String
  2017  0174                     l1690:
  2018                           
  2019                           ;./DTMF_Drivers.h: 56:     LCD_row_set(2);
  2020  0174  3002               	movlw	2
  2021  0175  00F9               	movwf	LCD_row_set@row
  2022  0176  3000               	movlw	0
  2023  0177  00FA               	movwf	LCD_row_set@row+1
  2024  0178  318F  27B3  3181   	fcall	_LCD_row_set
  2025  017B                     l1692:
  2026                           
  2027                           ;./DTMF_Drivers.h: 57:     LCD_Print_num(temp);
  2028  017B  0021               	movlb	1	; select bank1
  2029  017C  085C               	movf	(Print_DTMF_data@temp+1)^(0+128),w
  2030  017D  0020               	movlb	0	; select bank0
  2031  017E  00EB               	movwf	LCD_Print_num@num+1
  2032  017F  0021               	movlb	1	; select bank1
  2033  0180  085B               	movf	Print_DTMF_data@temp^(0+128),w
  2034  0181  0020               	movlb	0	; select bank0
  2035  0182  00EA               	movwf	LCD_Print_num@num
  2036  0183  318E  263F  3181   	fcall	_LCD_Print_num
  2037  0186                     l1694:
  2038                           
  2039                           ;./DTMF_Drivers.h: 58:     Lcd_Print_Char(223);
  2040  0186  30DF               	movlw	223
  2041  0187  318F  2721  3181   	fcall	_Lcd_Print_Char
  2042  018A                     l1696:
  2043                           
  2044                           ;./DTMF_Drivers.h: 59:     Lcd_Print_String("F");
  2045  018A  306E               	movlw	low (STR_3| (0+32768))
  2046  018B  00F5               	movwf	Lcd_Print_String@a
  2047  018C  3088               	movlw	high (STR_3| (0+32768))
  2048  018D  00F6               	movwf	Lcd_Print_String@a+1
  2049  018E  318E  26A0  3181   	fcall	_Lcd_Print_String
  2050  0191                     l1698:
  2051                           
  2052                           ;./DTMF_Drivers.h: 60:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  2053  0191  3033               	movlw	51
  2054  0192  0020               	movlb	0	; select bank0
  2055  0193  00ED               	movwf	??_Print_DTMF_data+1
  2056  0194  30BB               	movlw	187
  2057  0195  00EC               	movwf	??_Print_DTMF_data
  2058  0196  30DF               	movlw	223
  2059  0197                     u1467:
  2060  0197  0B89               	decfsz	9,f
  2061  0198  2997               	goto	u1467
  2062  0199  0BEC               	decfsz	??_Print_DTMF_data,f
  2063  019A  2997               	goto	u1467
  2064  019B  0BED               	decfsz	??_Print_DTMF_data+1,f
  2065  019C  2997               	goto	u1467
  2066  019D  3200               	nop2
  2067  019E                     l1700:
  2068                           
  2069                           ;./DTMF_Drivers.h: 62:     LDC_clear();
  2070  019E  318E  26BD  3181   	fcall	_LDC_clear
  2071  01A1                     l1702:
  2072                           
  2073                           ;./DTMF_Drivers.h: 63:     LCD_row_set(1);
  2074  01A1  3001               	movlw	1
  2075  01A2  00F9               	movwf	LCD_row_set@row
  2076  01A3  3000               	movlw	0
  2077  01A4  00FA               	movwf	LCD_row_set@row+1
  2078  01A5  318F  27B3  3181   	fcall	_LCD_row_set
  2079  01A8                     l1704:
  2080                           
  2081                           ;./DTMF_Drivers.h: 64:     Lcd_Print_String("Wind Speed:");
  2082  01A8  3039               	movlw	low (STR_4| (0+32768))
  2083  01A9  00F5               	movwf	Lcd_Print_String@a
  2084  01AA  3088               	movlw	high (STR_4| (0+32768))
  2085  01AB  00F6               	movwf	Lcd_Print_String@a+1
  2086  01AC  318E  26A0  3181   	fcall	_Lcd_Print_String
  2087  01AF                     l1706:
  2088                           
  2089                           ;./DTMF_Drivers.h: 65:     LCD_row_set(2);
  2090  01AF  3002               	movlw	2
  2091  01B0  00F9               	movwf	LCD_row_set@row
  2092  01B1  3000               	movlw	0
  2093  01B2  00FA               	movwf	LCD_row_set@row+1
  2094  01B3  318F  27B3  3181   	fcall	_LCD_row_set
  2095  01B6                     l1708:
  2096                           
  2097                           ;./DTMF_Drivers.h: 66:     LCD_Print_num(speed);
  2098  01B6  0021               	movlb	1	; select bank1
  2099  01B7  085E               	movf	(Print_DTMF_data@speed+1)^(0+128),w
  2100  01B8  0020               	movlb	0	; select bank0
  2101  01B9  00EB               	movwf	LCD_Print_num@num+1
  2102  01BA  0021               	movlb	1	; select bank1
  2103  01BB  085D               	movf	Print_DTMF_data@speed^(0+128),w
  2104  01BC  0020               	movlb	0	; select bank0
  2105  01BD  00EA               	movwf	LCD_Print_num@num
  2106  01BE  318E  263F  3181   	fcall	_LCD_Print_num
  2107  01C1                     l1710:
  2108                           
  2109                           ;./DTMF_Drivers.h: 67:     Lcd_Print_String(" MPH");
  2110  01C1  3061               	movlw	low (STR_5| (0+32768))
  2111  01C2  00F5               	movwf	Lcd_Print_String@a
  2112  01C3  3088               	movlw	high (STR_5| (0+32768))
  2113  01C4  00F6               	movwf	Lcd_Print_String@a+1
  2114  01C5  318E  26A0  3181   	fcall	_Lcd_Print_String
  2115                           
  2116                           ;./DTMF_Drivers.h: 68:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  2117  01C8  3033               	movlw	51
  2118  01C9  0020               	movlb	0	; select bank0
  2119  01CA  00ED               	movwf	??_Print_DTMF_data+1
  2120  01CB  30BB               	movlw	187
  2121  01CC  00EC               	movwf	??_Print_DTMF_data
  2122  01CD  30DF               	movlw	223
  2123  01CE                     u1477:
  2124  01CE  0B89               	decfsz	9,f
  2125  01CF  29CE               	goto	u1477
  2126  01D0  0BEC               	decfsz	??_Print_DTMF_data,f
  2127  01D1  29CE               	goto	u1477
  2128  01D2  0BED               	decfsz	??_Print_DTMF_data+1,f
  2129  01D3  29CE               	goto	u1477
  2130  01D4  3200               	nop2
  2131  01D5                     l1712:
  2132                           
  2133                           ;./DTMF_Drivers.h: 70:     LDC_clear();
  2134  01D5  318E  26BD  3181   	fcall	_LDC_clear
  2135  01D8                     l1714:
  2136                           
  2137                           ;./DTMF_Drivers.h: 71:     LCD_row_set(1);
  2138  01D8  3001               	movlw	1
  2139  01D9  00F9               	movwf	LCD_row_set@row
  2140  01DA  3000               	movlw	0
  2141  01DB  00FA               	movwf	LCD_row_set@row+1
  2142  01DC  318F  27B3  3181   	fcall	_LCD_row_set
  2143  01DF                     l1716:
  2144                           
  2145                           ;./DTMF_Drivers.h: 72:     Lcd_Print_String("Air Pressure:");
  2146  01DF  301E               	movlw	low (STR_6| (0+32768))
  2147  01E0  00F5               	movwf	Lcd_Print_String@a
  2148  01E1  3088               	movlw	high (STR_6| (0+32768))
  2149  01E2  00F6               	movwf	Lcd_Print_String@a+1
  2150  01E3  318E  26A0  3181   	fcall	_Lcd_Print_String
  2151  01E6                     l1718:
  2152                           
  2153                           ;./DTMF_Drivers.h: 73:     LCD_row_set(2);
  2154  01E6  3002               	movlw	2
  2155  01E7  00F9               	movwf	LCD_row_set@row
  2156  01E8  3000               	movlw	0
  2157  01E9  00FA               	movwf	LCD_row_set@row+1
  2158  01EA  318F  27B3  3181   	fcall	_LCD_row_set
  2159  01ED                     l1720:
  2160                           
  2161                           ;./DTMF_Drivers.h: 74:     LCD_Print_num(press);
  2162  01ED  0021               	movlb	1	; select bank1
  2163  01EE  0860               	movf	(Print_DTMF_data@press+1)^(0+128),w
  2164  01EF  0020               	movlb	0	; select bank0
  2165  01F0  00EB               	movwf	LCD_Print_num@num+1
  2166  01F1  0021               	movlb	1	; select bank1
  2167  01F2  085F               	movf	Print_DTMF_data@press^(0+128),w
  2168  01F3  0020               	movlb	0	; select bank0
  2169  01F4  00EA               	movwf	LCD_Print_num@num
  2170  01F5  318E  263F  3181   	fcall	_LCD_Print_num
  2171  01F8                     l1722:
  2172                           
  2173                           ;./DTMF_Drivers.h: 75:     Lcd_Print_String(" kPa");
  2174  01F8  3066               	movlw	low (STR_7| (0+32768))
  2175  01F9  00F5               	movwf	Lcd_Print_String@a
  2176  01FA  3088               	movlw	high (STR_7| (0+32768))
  2177  01FB  00F6               	movwf	Lcd_Print_String@a+1
  2178  01FC  318E  26A0  3181   	fcall	_Lcd_Print_String
  2179  01FF                     l1724:
  2180                           
  2181                           ;./DTMF_Drivers.h: 76:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  2182  01FF  3033               	movlw	51
  2183  0200  0020               	movlb	0	; select bank0
  2184  0201  00ED               	movwf	??_Print_DTMF_data+1
  2185  0202  30BB               	movlw	187
  2186  0203  00EC               	movwf	??_Print_DTMF_data
  2187  0204  30DF               	movlw	223
  2188  0205                     u1487:
  2189  0205  0B89               	decfsz	9,f
  2190  0206  2A05               	goto	u1487
  2191  0207  0BEC               	decfsz	??_Print_DTMF_data,f
  2192  0208  2A05               	goto	u1487
  2193  0209  0BED               	decfsz	??_Print_DTMF_data+1,f
  2194  020A  2A05               	goto	u1487
  2195  020B  3200               	nop2
  2196  020C                     l1726:
  2197                           
  2198                           ;./DTMF_Drivers.h: 77:     LDC_clear();
  2199  020C  318E  26BD  3181   	fcall	_LDC_clear
  2200  020F                     l106:
  2201  020F  0008               	return
  2202  0210                     __end_of_Print_DTMF_data:
  2203                           
  2204                           	psect	text3
  2205  0E3F                     __ptext3:	
  2206 ;; *************** function _LCD_Print_num *****************
  2207 ;; Defined at:
  2208 ;;		line 127 in file "./LCD_Drivers.h"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  num             2   74[BANK0 ] int 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  str            10    9[BANK1 ] unsigned char [10]
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2222 ;;      Params:         0       2       0       0       0       0       0       0
  2223 ;;      Locals:         0       0      10       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0
  2225 ;;      Totals:         0       2      10       0       0       0       0       0
  2226 ;;Total ram usage:       12 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    8
  2229 ;; This function calls:
  2230 ;;		_Lcd_Print_String
  2231 ;;		_sprintf
  2232 ;; This function is called by:
  2233 ;;		_Print_DTMF_data
  2234 ;;		_hexTest
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function _LCD_Print_num
  2240  0E3F                     _LCD_Print_num:
  2241  0E3F                     l1682:	
  2242                           ;incstack = 0
  2243                           ; Regs used in _LCD_Print_num: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2244                           
  2245                           
  2246                           ;./LCD_Drivers.h: 128:   char str[10];;./LCD_Drivers.h: 129:   sprintf(str, "%d", num);
  2247  0E3F  306B               	movlw	low (STR_1| (0+32768))
  2248  0E40  0020               	movlb	0	; select bank0
  2249  0E41  00E6               	movwf	sprintf@fmt
  2250  0E42  3088               	movlw	high (STR_1| (0+32768))
  2251  0E43  00E7               	movwf	sprintf@fmt+1
  2252  0E44  086B               	movf	LCD_Print_num@num+1,w
  2253  0E45  00E9               	movwf	?_sprintf+3
  2254  0E46  086A               	movf	LCD_Print_num@num,w
  2255  0E47  00E8               	movwf	?_sprintf+2
  2256  0E48  30D1               	movlw	(low (LCD_Print_num@str| 0))& (0+255)
  2257  0E49  318E  26FD  318E   	fcall	_sprintf
  2258  0E4C                     l1684:
  2259                           
  2260                           ;./LCD_Drivers.h: 130:   Lcd_Print_String(str);
  2261  0E4C  30D1               	movlw	low LCD_Print_num@str
  2262  0E4D  00F5               	movwf	Lcd_Print_String@a
  2263  0E4E  3000               	movlw	high LCD_Print_num@str
  2264  0E4F  00F6               	movwf	Lcd_Print_String@a+1
  2265  0E50  318E  26A0  318E   	fcall	_Lcd_Print_String
  2266  0E53                     l95:
  2267  0E53  0008               	return
  2268  0E54                     __end_of_LCD_Print_num:
  2269                           
  2270                           	psect	text4
  2271  0EFD                     __ptext4:	
  2272 ;; *************** function _sprintf *****************
  2273 ;; Defined at:
  2274 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  s               1    wreg     PTR unsigned char 
  2277 ;;		 -> LCD_Print_num@str(10), 
  2278 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  2279 ;;		 -> STR_1(3), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  s               1    3[BANK1 ] PTR unsigned char 
  2282 ;;		 -> LCD_Print_num@str(10), 
  2283 ;;  f               5    4[BANK1 ] struct _IO_FILE
  2284 ;;  ret             2    0        int 
  2285 ;;  ap              1    2[BANK1 ] PTR void [1]
  2286 ;;		 -> ?_sprintf(2), 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2   70[BANK0 ] int 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2296 ;;      Params:         0       4       0       0       0       0       0       0
  2297 ;;      Locals:         0       0       9       0       0       0       0       0
  2298 ;;      Temps:          1       0       0       0       0       0       0       0
  2299 ;;      Totals:         1       4       9       0       0       0       0       0
  2300 ;;Total ram usage:       14 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    7
  2303 ;; This function calls:
  2304 ;;		_vfprintf
  2305 ;; This function is called by:
  2306 ;;		_LCD_Print_num
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           
  2311                           ;psect for function _sprintf
  2312  0EFD                     _sprintf:
  2313                           
  2314                           ;incstack = 0
  2315                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2316                           ;sprintf@s stored from wreg
  2317  0EFD  0021               	movlb	1	; select bank1
  2318  0EFE  00CB               	movwf	sprintf@s^(0+128)
  2319  0EFF                     l1660:
  2320  0EFF  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2321  0F00  00FD               	movwf	??_sprintf
  2322  0F01  087D               	movf	??_sprintf,w
  2323  0F02  00CA               	movwf	sprintf@ap^(0+128)
  2324  0F03  084B               	movf	sprintf@s^(0+128),w
  2325  0F04  00FD               	movwf	??_sprintf
  2326  0F05  087D               	movf	??_sprintf,w
  2327  0F06  00CC               	movwf	sprintf@f^(0+128)
  2328  0F07                     l1662:
  2329  0F07  01CD               	clrf	(sprintf@f^(0+128)+1)
  2330  0F08  01CE               	clrf	((sprintf@f+1)^(0+128)+1)
  2331  0F09                     l1664:
  2332  0F09  01CF               	clrf	(sprintf@f^(0+128)+3)
  2333  0F0A  01D0               	clrf	((sprintf@f+1)^(0+128)+3)
  2334  0F0B                     l1666:
  2335  0F0B  0020               	movlb	0	; select bank0
  2336  0F0C  0867               	movf	sprintf@fmt+1,w
  2337  0F0D  00DF               	movwf	vfprintf@fmt+1
  2338  0F0E  0866               	movf	sprintf@fmt,w
  2339  0F0F  00DE               	movwf	vfprintf@fmt
  2340  0F10  30CA               	movlw	(low (sprintf@ap| 0))& (0+255)
  2341  0F11  00FD               	movwf	??_sprintf
  2342  0F12  087D               	movf	??_sprintf,w
  2343  0F13  00E0               	movwf	vfprintf@ap
  2344  0F14  30CC               	movlw	(low (sprintf@f| 0))& (0+255)
  2345  0F15  318F  274D  318E   	fcall	_vfprintf
  2346  0F18                     l1668:
  2347  0F18  0021               	movlb	1	; select bank1
  2348  0F19  084D               	movf	(sprintf@f^(0+128)+1),w
  2349  0F1A  074B               	addwf	sprintf@s^(0+128),w
  2350  0F1B  00FD               	movwf	??_sprintf
  2351  0F1C  087D               	movf	??_sprintf,w
  2352  0F1D  0086               	movwf	6
  2353  0F1E  0187               	clrf	7
  2354  0F1F  0181               	clrf	1
  2355  0F20                     l734:
  2356  0F20  0008               	return
  2357  0F21                     __end_of_sprintf:
  2358                           
  2359                           	psect	text5
  2360  0F4D                     __ptext5:	
  2361 ;; *************** function _vfprintf *****************
  2362 ;; Defined at:
  2363 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  fp              1    wreg     PTR struct _IO_FILE
  2366 ;;		 -> sprintf@f(5), 
  2367 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  2368 ;;		 -> STR_1(3), 
  2369 ;;  ap              1   64[BANK0 ] PTR PTR void 
  2370 ;;		 -> sprintf@ap(1), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  2373 ;;		 -> sprintf@f(5), 
  2374 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  2375 ;;		 -> STR_1(3), 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2   62[BANK0 ] int 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2385 ;;      Params:         0       3       0       0       0       0       0       0
  2386 ;;      Locals:         0       3       0       0       0       0       0       0
  2387 ;;      Temps:          0       2       0       0       0       0       0       0
  2388 ;;      Totals:         0       8       0       0       0       0       0       0
  2389 ;;Total ram usage:        8 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    6
  2392 ;; This function calls:
  2393 ;;		_vfpfcnvrt
  2394 ;; This function is called by:
  2395 ;;		_sprintf
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _vfprintf
  2401  0F4D                     _vfprintf:
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2405                           ;vfprintf@fp stored from wreg
  2406  0F4D  0020               	movlb	0	; select bank0
  2407  0F4E  00E3               	movwf	vfprintf@fp
  2408  0F4F                     l1618:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2411  0F4F  085F               	movf	vfprintf@fmt+1,w
  2412  0F50  00E5               	movwf	vfprintf@cfmt+1
  2413  0F51  085E               	movf	vfprintf@fmt,w
  2414  0F52  00E4               	movwf	vfprintf@cfmt
  2415  0F53                     l1620:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2418  0F53  0021               	movlb	1	; select bank1
  2419  0F54  01A0               	clrf	_nout^(0+128)
  2420  0F55  01A1               	clrf	(_nout+1)^(0+128)
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2423  0F56  2F6B               	goto	l1624
  2424  0F57                     l1622:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2427  0F57  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2428  0F58  00E1               	movwf	??_vfprintf
  2429  0F59  0861               	movf	??_vfprintf,w
  2430  0F5A  00CE               	movwf	vfpfcnvrt@fmt
  2431  0F5B  0860               	movf	vfprintf@ap,w
  2432  0F5C  00E2               	movwf	??_vfprintf+1
  2433  0F5D  0862               	movf	??_vfprintf+1,w
  2434  0F5E  00CF               	movwf	vfpfcnvrt@ap
  2435  0F5F  0863               	movf	vfprintf@fp,w
  2436  0F60  3183  23C1  318F   	fcall	_vfpfcnvrt
  2437  0F63  0020               	movlb	0	; select bank0
  2438  0F64  084E               	movf	?_vfpfcnvrt,w
  2439  0F65  0021               	movlb	1	; select bank1
  2440  0F66  07A0               	addwf	_nout^(0+128),f
  2441  0F67  0020               	movlb	0	; select bank0
  2442  0F68  084F               	movf	?_vfpfcnvrt+1,w
  2443  0F69  0021               	movlb	1	; select bank1
  2444  0F6A  3DA1               	addwfc	(_nout+1)^(0+128),f
  2445  0F6B                     l1624:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2448  0F6B  0020               	movlb	0	; select bank0
  2449  0F6C  0864               	movf	vfprintf@cfmt,w
  2450  0F6D  0084               	movwf	4
  2451  0F6E  0865               	movf	vfprintf@cfmt+1,w
  2452  0F6F  0085               	movwf	5
  2453  0F70  0012               	moviw fsr0++
  2454  0F71  1D03               	btfss	3,2
  2455  0F72  2F74               	goto	u1291
  2456  0F73  2F75               	goto	u1290
  2457  0F74                     u1291:
  2458  0F74  2F57               	goto	l1622
  2459  0F75                     u1290:
  2460  0F75                     l1626:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2463  0F75  0021               	movlb	1	; select bank1
  2464  0F76  0821               	movf	(_nout+1)^(0+128),w
  2465  0F77  0020               	movlb	0	; select bank0
  2466  0F78  00DF               	movwf	?_vfprintf+1
  2467  0F79  0021               	movlb	1	; select bank1
  2468  0F7A  0820               	movf	_nout^(0+128),w
  2469  0F7B  0020               	movlb	0	; select bank0
  2470  0F7C  00DE               	movwf	?_vfprintf
  2471  0F7D                     l806:
  2472  0F7D  0008               	return
  2473  0F7E                     __end_of_vfprintf:
  2474                           
  2475                           	psect	text6
  2476  03C1                     __ptext6:	
  2477 ;; *************** function _vfpfcnvrt *****************
  2478 ;; Defined at:
  2479 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  fp              1    wreg     PTR struct _IO_FILE
  2482 ;;		 -> sprintf@f(5), 
  2483 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  2484 ;;		 -> vfprintf@cfmt(2), 
  2485 ;;  ap              1   47[BANK0 ] PTR PTR void 
  2486 ;;		 -> sprintf@ap(1), 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  2489 ;;		 -> sprintf@f(5), 
  2490 ;;  ll              8   53[BANK0 ] long long 
  2491 ;;  llu             8    0        unsigned long long 
  2492 ;;  f               4    0        unsigned long long 
  2493 ;;  ct              3    0        unsigned char [3]
  2494 ;;  vp              2    0        PTR void 
  2495 ;;  i               2    0        int 
  2496 ;;  done            2    0        int 
  2497 ;;  cp              2    0        PTR unsigned char 
  2498 ;;  c               1    0        unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  2   46[BANK0 ] int 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2508 ;;      Params:         0       2       0       0       0       0       0       0
  2509 ;;      Locals:         0       9       0       0       0       0       0       0
  2510 ;;      Temps:          0       5       0       0       0       0       0       0
  2511 ;;      Totals:         0      16       0       0       0       0       0       0
  2512 ;;Total ram usage:       16 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    5
  2515 ;; This function calls:
  2516 ;;		_dtoa
  2517 ;;		_fputc
  2518 ;; This function is called by:
  2519 ;;		_vfprintf
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _vfpfcnvrt
  2525  03C1                     _vfpfcnvrt:
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2529                           ;vfpfcnvrt@fp stored from wreg
  2530  03C1  0020               	movlb	0	; select bank0
  2531  03C2  00DD               	movwf	vfpfcnvrt@fp
  2532  03C3                     l1554:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2535  03C3  084E               	movf	vfpfcnvrt@fmt,w
  2536  03C4  0086               	movwf	6
  2537  03C5  0187               	clrf	7
  2538  03C6  3F40               	moviw [0]fsr1
  2539  03C7  00D0               	movwf	??_vfpfcnvrt
  2540  03C8  3F41               	moviw [1]fsr1
  2541  03C9  00D1               	movwf	??_vfpfcnvrt+1
  2542  03CA  0850               	movf	??_vfpfcnvrt,w
  2543  03CB  0084               	movwf	4
  2544  03CC  0851               	movf	??_vfpfcnvrt+1,w
  2545  03CD  0085               	movwf	5
  2546  03CE  0012               	moviw fsr0++
  2547  03CF  3A25               	xorlw	37
  2548  03D0  1D03               	btfss	3,2
  2549  03D1  2BD3               	goto	u1241
  2550  03D2  2BD4               	goto	u1240
  2551  03D3                     u1241:
  2552  03D3  2C78               	goto	l1590
  2553  03D4                     u1240:
  2554  03D4                     l1556:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2557  03D4  084E               	movf	vfpfcnvrt@fmt,w
  2558  03D5  0086               	movwf	6
  2559  03D6  0187               	clrf	7
  2560  03D7  3001               	movlw	1
  2561  03D8  0781               	addwf	1,f
  2562  03D9  3141               	addfsr 1,1
  2563  03DA  1803               	skipnc
  2564  03DB  0A81               	incf	1,f
  2565  03DC                     l1558:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2568  03DC  0021               	movlb	1	; select bank1
  2569  03DD  01A2               	clrf	_width^(0+128)
  2570  03DE  01A3               	clrf	(_width+1)^(0+128)
  2571  03DF  01A6               	clrf	_flags^(0+128)
  2572  03E0  01A7               	clrf	(_flags+1)^(0+128)
  2573  03E1                     l1560:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2576  03E1  30FF               	movlw	255
  2577  03E2  00A4               	movwf	_prec^(0+128)
  2578  03E3  30FF               	movlw	255
  2579  03E4  00A5               	movwf	(_prec^(0+128)+1)
  2580  03E5                     l1562:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2583  03E5  0020               	movlb	0	; select bank0
  2584  03E6  084E               	movf	vfpfcnvrt@fmt,w
  2585  03E7  0086               	movwf	6
  2586  03E8  0187               	clrf	7
  2587  03E9  3F40               	moviw [0]fsr1
  2588  03EA  00D0               	movwf	??_vfpfcnvrt
  2589  03EB  3F41               	moviw [1]fsr1
  2590  03EC  00D1               	movwf	??_vfpfcnvrt+1
  2591  03ED  0850               	movf	??_vfpfcnvrt,w
  2592  03EE  0084               	movwf	4
  2593  03EF  0851               	movf	??_vfpfcnvrt+1,w
  2594  03F0  0085               	movwf	5
  2595  03F1  0012               	moviw fsr0++
  2596  03F2  3A64               	xorlw	100
  2597  03F3  1903               	btfsc	3,2
  2598  03F4  2BF6               	goto	u1251
  2599  03F5  2BF7               	goto	u1250
  2600  03F6                     u1251:
  2601  03F6  2C08               	goto	l1566
  2602  03F7                     u1250:
  2603  03F7                     l1564:
  2604  03F7  084E               	movf	vfpfcnvrt@fmt,w
  2605  03F8  0086               	movwf	6
  2606  03F9  0187               	clrf	7
  2607  03FA  3F40               	moviw [0]fsr1
  2608  03FB  00D0               	movwf	??_vfpfcnvrt
  2609  03FC  3F41               	moviw [1]fsr1
  2610  03FD  00D1               	movwf	??_vfpfcnvrt+1
  2611  03FE  0850               	movf	??_vfpfcnvrt,w
  2612  03FF  0084               	movwf	4
  2613  0400  0851               	movf	??_vfpfcnvrt+1,w
  2614  0401  0085               	movwf	5
  2615  0402  0012               	moviw fsr0++
  2616  0403  3A69               	xorlw	105
  2617  0404  1D03               	btfss	3,2
  2618  0405  2C07               	goto	u1261
  2619  0406  2C08               	goto	u1260
  2620  0407                     u1261:
  2621  0407  2C43               	goto	l1574
  2622  0408                     u1260:
  2623  0408                     l1566:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2626  0408  084E               	movf	vfpfcnvrt@fmt,w
  2627  0409  0086               	movwf	6
  2628  040A  0187               	clrf	7
  2629  040B  3001               	movlw	1
  2630  040C  0781               	addwf	1,f
  2631  040D  3141               	addfsr 1,1
  2632  040E  1803               	skipnc
  2633  040F  0A81               	incf	1,f
  2634  0410                     l1568:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2637  0410  084F               	movf	vfpfcnvrt@ap,w
  2638  0411  0086               	movwf	6
  2639  0412  0187               	clrf	7
  2640  0413  0801               	movf	1,w
  2641  0414  0084               	movwf	4
  2642  0415  0185               	clrf	5
  2643  0416  3002               	movlw	2
  2644  0417  0781               	addwf	1,f
  2645  0418  3F00               	moviw [0]fsr0
  2646  0419  00D0               	movwf	??_vfpfcnvrt
  2647  041A  3F01               	moviw [1]fsr0
  2648  041B  00D1               	movwf	??_vfpfcnvrt+1
  2649  041C  0850               	movf	??_vfpfcnvrt,w
  2650  041D  00D5               	movwf	vfpfcnvrt@ll
  2651  041E  0851               	movf	??_vfpfcnvrt+1,w
  2652  041F  00D6               	movwf	vfpfcnvrt@ll+1
  2653  0420  0D89               	rlf	9,f
  2654  0421  3B89               	subwfb	9,f
  2655  0422  0989               	comf	9,f
  2656  0423  00D7               	movwf	vfpfcnvrt@ll+2
  2657  0424  00D8               	movwf	vfpfcnvrt@ll+3
  2658  0425  00D9               	movwf	vfpfcnvrt@ll+4
  2659  0426  00DA               	movwf	vfpfcnvrt@ll+5
  2660  0427  00DB               	movwf	vfpfcnvrt@ll+6
  2661  0428  00DC               	movwf	vfpfcnvrt@ll+7
  2662  0429                     l1570:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2665  0429  0855               	movf	vfpfcnvrt@ll,w
  2666  042A  00B0               	movwf	dtoa@d
  2667  042B  0856               	movf	vfpfcnvrt@ll+1,w
  2668  042C  00B1               	movwf	dtoa@d+1
  2669  042D  0857               	movf	vfpfcnvrt@ll+2,w
  2670  042E  00B2               	movwf	dtoa@d+2
  2671  042F  0858               	movf	vfpfcnvrt@ll+3,w
  2672  0430  00B3               	movwf	dtoa@d+3
  2673  0431  0859               	movf	vfpfcnvrt@ll+4,w
  2674  0432  00B4               	movwf	dtoa@d+4
  2675  0433  085A               	movf	vfpfcnvrt@ll+5,w
  2676  0434  00B5               	movwf	dtoa@d+5
  2677  0435  085B               	movf	vfpfcnvrt@ll+6,w
  2678  0436  00B6               	movwf	dtoa@d+6
  2679  0437  085C               	movf	vfpfcnvrt@ll+7,w
  2680  0438  00B7               	movwf	dtoa@d+7
  2681  0439  085D               	movf	vfpfcnvrt@fp,w
  2682  043A  3186  2687  3183   	fcall	_dtoa
  2683  043D  0020               	movlb	0	; select bank0
  2684  043E  0831               	movf	?_dtoa+1,w
  2685  043F  00CF               	movwf	?_vfpfcnvrt+1
  2686  0440  0830               	movf	?_dtoa,w
  2687  0441  00CE               	movwf	?_vfpfcnvrt
  2688  0442  2C9B               	goto	l799
  2689  0443                     l1574:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2692  0443  084E               	movf	vfpfcnvrt@fmt,w
  2693  0444  0086               	movwf	6
  2694  0445  0187               	clrf	7
  2695  0446  3F40               	moviw [0]fsr1
  2696  0447  00D0               	movwf	??_vfpfcnvrt
  2697  0448  3F41               	moviw [1]fsr1
  2698  0449  00D1               	movwf	??_vfpfcnvrt+1
  2699  044A  0850               	movf	??_vfpfcnvrt,w
  2700  044B  0084               	movwf	4
  2701  044C  0851               	movf	??_vfpfcnvrt+1,w
  2702  044D  0085               	movwf	5
  2703  044E  0012               	moviw fsr0++
  2704  044F  3A25               	xorlw	37
  2705  0450  1D03               	btfss	3,2
  2706  0451  2C53               	goto	u1271
  2707  0452  2C54               	goto	u1270
  2708  0453                     u1271:
  2709  0453  2C6D               	goto	l1584
  2710  0454                     u1270:
  2711  0454                     l1576:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2714  0454  084E               	movf	vfpfcnvrt@fmt,w
  2715  0455  0086               	movwf	6
  2716  0456  0187               	clrf	7
  2717  0457  3001               	movlw	1
  2718  0458  0781               	addwf	1,f
  2719  0459  3141               	addfsr 1,1
  2720  045A  1803               	skipnc
  2721  045B  0A81               	incf	1,f
  2722  045C                     l1578:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2725  045C  3025               	movlw	37
  2726  045D  00F0               	movwf	fputc@c
  2727  045E  3000               	movlw	0
  2728  045F  00F1               	movwf	fputc@c+1
  2729  0460  085D               	movf	vfpfcnvrt@fp,w
  2730  0461  00D0               	movwf	??_vfpfcnvrt
  2731  0462  0850               	movf	??_vfpfcnvrt,w
  2732  0463  00F2               	movwf	fputc@fp
  2733  0464  3180  202E  3183   	fcall	_fputc
  2734  0467                     l1580:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2737  0467  3001               	movlw	1
  2738  0468  0020               	movlb	0	; select bank0
  2739  0469  00CE               	movwf	?_vfpfcnvrt
  2740  046A  3000               	movlw	0
  2741  046B  00CF               	movwf	?_vfpfcnvrt+1
  2742  046C  2C9B               	goto	l799
  2743  046D                     l1584:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2746  046D  084E               	movf	vfpfcnvrt@fmt,w
  2747  046E  0086               	movwf	6
  2748  046F  0187               	clrf	7
  2749  0470  3001               	movlw	1
  2750  0471  0781               	addwf	1,f
  2751  0472  3141               	addfsr 1,1
  2752  0473  1803               	skipnc
  2753  0474  0A81               	incf	1,f
  2754  0475                     l1586:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2757  0475  01CE               	clrf	?_vfpfcnvrt
  2758  0476  01CF               	clrf	?_vfpfcnvrt+1
  2759  0477  2C9B               	goto	l799
  2760  0478                     l1590:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2763  0478  084E               	movf	vfpfcnvrt@fmt,w
  2764  0479  0086               	movwf	6
  2765  047A  0187               	clrf	7
  2766  047B  3F40               	moviw [0]fsr1
  2767  047C  00D0               	movwf	??_vfpfcnvrt
  2768  047D  3F41               	moviw [1]fsr1
  2769  047E  00D1               	movwf	??_vfpfcnvrt+1
  2770  047F  0850               	movf	??_vfpfcnvrt,w
  2771  0480  0084               	movwf	4
  2772  0481  0851               	movf	??_vfpfcnvrt+1,w
  2773  0482  0085               	movwf	5
  2774  0483  0800               	movf	0,w	;code access
  2775  0484  00D2               	movwf	??_vfpfcnvrt+2
  2776  0485  01D3               	clrf	??_vfpfcnvrt+3
  2777  0486  0852               	movf	??_vfpfcnvrt+2,w
  2778  0487  00F0               	movwf	fputc@c
  2779  0488  0853               	movf	??_vfpfcnvrt+3,w
  2780  0489  00F1               	movwf	fputc@c+1
  2781  048A  085D               	movf	vfpfcnvrt@fp,w
  2782  048B  00D4               	movwf	??_vfpfcnvrt+4
  2783  048C  0854               	movf	??_vfpfcnvrt+4,w
  2784  048D  00F2               	movwf	fputc@fp
  2785  048E  3180  202E  3183   	fcall	_fputc
  2786  0491                     l1592:
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2789  0491  0020               	movlb	0	; select bank0
  2790  0492  084E               	movf	vfpfcnvrt@fmt,w
  2791  0493  0086               	movwf	6
  2792  0494  0187               	clrf	7
  2793  0495  3001               	movlw	1
  2794  0496  0781               	addwf	1,f
  2795  0497  3141               	addfsr 1,1
  2796  0498  1803               	skipnc
  2797  0499  0A81               	incf	1,f
  2798  049A  2C67               	goto	l1580
  2799  049B                     l799:
  2800  049B  0008               	return
  2801  049C                     __end_of_vfpfcnvrt:
  2802                           
  2803                           	psect	text7
  2804  0687                     __ptext7:	
  2805 ;; *************** function _dtoa *****************
  2806 ;; Defined at:
  2807 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  fp              1    wreg     PTR struct _IO_FILE
  2810 ;;		 -> sprintf@f(5), 
  2811 ;;  d               8   16[BANK0 ] long long 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2814 ;;		 -> sprintf@f(5), 
  2815 ;;  n               8   36[BANK0 ] long long 
  2816 ;;  i               2   44[BANK0 ] int 
  2817 ;;  s               2   34[BANK0 ] int 
  2818 ;;  w               2   32[BANK0 ] int 
  2819 ;;  p               2   30[BANK0 ] int 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  2   16[BANK0 ] int 
  2822 ;; Registers used:
  2823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2829 ;;      Params:         0       8       0       0       0       0       0       0
  2830 ;;      Locals:         0      19       0       0       0       0       0       0
  2831 ;;      Temps:          0       3       0       0       0       0       0       0
  2832 ;;      Totals:         0      30       0       0       0       0       0       0
  2833 ;;Total ram usage:       30 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    4
  2836 ;; This function calls:
  2837 ;;		___aodiv
  2838 ;;		___aomod
  2839 ;;		_abs
  2840 ;;		_pad
  2841 ;; This function is called by:
  2842 ;;		_vfpfcnvrt
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _dtoa
  2848  0687                     _dtoa:
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2852                           ;dtoa@fp stored from wreg
  2853  0687  0020               	movlb	0	; select bank0
  2854  0688  00BD               	movwf	dtoa@fp
  2855  0689                     l1480:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2858  0689  0830               	movf	dtoa@d,w
  2859  068A  00C4               	movwf	dtoa@n
  2860  068B  0831               	movf	dtoa@d+1,w
  2861  068C  00C5               	movwf	dtoa@n+1
  2862  068D  0832               	movf	dtoa@d+2,w
  2863  068E  00C6               	movwf	dtoa@n+2
  2864  068F  0833               	movf	dtoa@d+3,w
  2865  0690  00C7               	movwf	dtoa@n+3
  2866  0691  0834               	movf	dtoa@d+4,w
  2867  0692  00C8               	movwf	dtoa@n+4
  2868  0693  0835               	movf	dtoa@d+5,w
  2869  0694  00C9               	movwf	dtoa@n+5
  2870  0695  0836               	movf	dtoa@d+6,w
  2871  0696  00CA               	movwf	dtoa@n+6
  2872  0697  0837               	movf	dtoa@d+7,w
  2873  0698  00CB               	movwf	dtoa@n+7
  2874  0699                     l1482:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2877  0699  3044               	movlw	low dtoa@n
  2878  069A  0086               	movwf	6
  2879  069B  3000               	movlw	high dtoa@n
  2880  069C  0087               	movwf	7
  2881  069D  3F47               	moviw [7]fsr1
  2882  069E  00B8               	movwf	??_dtoa
  2883  069F  1BB8               	btfsc	??_dtoa,7
  2884  06A0  2EA2               	goto	u1041
  2885  06A1  2EA4               	goto	u1040
  2886  06A2                     u1041:
  2887  06A2  3001               	movlw	1
  2888  06A3  2EA5               	goto	u1050
  2889  06A4                     u1040:
  2890  06A4  3000               	movlw	0
  2891  06A5                     u1050:
  2892  06A5  0020               	movlb	0	; select bank0
  2893  06A6  00B9               	movwf	??_dtoa+1
  2894  06A7  01BA               	clrf	??_dtoa+2
  2895  06A8  0839               	movf	??_dtoa+1,w
  2896  06A9  00C2               	movwf	dtoa@s
  2897  06AA  083A               	movf	??_dtoa+2,w
  2898  06AB  00C3               	movwf	dtoa@s+1
  2899  06AC                     l1484:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2902  06AC  0842               	movf	dtoa@s,w
  2903  06AD  0443               	iorwf	dtoa@s+1,w
  2904  06AE  1903               	btfsc	3,2
  2905  06AF  2EB1               	goto	u1061
  2906  06B0  2EB2               	goto	u1060
  2907  06B1                     u1061:
  2908  06B1  2ED0               	goto	l769
  2909  06B2                     u1060:
  2910  06B2                     l1486:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2913  06B2  09C4               	comf	dtoa@n,f
  2914  06B3  09C5               	comf	dtoa@n+1,f
  2915  06B4  09C6               	comf	dtoa@n+2,f
  2916  06B5  09C7               	comf	dtoa@n+3,f
  2917  06B6  09C8               	comf	dtoa@n+4,f
  2918  06B7  09C9               	comf	dtoa@n+5,f
  2919  06B8  09CA               	comf	dtoa@n+6,f
  2920  06B9  09CB               	comf	dtoa@n+7,f
  2921  06BA  0AC4               	incf	dtoa@n,f
  2922  06BB  1D03               	skipz
  2923  06BC  2ED0               	goto	u107lld
  2924  06BD  0AC5               	incf	dtoa@n+1,f
  2925  06BE  1D03               	skipz
  2926  06BF  2ED0               	goto	u107lld
  2927  06C0  0AC6               	incf	dtoa@n+2,f
  2928  06C1  1D03               	skipz
  2929  06C2  2ED0               	goto	u107lld
  2930  06C3  0AC7               	incf	dtoa@n+3,f
  2931  06C4  1D03               	skipz
  2932  06C5  2ED0               	goto	u107lld
  2933  06C6  0AC8               	incf	dtoa@n+4,f
  2934  06C7  1D03               	skipz
  2935  06C8  2ED0               	goto	u107lld
  2936  06C9  0AC9               	incf	dtoa@n+5,f
  2937  06CA  1D03               	skipz
  2938  06CB  2ED0               	goto	u107lld
  2939  06CC  0ACA               	incf	dtoa@n+6,f
  2940  06CD  1D03               	skipz
  2941  06CE  2ED0               	goto	u107lld
  2942  06CF  0ACB               	incf	dtoa@n+7,f
  2943  06D0                     u107lld:
  2944  06D0                     l769:	
  2945                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 297:     }
  2946                           
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2949  06D0  0021               	movlb	1	; select bank1
  2950  06D1  1BA5               	btfsc	(_prec+1)^(0+128),7
  2951  06D2  2ED4               	goto	u1081
  2952  06D3  2ED5               	goto	u1080
  2953  06D4                     u1081:
  2954  06D4  2ED9               	goto	l770
  2955  06D5                     u1080:
  2956  06D5                     l1488:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2959  06D5  30FD               	movlw	253
  2960  06D6  05A6               	andwf	_flags^(0+128),f
  2961  06D7  30FF               	movlw	255
  2962  06D8  05A7               	andwf	(_flags+1)^(0+128),f
  2963  06D9                     l770:	
  2964                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 302:     }
  2965                           
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2968  06D9  0825               	movf	(_prec+1)^(0+128),w
  2969  06DA  3A80               	xorlw	128
  2970  06DB  0020               	movlb	0	; select bank0
  2971  06DC  00B8               	movwf	??_dtoa
  2972  06DD  3080               	movlw	128
  2973  06DE  0238               	subwf	??_dtoa,w
  2974  06DF  1D03               	skipz
  2975  06E0  2EE4               	goto	u1095
  2976  06E1  3001               	movlw	1
  2977  06E2  0021               	movlb	1	; select bank1
  2978  06E3  0224               	subwf	_prec^(0+128),w
  2979  06E4                     u1095:
  2980  06E4  1803               	skipnc
  2981  06E5  2EE7               	goto	u1091
  2982  06E6  2EE8               	goto	u1090
  2983  06E7                     u1091:
  2984  06E7  2EEE               	goto	l1492
  2985  06E8                     u1090:
  2986  06E8                     l1490:
  2987  06E8  3001               	movlw	1
  2988  06E9  0020               	movlb	0	; select bank0
  2989  06EA  00BE               	movwf	dtoa@p
  2990  06EB  3000               	movlw	0
  2991  06EC  00BF               	movwf	dtoa@p+1
  2992  06ED  2EF6               	goto	l774
  2993  06EE                     l1492:
  2994  06EE  0021               	movlb	1	; select bank1
  2995  06EF  0825               	movf	(_prec+1)^(0+128),w
  2996  06F0  0020               	movlb	0	; select bank0
  2997  06F1  00BF               	movwf	dtoa@p+1
  2998  06F2  0021               	movlb	1	; select bank1
  2999  06F3  0824               	movf	_prec^(0+128),w
  3000  06F4  0020               	movlb	0	; select bank0
  3001  06F5  00BE               	movwf	dtoa@p
  3002  06F6                     l774:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3005  06F6  0021               	movlb	1	; select bank1
  3006  06F7  0823               	movf	(_width+1)^(0+128),w
  3007  06F8  0020               	movlb	0	; select bank0
  3008  06F9  00C1               	movwf	dtoa@w+1
  3009  06FA  0021               	movlb	1	; select bank1
  3010  06FB  0822               	movf	_width^(0+128),w
  3011  06FC  0020               	movlb	0	; select bank0
  3012  06FD  00C0               	movwf	dtoa@w
  3013  06FE                     l1494:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3016  06FE  0842               	movf	dtoa@s,w
  3017  06FF  0443               	iorwf	dtoa@s+1,w
  3018  0700  1D03               	btfss	3,2
  3019  0701  2F03               	goto	u1101
  3020  0702  2F04               	goto	u1100
  3021  0703                     u1101:
  3022  0703  2F09               	goto	l1498
  3023  0704                     u1100:
  3024  0704                     l1496:
  3025  0704  0021               	movlb	1	; select bank1
  3026  0705  1D26               	btfss	_flags^(0+128),2
  3027  0706  2F08               	goto	u1111
  3028  0707  2F09               	goto	u1110
  3029  0708                     u1111:
  3030  0708  2F0E               	goto	l775
  3031  0709                     u1110:
  3032  0709                     l1498:
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  3035  0709  30FF               	movlw	255
  3036  070A  0020               	movlb	0	; select bank0
  3037  070B  07C0               	addwf	dtoa@w,f
  3038  070C  30FF               	movlw	255
  3039  070D  3DC1               	addwfc	dtoa@w+1,f
  3040  070E                     l775:	
  3041                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 307:     }
  3042                           
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3045  070E  301F               	movlw	31
  3046  070F  0020               	movlb	0	; select bank0
  3047  0710  00CC               	movwf	dtoa@i
  3048  0711  3000               	movlw	0
  3049  0712  00CD               	movwf	dtoa@i+1
  3050  0713                     l1500:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3053  0713  0021               	movlb	1	; select bank1
  3054  0714  01C7               	clrf	(_dbuf^(0+128)+31)
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3057  0715  2F7E               	goto	l778
  3058  0716                     l1502:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  3061  0716  30FF               	movlw	255
  3062  0717  0020               	movlb	0	; select bank0
  3063  0718  07CC               	addwf	dtoa@i,f
  3064  0719  30FF               	movlw	255
  3065  071A  3DCD               	addwfc	dtoa@i+1,f
  3066  071B                     l1504:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3069  071B  300A               	movlw	10
  3070  071C  00A0               	movwf	___aomod@divisor
  3071  071D  01A1               	clrf	___aomod@divisor+1
  3072  071E  01A2               	clrf	___aomod@divisor+2
  3073  071F  01A3               	clrf	___aomod@divisor+3
  3074  0720  01A4               	clrf	___aomod@divisor+4
  3075  0721  01A5               	clrf	___aomod@divisor+5
  3076  0722  01A6               	clrf	___aomod@divisor+6
  3077  0723  01A7               	clrf	___aomod@divisor+7
  3078  0724  0844               	movf	dtoa@n,w
  3079  0725  00A8               	movwf	___aomod@dividend
  3080  0726  0845               	movf	dtoa@n+1,w
  3081  0727  00A9               	movwf	___aomod@dividend+1
  3082  0728  0846               	movf	dtoa@n+2,w
  3083  0729  00AA               	movwf	___aomod@dividend+2
  3084  072A  0847               	movf	dtoa@n+3,w
  3085  072B  00AB               	movwf	___aomod@dividend+3
  3086  072C  0848               	movf	dtoa@n+4,w
  3087  072D  00AC               	movwf	___aomod@dividend+4
  3088  072E  0849               	movf	dtoa@n+5,w
  3089  072F  00AD               	movwf	___aomod@dividend+5
  3090  0730  084A               	movf	dtoa@n+6,w
  3091  0731  00AE               	movwf	___aomod@dividend+6
  3092  0732  084B               	movf	dtoa@n+7,w
  3093  0733  00AF               	movwf	___aomod@dividend+7
  3094  0734  3184  249C  3186   	fcall	___aomod
  3095  0737  0020               	movlb	0	; select bank0
  3096  0738  0821               	movf	?___aomod+1,w
  3097  0739  00F4               	movwf	abs@a+1
  3098  073A  0820               	movf	?___aomod,w
  3099  073B  00F3               	movwf	abs@a
  3100  073C  318E  2686  3186   	fcall	_abs
  3101  073F  0873               	movf	?_abs,w
  3102  0740  3E30               	addlw	48
  3103  0741  0020               	movlb	0	; select bank0
  3104  0742  00B8               	movwf	??_dtoa
  3105  0743  084C               	movf	dtoa@i,w
  3106  0744  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  3107  0745  0086               	movwf	6
  3108  0746  0187               	clrf	7
  3109  0747  0838               	movf	??_dtoa,w
  3110  0748  0081               	movwf	1
  3111  0749                     l1506:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  3114  0749  30FF               	movlw	255
  3115  074A  07BE               	addwf	dtoa@p,f
  3116  074B  30FF               	movlw	255
  3117  074C  3DBF               	addwfc	dtoa@p+1,f
  3118  074D                     l1508:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  3121  074D  30FF               	movlw	255
  3122  074E  07C0               	addwf	dtoa@w,f
  3123  074F  30FF               	movlw	255
  3124  0750  3DC1               	addwfc	dtoa@w+1,f
  3125  0751                     l1510:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3128  0751  300A               	movlw	10
  3129  0752  00A0               	movwf	___aodiv@divisor
  3130  0753  01A1               	clrf	___aodiv@divisor+1
  3131  0754  01A2               	clrf	___aodiv@divisor+2
  3132  0755  01A3               	clrf	___aodiv@divisor+3
  3133  0756  01A4               	clrf	___aodiv@divisor+4
  3134  0757  01A5               	clrf	___aodiv@divisor+5
  3135  0758  01A6               	clrf	___aodiv@divisor+6
  3136  0759  01A7               	clrf	___aodiv@divisor+7
  3137  075A  0844               	movf	dtoa@n,w
  3138  075B  00A8               	movwf	___aodiv@dividend
  3139  075C  0845               	movf	dtoa@n+1,w
  3140  075D  00A9               	movwf	___aodiv@dividend+1
  3141  075E  0846               	movf	dtoa@n+2,w
  3142  075F  00AA               	movwf	___aodiv@dividend+2
  3143  0760  0847               	movf	dtoa@n+3,w
  3144  0761  00AB               	movwf	___aodiv@dividend+3
  3145  0762  0848               	movf	dtoa@n+4,w
  3146  0763  00AC               	movwf	___aodiv@dividend+4
  3147  0764  0849               	movf	dtoa@n+5,w
  3148  0765  00AD               	movwf	___aodiv@dividend+5
  3149  0766  084A               	movf	dtoa@n+6,w
  3150  0767  00AE               	movwf	___aodiv@dividend+6
  3151  0768  084B               	movf	dtoa@n+7,w
  3152  0769  00AF               	movwf	___aodiv@dividend+7
  3153  076A  3185  2586  3186   	fcall	___aodiv
  3154  076D  0020               	movlb	0	; select bank0
  3155  076E  0820               	movf	?___aodiv,w
  3156  076F  00C4               	movwf	dtoa@n
  3157  0770  0821               	movf	?___aodiv+1,w
  3158  0771  00C5               	movwf	dtoa@n+1
  3159  0772  0822               	movf	?___aodiv+2,w
  3160  0773  00C6               	movwf	dtoa@n+2
  3161  0774  0823               	movf	?___aodiv+3,w
  3162  0775  00C7               	movwf	dtoa@n+3
  3163  0776  0824               	movf	?___aodiv+4,w
  3164  0777  00C8               	movwf	dtoa@n+4
  3165  0778  0825               	movf	?___aodiv+5,w
  3166  0779  00C9               	movwf	dtoa@n+5
  3167  077A  0826               	movf	?___aodiv+6,w
  3168  077B  00CA               	movwf	dtoa@n+6
  3169  077C  0827               	movf	?___aodiv+7,w
  3170  077D  00CB               	movwf	dtoa@n+7
  3171  077E                     l778:	
  3172                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 318:     }
  3173                           
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3176  077E  0020               	movlb	0	; select bank0
  3177  077F  084D               	movf	dtoa@i+1,w
  3178  0780  3A80               	xorlw	128
  3179  0781  00B8               	movwf	??_dtoa
  3180  0782  3080               	movlw	128
  3181  0783  0238               	subwf	??_dtoa,w
  3182  0784  1D03               	skipz
  3183  0785  2F88               	goto	u1125
  3184  0786  3001               	movlw	1
  3185  0787  024C               	subwf	dtoa@i,w
  3186  0788                     u1125:
  3187  0788  1C03               	skipc
  3188  0789  2F8B               	goto	u1121
  3189  078A  2F8C               	goto	u1120
  3190  078B                     u1121:
  3191  078B  2FB9               	goto	l1520
  3192  078C                     u1120:
  3193  078C                     l1512:
  3194  078C  0020               	movlb	0	; select bank0
  3195  078D  0844               	movf	dtoa@n,w
  3196  078E  0445               	iorwf	dtoa@n+1,w
  3197  078F  0446               	iorwf	dtoa@n+2,w
  3198  0790  0447               	iorwf	dtoa@n+3,w
  3199  0791  0448               	iorwf	dtoa@n+4,w
  3200  0792  0449               	iorwf	dtoa@n+5,w
  3201  0793  044A               	iorwf	dtoa@n+6,w
  3202  0794  044B               	iorwf	dtoa@n+7,w
  3203  0795  1D03               	skipz
  3204  0796  2F98               	goto	u1131
  3205  0797  2F99               	goto	u1130
  3206  0798                     u1131:
  3207  0798  2F16               	goto	l1502
  3208  0799                     u1130:
  3209  0799                     l1514:
  3210  0799  083F               	movf	dtoa@p+1,w
  3211  079A  3A80               	xorlw	128
  3212  079B  00B8               	movwf	??_dtoa
  3213  079C  3080               	movlw	128
  3214  079D  0238               	subwf	??_dtoa,w
  3215  079E  1D03               	skipz
  3216  079F  2FA2               	goto	u1145
  3217  07A0  3001               	movlw	1
  3218  07A1  023E               	subwf	dtoa@p,w
  3219  07A2                     u1145:
  3220  07A2  1803               	skipnc
  3221  07A3  2FA5               	goto	u1141
  3222  07A4  2FA6               	goto	u1140
  3223  07A5                     u1141:
  3224  07A5  2F16               	goto	l1502
  3225  07A6                     u1140:
  3226  07A6                     l1516:
  3227  07A6  0020               	movlb	0	; select bank0
  3228  07A7  0841               	movf	dtoa@w+1,w
  3229  07A8  3A80               	xorlw	128
  3230  07A9  00B8               	movwf	??_dtoa
  3231  07AA  3080               	movlw	128
  3232  07AB  0238               	subwf	??_dtoa,w
  3233  07AC  1D03               	skipz
  3234  07AD  2FB0               	goto	u1155
  3235  07AE  3001               	movlw	1
  3236  07AF  0240               	subwf	dtoa@w,w
  3237  07B0                     u1155:
  3238  07B0  1C03               	skipc
  3239  07B1  2FB3               	goto	u1151
  3240  07B2  2FB4               	goto	u1150
  3241  07B3                     u1151:
  3242  07B3  2FB9               	goto	l1520
  3243  07B4                     u1150:
  3244  07B4                     l1518:
  3245  07B4  0021               	movlb	1	; select bank1
  3246  07B5  18A6               	btfsc	_flags^(0+128),1
  3247  07B6  2FB8               	goto	u1161
  3248  07B7  2FB9               	goto	u1160
  3249  07B8                     u1161:
  3250  07B8  2F16               	goto	l1502
  3251  07B9                     u1160:
  3252  07B9                     l1520:
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3255  07B9  0020               	movlb	0	; select bank0
  3256  07BA  0842               	movf	dtoa@s,w
  3257  07BB  0443               	iorwf	dtoa@s+1,w
  3258  07BC  1D03               	btfss	3,2
  3259  07BD  2FBF               	goto	u1171
  3260  07BE  2FC0               	goto	u1170
  3261  07BF                     u1171:
  3262  07BF  2FC5               	goto	l1524
  3263  07C0                     u1170:
  3264  07C0                     l1522:
  3265  07C0  0021               	movlb	1	; select bank1
  3266  07C1  1D26               	btfss	_flags^(0+128),2
  3267  07C2  2FC4               	goto	u1181
  3268  07C3  2FC5               	goto	u1180
  3269  07C4                     u1181:
  3270  07C4  2FE1               	goto	l1534
  3271  07C5                     u1180:
  3272  07C5                     l1524:
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  3275  07C5  30FF               	movlw	255
  3276  07C6  0020               	movlb	0	; select bank0
  3277  07C7  07CC               	addwf	dtoa@i,f
  3278  07C8  30FF               	movlw	255
  3279  07C9  3DCD               	addwfc	dtoa@i+1,f
  3280  07CA                     l1526:
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3283  07CA  0842               	movf	dtoa@s,w
  3284  07CB  0443               	iorwf	dtoa@s+1,w
  3285  07CC  1D03               	btfss	3,2
  3286  07CD  2FCF               	goto	u1191
  3287  07CE  2FD0               	goto	u1190
  3288  07CF                     u1191:
  3289  07CF  2FD5               	goto	l1530
  3290  07D0                     u1190:
  3291  07D0                     l1528:
  3292  07D0  302B               	movlw	43
  3293  07D1  00BB               	movwf	_dtoa$662
  3294  07D2  3000               	movlw	0
  3295  07D3  00BC               	movwf	_dtoa$662+1
  3296  07D4  2FD9               	goto	l1532
  3297  07D5                     l1530:
  3298  07D5  302D               	movlw	45
  3299  07D6  00BB               	movwf	_dtoa$662
  3300  07D7  3000               	movlw	0
  3301  07D8  00BC               	movwf	_dtoa$662+1
  3302  07D9                     l1532:
  3303  07D9  083B               	movf	_dtoa$662,w
  3304  07DA  00B8               	movwf	??_dtoa
  3305  07DB  084C               	movf	dtoa@i,w
  3306  07DC  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  3307  07DD  0086               	movwf	6
  3308  07DE  0187               	clrf	7
  3309  07DF  0838               	movf	??_dtoa,w
  3310  07E0  0081               	movwf	1
  3311  07E1                     l1534:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3314  07E1  0020               	movlb	0	; select bank0
  3315  07E2  084C               	movf	dtoa@i,w
  3316  07E3  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  3317  07E4  00B8               	movwf	??_dtoa
  3318  07E5  0838               	movf	??_dtoa,w
  3319  07E6  00A4               	movwf	pad@buf
  3320  07E7  0841               	movf	dtoa@w+1,w
  3321  07E8  00A6               	movwf	pad@p+1
  3322  07E9  0840               	movf	dtoa@w,w
  3323  07EA  00A5               	movwf	pad@p
  3324  07EB  083D               	movf	dtoa@fp,w
  3325  07EC  3180  207D  3186   	fcall	_pad
  3326  07EF  0020               	movlb	0	; select bank0
  3327  07F0  0825               	movf	?_pad+1,w
  3328  07F1  00B1               	movwf	?_dtoa+1
  3329  07F2  0824               	movf	?_pad,w
  3330  07F3  00B0               	movwf	?_dtoa
  3331  07F4                     l792:
  3332  07F4  0008               	return
  3333  07F5                     __end_of_dtoa:
  3334                           
  3335                           	psect	text8
  3336  007D                     __ptext8:	
  3337 ;; *************** function _pad *****************
  3338 ;; Defined at:
  3339 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  fp              1    wreg     PTR struct _IO_FILE
  3342 ;;		 -> sprintf@f(5), 
  3343 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  3344 ;;		 -> dbuf(32), 
  3345 ;;  p               2    5[BANK0 ] int 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  3348 ;;		 -> sprintf@f(5), 
  3349 ;;  w               2    9[BANK0 ] int 
  3350 ;;  i               2    7[BANK0 ] int 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  2    4[BANK0 ] int 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3360 ;;      Params:         0       3       0       0       0       0       0       0
  3361 ;;      Locals:         0       5       0       0       0       0       0       0
  3362 ;;      Temps:          1       0       0       0       0       0       0       0
  3363 ;;      Totals:         1       8       0       0       0       0       0       0
  3364 ;;Total ram usage:        9 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    3
  3367 ;; This function calls:
  3368 ;;		_fputc
  3369 ;;		_fputs
  3370 ;;		_strlen
  3371 ;; This function is called by:
  3372 ;;		_dtoa
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function _pad
  3378  007D                     _pad:
  3379                           
  3380                           ;incstack = 0
  3381                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3382                           ;pad@fp stored from wreg
  3383  007D  0020               	movlb	0	; select bank0
  3384  007E  00AB               	movwf	pad@fp
  3385  007F                     l1454:
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3388  007F  0021               	movlb	1	; select bank1
  3389  0080  1C26               	btfss	_flags^(0+128),0
  3390  0081  2883               	goto	u991
  3391  0082  2884               	goto	u990
  3392  0083                     u991:
  3393  0083  288D               	goto	l1458
  3394  0084                     u990:
  3395  0084                     l1456:
  3396                           
  3397                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3398  0084  0020               	movlb	0	; select bank0
  3399  0085  082B               	movf	pad@fp,w
  3400  0086  00FC               	movwf	??_pad
  3401  0087  087C               	movf	??_pad,w
  3402  0088  00F8               	movwf	fputs@fp
  3403  0089  0824               	movf	pad@buf,w
  3404  008A  3180  2006  3180   	fcall	_fputs
  3405  008D                     l1458:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3408  008D  0020               	movlb	0	; select bank0
  3409  008E  1BA6               	btfsc	pad@p+1,7
  3410  008F  2891               	goto	u1001
  3411  0090  2892               	goto	u1000
  3412  0091                     u1001:
  3413  0091  2897               	goto	l1462
  3414  0092                     u1000:
  3415  0092                     l1460:
  3416  0092  0826               	movf	pad@p+1,w
  3417  0093  00AA               	movwf	pad@w+1
  3418  0094  0825               	movf	pad@p,w
  3419  0095  00A9               	movwf	pad@w
  3420  0096  2899               	goto	l761
  3421  0097                     l1462:
  3422  0097  01A9               	clrf	pad@w
  3423  0098  01AA               	clrf	pad@w+1
  3424  0099                     l761:
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3427  0099  01A7               	clrf	pad@i
  3428  009A  01A8               	clrf	pad@i+1
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3431  009B  28AD               	goto	l1468
  3432  009C                     l1464:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3435  009C  3020               	movlw	32
  3436  009D  00F0               	movwf	fputc@c
  3437  009E  3000               	movlw	0
  3438  009F  00F1               	movwf	fputc@c+1
  3439  00A0  0020               	movlb	0	; select bank0
  3440  00A1  082B               	movf	pad@fp,w
  3441  00A2  00FC               	movwf	??_pad
  3442  00A3  087C               	movf	??_pad,w
  3443  00A4  00F2               	movwf	fputc@fp
  3444  00A5  3180  202E  3180   	fcall	_fputc
  3445  00A8                     l1466:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3448  00A8  3001               	movlw	1
  3449  00A9  0020               	movlb	0	; select bank0
  3450  00AA  07A7               	addwf	pad@i,f
  3451  00AB  3000               	movlw	0
  3452  00AC  3DA8               	addwfc	pad@i+1,f
  3453  00AD                     l1468:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3456  00AD  0828               	movf	pad@i+1,w
  3457  00AE  3A80               	xorlw	128
  3458  00AF  00FC               	movwf	??_pad
  3459  00B0  082A               	movf	pad@w+1,w
  3460  00B1  3A80               	xorlw	128
  3461  00B2  027C               	subwf	??_pad,w
  3462  00B3  1D03               	skipz
  3463  00B4  28B7               	goto	u1015
  3464  00B5  0829               	movf	pad@w,w
  3465  00B6  0227               	subwf	pad@i,w
  3466  00B7                     u1015:
  3467  00B7  1C03               	skipc
  3468  00B8  28BA               	goto	u1011
  3469  00B9  28BB               	goto	u1010
  3470  00BA                     u1011:
  3471  00BA  289C               	goto	l1464
  3472  00BB                     u1010:
  3473  00BB                     l764:
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3476  00BB  0021               	movlb	1	; select bank1
  3477  00BC  1826               	btfsc	_flags^(0+128),0
  3478  00BD  28BF               	goto	u1021
  3479  00BE  28C0               	goto	u1020
  3480  00BF                     u1021:
  3481  00BF  28C9               	goto	l1472
  3482  00C0                     u1020:
  3483  00C0                     l1470:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3486  00C0  0020               	movlb	0	; select bank0
  3487  00C1  082B               	movf	pad@fp,w
  3488  00C2  00FC               	movwf	??_pad
  3489  00C3  087C               	movf	??_pad,w
  3490  00C4  00F8               	movwf	fputs@fp
  3491  00C5  0824               	movf	pad@buf,w
  3492  00C6  3180  2006  3180   	fcall	_fputs
  3493  00C9                     l1472:
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3496  00C9  0020               	movlb	0	; select bank0
  3497  00CA  0824               	movf	pad@buf,w
  3498  00CB  318E  266D  3180   	fcall	_strlen
  3499  00CE  0020               	movlb	0	; select bank0
  3500  00CF  0829               	movf	pad@w,w
  3501  00D0  0770               	addwf	?_strlen,w
  3502  00D1  00A4               	movwf	?_pad
  3503  00D2  082A               	movf	pad@w+1,w
  3504  00D3  3D71               	addwfc	?_strlen+1,w
  3505  00D4  00A5               	movwf	?_pad+1
  3506  00D5                     l766:
  3507  00D5  0008               	return
  3508  00D6                     __end_of_pad:
  3509                           
  3510                           	psect	text9
  3511  0E6D                     __ptext9:	
  3512 ;; *************** function _strlen *****************
  3513 ;; Defined at:
  3514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  s               1    wreg     PTR const unsigned char 
  3517 ;;		 -> dbuf(32), 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  s               1    4[COMMON] PTR const unsigned char 
  3520 ;;		 -> dbuf(32), 
  3521 ;;  a               1    3[COMMON] PTR const unsigned char 
  3522 ;;		 -> dbuf(32), 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  2    0[COMMON] unsigned int 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3532 ;;      Params:         2       0       0       0       0       0       0       0
  3533 ;;      Locals:         2       0       0       0       0       0       0       0
  3534 ;;      Temps:          1       0       0       0       0       0       0       0
  3535 ;;      Totals:         5       0       0       0       0       0       0       0
  3536 ;;Total ram usage:        5 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_pad
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           
  3546                           ;psect for function _strlen
  3547  0E6D                     _strlen:
  3548                           
  3549                           ;incstack = 0
  3550                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3551                           ;strlen@s stored from wreg
  3552  0E6D  00F4               	movwf	strlen@s
  3553  0E6E                     l1376:
  3554  0E6E  0874               	movf	strlen@s,w
  3555  0E6F  00F2               	movwf	??_strlen
  3556  0E70  0872               	movf	??_strlen,w
  3557  0E71  00F3               	movwf	strlen@a
  3558  0E72  2E77               	goto	l1380
  3559  0E73                     l1378:
  3560  0E73  3001               	movlw	1
  3561  0E74  00F2               	movwf	??_strlen
  3562  0E75  0872               	movf	??_strlen,w
  3563  0E76  07F4               	addwf	strlen@s,f
  3564  0E77                     l1380:
  3565  0E77  0874               	movf	strlen@s,w
  3566  0E78  0086               	movwf	6
  3567  0E79  0187               	clrf	7
  3568  0E7A  0801               	movf	1,w
  3569  0E7B  1D03               	btfss	3,2
  3570  0E7C  2E7E               	goto	u771
  3571  0E7D  2E7F               	goto	u770
  3572  0E7E                     u771:
  3573  0E7E  2E73               	goto	l1378
  3574  0E7F                     u770:
  3575  0E7F                     l1382:
  3576  0E7F  0873               	movf	strlen@a,w
  3577  0E80  0274               	subwf	strlen@s,w
  3578  0E81  00F0               	movwf	?_strlen
  3579  0E82  01F1               	clrf	?_strlen+1
  3580  0E83  1BF0               	btfsc	?_strlen,7
  3581  0E84  03F1               	decf	?_strlen+1,f
  3582  0E85                     l842:
  3583  0E85  0008               	return
  3584  0E86                     __end_of_strlen:
  3585                           
  3586                           	psect	text10
  3587  0006                     __ptext10:	
  3588 ;; *************** function _fputs *****************
  3589 ;; Defined at:
  3590 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  s               1    wreg     PTR const unsigned char 
  3593 ;;		 -> dbuf(32), 
  3594 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  3595 ;;		 -> sprintf@f(5), 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3598 ;;		 -> dbuf(32), 
  3599 ;;  i               2    1[BANK0 ] int 
  3600 ;;  c               1    0[BANK0 ] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2    8[COMMON] int 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3610 ;;      Params:         1       0       0       0       0       0       0       0
  3611 ;;      Locals:         0       4       0       0       0       0       0       0
  3612 ;;      Temps:          3       0       0       0       0       0       0       0
  3613 ;;      Totals:         4       4       0       0       0       0       0       0
  3614 ;;Total ram usage:        8 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    2
  3617 ;; This function calls:
  3618 ;;		_fputc
  3619 ;; This function is called by:
  3620 ;;		_pad
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _fputs
  3626  0006                     _fputs:
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3630                           ;fputs@s stored from wreg
  3631  0006  0020               	movlb	0	; select bank0
  3632  0007  00A3               	movwf	fputs@s
  3633  0008                     l1368:
  3634  0008  01A1               	clrf	fputs@i
  3635  0009  01A2               	clrf	fputs@i+1
  3636  000A  281E               	goto	l1374
  3637  000B                     l1370:
  3638  000B  0820               	movf	fputs@c,w
  3639  000C  00F9               	movwf	??_fputs
  3640  000D  01FA               	clrf	??_fputs+1
  3641  000E  0879               	movf	??_fputs,w
  3642  000F  00F0               	movwf	fputc@c
  3643  0010  087A               	movf	??_fputs+1,w
  3644  0011  00F1               	movwf	fputc@c+1
  3645  0012  0878               	movf	fputs@fp,w
  3646  0013  00FB               	movwf	??_fputs+2
  3647  0014  087B               	movf	??_fputs+2,w
  3648  0015  00F2               	movwf	fputc@fp
  3649  0016  3180  202E  3180   	fcall	_fputc
  3650  0019                     l1372:
  3651  0019  3001               	movlw	1
  3652  001A  0020               	movlb	0	; select bank0
  3653  001B  07A1               	addwf	fputs@i,f
  3654  001C  3000               	movlw	0
  3655  001D  3DA2               	addwfc	fputs@i+1,f
  3656  001E                     l1374:
  3657  001E  0821               	movf	fputs@i,w
  3658  001F  0723               	addwf	fputs@s,w
  3659  0020  00F9               	movwf	??_fputs
  3660  0021  0879               	movf	??_fputs,w
  3661  0022  0086               	movwf	6
  3662  0023  0187               	clrf	7
  3663  0024  0801               	movf	1,w
  3664  0025  00FA               	movwf	??_fputs+1
  3665  0026  087A               	movf	??_fputs+1,w
  3666  0027  00A0               	movwf	fputs@c
  3667  0028  0820               	movf	fputs@c,w
  3668  0029  1D03               	btfss	3,2
  3669  002A  282C               	goto	u761
  3670  002B  282D               	goto	u760
  3671  002C                     u761:
  3672  002C  280B               	goto	l1370
  3673  002D                     u760:
  3674  002D                     l833:
  3675  002D  0008               	return
  3676  002E                     __end_of_fputs:
  3677                           
  3678                           	psect	text11
  3679  002E                     __ptext11:	
  3680 ;; *************** function _fputc *****************
  3681 ;; Defined at:
  3682 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  c               2    0[COMMON] int 
  3685 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  3686 ;;		 -> sprintf@f(5), 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  2    0[COMMON] int 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3698 ;;      Params:         3       0       0       0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0
  3700 ;;      Temps:          5       0       0       0       0       0       0       0
  3701 ;;      Totals:         8       0       0       0       0       0       0       0
  3702 ;;Total ram usage:        8 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    1
  3705 ;; This function calls:
  3706 ;;		_putch
  3707 ;; This function is called by:
  3708 ;;		_pad
  3709 ;;		_vfpfcnvrt
  3710 ;;		_fputs
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _fputc
  3716  002E                     _fputc:
  3717  002E                     l1352:	
  3718                           ;incstack = 0
  3719                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3720                           
  3721  002E  0872               	movf	fputc@fp,w
  3722  002F  1903               	btfsc	3,2
  3723  0030  2832               	goto	u721
  3724  0031  2833               	goto	u720
  3725  0032                     u721:
  3726  0032  2838               	goto	l1356
  3727  0033                     u720:
  3728  0033                     l1354:
  3729  0033  0872               	movf	fputc@fp,w
  3730  0034  1D03               	btfss	3,2
  3731  0035  2837               	goto	u731
  3732  0036  2838               	goto	u730
  3733  0037                     u731:
  3734  0037  283D               	goto	l1358
  3735  0038                     u730:
  3736  0038                     l1356:
  3737  0038  0870               	movf	fputc@c,w
  3738  0039  3180  2005  3180   	fcall	_putch
  3739  003C  287C               	goto	l825
  3740  003D                     l1358:
  3741  003D  0872               	movf	fputc@fp,w
  3742  003E  3E03               	addlw	3
  3743  003F  0086               	movwf	6
  3744  0040  0187               	clrf	7
  3745  0041  0016               	moviw fsr1++
  3746  0042  0401               	iorwf	1,w
  3747  0043  1903               	btfsc	3,2
  3748  0044  2846               	goto	u741
  3749  0045  2847               	goto	u740
  3750  0046                     u741:
  3751  0046  2864               	goto	l1362
  3752  0047                     u740:
  3753  0047                     l1360:
  3754  0047  0872               	movf	fputc@fp,w
  3755  0048  3E03               	addlw	3
  3756  0049  0086               	movwf	6
  3757  004A  0187               	clrf	7
  3758  004B  3F40               	moviw [0]fsr1
  3759  004C  00F3               	movwf	??_fputc
  3760  004D  3F41               	moviw [1]fsr1
  3761  004E  00F4               	movwf	??_fputc+1
  3762  004F  0A72               	incf	fputc@fp,w
  3763  0050  0086               	movwf	6
  3764  0051  0187               	clrf	7
  3765  0052  3F40               	moviw [0]fsr1
  3766  0053  00F5               	movwf	??_fputc+2
  3767  0054  3F41               	moviw [1]fsr1
  3768  0055  00F6               	movwf	??_fputc+3
  3769  0056  0876               	movf	??_fputc+3,w
  3770  0057  3A80               	xorlw	128
  3771  0058  00F7               	movwf	??_fputc+4
  3772  0059  0874               	movf	??_fputc+1,w
  3773  005A  3A80               	xorlw	128
  3774  005B  0277               	subwf	??_fputc+4,w
  3775  005C  1D03               	skipz
  3776  005D  2860               	goto	u755
  3777  005E  0873               	movf	??_fputc,w
  3778  005F  0275               	subwf	??_fputc+2,w
  3779  0060                     u755:
  3780  0060  1803               	skipnc
  3781  0061  2863               	goto	u751
  3782  0062  2864               	goto	u750
  3783  0063                     u751:
  3784  0063  287C               	goto	l825
  3785  0064                     u750:
  3786  0064                     l1362:
  3787  0064  0870               	movf	fputc@c,w
  3788  0065  00F3               	movwf	??_fputc
  3789  0066  0872               	movf	fputc@fp,w
  3790  0067  0086               	movwf	6
  3791  0068  0187               	clrf	7
  3792  0069  0A72               	incf	fputc@fp,w
  3793  006A  0084               	movwf	4
  3794  006B  0185               	clrf	5
  3795  006C  0800               	movf	0,w
  3796  006D  0701               	addwf	1,w
  3797  006E  00F4               	movwf	??_fputc+1
  3798  006F  0874               	movf	??_fputc+1,w
  3799  0070  0086               	movwf	6
  3800  0071  0187               	clrf	7
  3801  0072  0873               	movf	??_fputc,w
  3802  0073  0081               	movwf	1
  3803  0074                     l1364:
  3804  0074  0A72               	incf	fputc@fp,w
  3805  0075  0086               	movwf	6
  3806  0076  0187               	clrf	7
  3807  0077  3001               	movlw	1
  3808  0078  0781               	addwf	1,f
  3809  0079  3141               	addfsr 1,1
  3810  007A  1803               	skipnc
  3811  007B  0A81               	incf	1,f
  3812  007C                     l825:
  3813  007C  0008               	return
  3814  007D                     __end_of_fputc:
  3815                           
  3816                           	psect	text12
  3817  0005                     __ptext12:	
  3818 ;; *************** function _putch *****************
  3819 ;; Defined at:
  3820 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  c               1    wreg     unsigned char 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  c               1    0[COMMON] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3834 ;;      Params:         0       0       0       0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0
  3837 ;;      Totals:         0       0       0       0       0       0       0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_fputc
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _putch
  3849  0005                     _putch:
  3850  0005                     l836:	
  3851                           ;incstack = 0
  3852                           ; Regs used in _putch: [wreg]
  3853                           
  3854  0005  0008               	return
  3855  0006                     __end_of_putch:
  3856                           
  3857                           	psect	text13
  3858  0E86                     __ptext13:	
  3859 ;; *************** function _abs *****************
  3860 ;; Defined at:
  3861 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  a               2    3[COMMON] int 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2    3[COMMON] int 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3875 ;;      Params:         2       0       0       0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0
  3877 ;;      Temps:          2       0       0       0       0       0       0       0
  3878 ;;      Totals:         4       0       0       0       0       0       0       0
  3879 ;;Total ram usage:        4 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_dtoa
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function _abs
  3890  0E86                     _abs:
  3891  0E86                     l1476:	
  3892                           ;incstack = 0
  3893                           ; Regs used in _abs: [wreg+status,2+status,0]
  3894                           
  3895  0E86  0874               	movf	abs@a+1,w
  3896  0E87  3A80               	xorlw	128
  3897  0E88  00F5               	movwf	??_abs
  3898  0E89  3080               	movlw	128
  3899  0E8A  0275               	subwf	??_abs,w
  3900  0E8B  1D03               	skipz
  3901  0E8C  2E8F               	goto	u1035
  3902  0E8D  3001               	movlw	1
  3903  0E8E  0273               	subwf	abs@a,w
  3904  0E8F                     u1035:
  3905  0E8F  1803               	skipnc
  3906  0E90  2E92               	goto	u1031
  3907  0E91  2E93               	goto	u1030
  3908  0E92                     u1031:
  3909  0E92  2E9F               	goto	l810
  3910  0E93                     u1030:
  3911  0E93                     l1478:
  3912  0E93  0973               	comf	abs@a,w
  3913  0E94  00F5               	movwf	??_abs
  3914  0E95  0974               	comf	abs@a+1,w
  3915  0E96  00F6               	movwf	??_abs+1
  3916  0E97  0AF5               	incf	??_abs,f
  3917  0E98  1903               	skipnz
  3918  0E99  0AF6               	incf	??_abs+1,f
  3919  0E9A  0875               	movf	??_abs,w
  3920  0E9B  00F3               	movwf	?_abs
  3921  0E9C  0876               	movf	??_abs+1,w
  3922  0E9D  00F4               	movwf	?_abs+1
  3923  0E9E  2E9F               	goto	l813
  3924  0E9F                     l810:
  3925  0E9F                     l813:
  3926  0E9F  0008               	return
  3927  0EA0                     __end_of_abs:
  3928                           
  3929                           	psect	text14
  3930  049C                     __ptext14:	
  3931 ;; *************** function ___aomod *****************
  3932 ;; Defined at:
  3933 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  divisor         8    0[BANK0 ] long long 
  3936 ;;  dividend        8    8[BANK0 ] long long 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  sign            1    2[COMMON] unsigned char 
  3939 ;;  counter         1    1[COMMON] unsigned char 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  8    0[BANK0 ] long long 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3949 ;;      Params:         0      16       0       0       0       0       0       0
  3950 ;;      Locals:         2       0       0       0       0       0       0       0
  3951 ;;      Temps:          1       0       0       0       0       0       0       0
  3952 ;;      Totals:         3      16       0       0       0       0       0       0
  3953 ;;Total ram usage:       19 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_dtoa
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function ___aomod
  3964  049C                     ___aomod:
  3965  049C                     l1424:	
  3966                           ;incstack = 0
  3967                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3968                           
  3969  049C  01F2               	clrf	___aomod@sign
  3970  049D                     l1426:
  3971  049D  3028               	movlw	low ___aomod@dividend
  3972  049E  0086               	movwf	6
  3973  049F  3000               	movlw	high ___aomod@dividend
  3974  04A0  0087               	movwf	7
  3975  04A1  3F47               	moviw [7]fsr1
  3976  04A2  00F0               	movwf	??___aomod
  3977  04A3  1FF0               	btfss	??___aomod,7
  3978  04A4  2CA6               	goto	u891
  3979  04A5  2CA7               	goto	u890
  3980  04A6                     u891:
  3981  04A6  2CC8               	goto	l1430
  3982  04A7                     u890:
  3983  04A7                     l1428:
  3984  04A7  0020               	movlb	0	; select bank0
  3985  04A8  09A8               	comf	___aomod@dividend,f
  3986  04A9  09A9               	comf	___aomod@dividend+1,f
  3987  04AA  09AA               	comf	___aomod@dividend+2,f
  3988  04AB  09AB               	comf	___aomod@dividend+3,f
  3989  04AC  09AC               	comf	___aomod@dividend+4,f
  3990  04AD  09AD               	comf	___aomod@dividend+5,f
  3991  04AE  09AE               	comf	___aomod@dividend+6,f
  3992  04AF  09AF               	comf	___aomod@dividend+7,f
  3993  04B0  0AA8               	incf	___aomod@dividend,f
  3994  04B1  1D03               	skipz
  3995  04B2  2CC6               	goto	u90lld
  3996  04B3  0AA9               	incf	___aomod@dividend+1,f
  3997  04B4  1D03               	skipz
  3998  04B5  2CC6               	goto	u90lld
  3999  04B6  0AAA               	incf	___aomod@dividend+2,f
  4000  04B7  1D03               	skipz
  4001  04B8  2CC6               	goto	u90lld
  4002  04B9  0AAB               	incf	___aomod@dividend+3,f
  4003  04BA  1D03               	skipz
  4004  04BB  2CC6               	goto	u90lld
  4005  04BC  0AAC               	incf	___aomod@dividend+4,f
  4006  04BD  1D03               	skipz
  4007  04BE  2CC6               	goto	u90lld
  4008  04BF  0AAD               	incf	___aomod@dividend+5,f
  4009  04C0  1D03               	skipz
  4010  04C1  2CC6               	goto	u90lld
  4011  04C2  0AAE               	incf	___aomod@dividend+6,f
  4012  04C3  1D03               	skipz
  4013  04C4  2CC6               	goto	u90lld
  4014  04C5  0AAF               	incf	___aomod@dividend+7,f
  4015  04C6                     u90lld:
  4016  04C6  01F2               	clrf	___aomod@sign
  4017  04C7  0AF2               	incf	___aomod@sign,f
  4018  04C8                     l1430:
  4019  04C8  3020               	movlw	low ___aomod@divisor
  4020  04C9  0086               	movwf	6
  4021  04CA  3000               	movlw	high ___aomod@divisor
  4022  04CB  0087               	movwf	7
  4023  04CC  3F47               	moviw [7]fsr1
  4024  04CD  00F0               	movwf	??___aomod
  4025  04CE  1FF0               	btfss	??___aomod,7
  4026  04CF  2CD1               	goto	u911
  4027  04D0  2CD2               	goto	u910
  4028  04D1                     u911:
  4029  04D1  2CF1               	goto	l1434
  4030  04D2                     u910:
  4031  04D2                     l1432:
  4032  04D2  0020               	movlb	0	; select bank0
  4033  04D3  09A0               	comf	___aomod@divisor,f
  4034  04D4  09A1               	comf	___aomod@divisor+1,f
  4035  04D5  09A2               	comf	___aomod@divisor+2,f
  4036  04D6  09A3               	comf	___aomod@divisor+3,f
  4037  04D7  09A4               	comf	___aomod@divisor+4,f
  4038  04D8  09A5               	comf	___aomod@divisor+5,f
  4039  04D9  09A6               	comf	___aomod@divisor+6,f
  4040  04DA  09A7               	comf	___aomod@divisor+7,f
  4041  04DB  0AA0               	incf	___aomod@divisor,f
  4042  04DC  1D03               	skipz
  4043  04DD  2CF1               	goto	u92lld
  4044  04DE  0AA1               	incf	___aomod@divisor+1,f
  4045  04DF  1D03               	skipz
  4046  04E0  2CF1               	goto	u92lld
  4047  04E1  0AA2               	incf	___aomod@divisor+2,f
  4048  04E2  1D03               	skipz
  4049  04E3  2CF1               	goto	u92lld
  4050  04E4  0AA3               	incf	___aomod@divisor+3,f
  4051  04E5  1D03               	skipz
  4052  04E6  2CF1               	goto	u92lld
  4053  04E7  0AA4               	incf	___aomod@divisor+4,f
  4054  04E8  1D03               	skipz
  4055  04E9  2CF1               	goto	u92lld
  4056  04EA  0AA5               	incf	___aomod@divisor+5,f
  4057  04EB  1D03               	skipz
  4058  04EC  2CF1               	goto	u92lld
  4059  04ED  0AA6               	incf	___aomod@divisor+6,f
  4060  04EE  1D03               	skipz
  4061  04EF  2CF1               	goto	u92lld
  4062  04F0  0AA7               	incf	___aomod@divisor+7,f
  4063  04F1                     u92lld:
  4064  04F1                     l1434:
  4065  04F1  0020               	movlb	0	; select bank0
  4066  04F2  0820               	movf	___aomod@divisor,w
  4067  04F3  0421               	iorwf	___aomod@divisor+1,w
  4068  04F4  0422               	iorwf	___aomod@divisor+2,w
  4069  04F5  0423               	iorwf	___aomod@divisor+3,w
  4070  04F6  0424               	iorwf	___aomod@divisor+4,w
  4071  04F7  0425               	iorwf	___aomod@divisor+5,w
  4072  04F8  0426               	iorwf	___aomod@divisor+6,w
  4073  04F9  0427               	iorwf	___aomod@divisor+7,w
  4074  04FA  1903               	skipnz
  4075  04FB  2CFD               	goto	u931
  4076  04FC  2CFE               	goto	u930
  4077  04FD                     u931:
  4078  04FD  2D51               	goto	l1450
  4079  04FE                     u930:
  4080  04FE                     l1436:
  4081  04FE  01F1               	clrf	___aomod@counter
  4082  04FF  0AF1               	incf	___aomod@counter,f
  4083  0500  2D0D               	goto	l1442
  4084  0501                     l1438:
  4085  0501  35A0               	lslf	___aomod@divisor,f
  4086  0502  0DA1               	rlf	___aomod@divisor+1,f
  4087  0503  0DA2               	rlf	___aomod@divisor+2,f
  4088  0504  0DA3               	rlf	___aomod@divisor+3,f
  4089  0505  0DA4               	rlf	___aomod@divisor+4,f
  4090  0506  0DA5               	rlf	___aomod@divisor+5,f
  4091  0507  0DA6               	rlf	___aomod@divisor+6,f
  4092  0508  0DA7               	rlf	___aomod@divisor+7,f
  4093  0509                     l1440:
  4094  0509  3001               	movlw	1
  4095  050A  00F0               	movwf	??___aomod
  4096  050B  0870               	movf	??___aomod,w
  4097  050C  07F1               	addwf	___aomod@counter,f
  4098  050D                     l1442:
  4099  050D  1FA7               	btfss	___aomod@divisor+7,7
  4100  050E  2D10               	goto	u941
  4101  050F  2D11               	goto	u940
  4102  0510                     u941:
  4103  0510  2D01               	goto	l1438
  4104  0511                     u940:
  4105  0511                     l1444:
  4106  0511  0827               	movf	___aomod@divisor+7,w
  4107  0512  022F               	subwf	___aomod@dividend+7,w
  4108  0513  1D03               	skipz
  4109  0514  2D2F               	goto	u955
  4110  0515  0826               	movf	___aomod@divisor+6,w
  4111  0516  022E               	subwf	___aomod@dividend+6,w
  4112  0517  1D03               	skipz
  4113  0518  2D2F               	goto	u955
  4114  0519  0825               	movf	___aomod@divisor+5,w
  4115  051A  022D               	subwf	___aomod@dividend+5,w
  4116  051B  1D03               	skipz
  4117  051C  2D2F               	goto	u955
  4118  051D  0824               	movf	___aomod@divisor+4,w
  4119  051E  022C               	subwf	___aomod@dividend+4,w
  4120  051F  1D03               	skipz
  4121  0520  2D2F               	goto	u955
  4122  0521  0823               	movf	___aomod@divisor+3,w
  4123  0522  022B               	subwf	___aomod@dividend+3,w
  4124  0523  1D03               	skipz
  4125  0524  2D2F               	goto	u955
  4126  0525  0822               	movf	___aomod@divisor+2,w
  4127  0526  022A               	subwf	___aomod@dividend+2,w
  4128  0527  1D03               	skipz
  4129  0528  2D2F               	goto	u955
  4130  0529  0821               	movf	___aomod@divisor+1,w
  4131  052A  0229               	subwf	___aomod@dividend+1,w
  4132  052B  1D03               	skipz
  4133  052C  2D2F               	goto	u955
  4134  052D  0820               	movf	___aomod@divisor,w
  4135  052E  0228               	subwf	___aomod@dividend,w
  4136  052F                     u955:
  4137  052F  1C03               	skipc
  4138  0530  2D32               	goto	u951
  4139  0531  2D33               	goto	u950
  4140  0532                     u951:
  4141  0532  2D43               	goto	l1448
  4142  0533                     u950:
  4143  0533                     l1446:
  4144  0533  0820               	movf	___aomod@divisor,w
  4145  0534  02A8               	subwf	___aomod@dividend,f
  4146  0535  0821               	movf	___aomod@divisor+1,w
  4147  0536  3BA9               	subwfb	___aomod@dividend+1,f
  4148  0537  0822               	movf	___aomod@divisor+2,w
  4149  0538  3BAA               	subwfb	___aomod@dividend+2,f
  4150  0539  0823               	movf	___aomod@divisor+3,w
  4151  053A  3BAB               	subwfb	___aomod@dividend+3,f
  4152  053B  0824               	movf	___aomod@divisor+4,w
  4153  053C  3BAC               	subwfb	___aomod@dividend+4,f
  4154  053D  0825               	movf	___aomod@divisor+5,w
  4155  053E  3BAD               	subwfb	___aomod@dividend+5,f
  4156  053F  0826               	movf	___aomod@divisor+6,w
  4157  0540  3BAE               	subwfb	___aomod@dividend+6,f
  4158  0541  0827               	movf	___aomod@divisor+7,w
  4159  0542  3BAF               	subwfb	___aomod@dividend+7,f
  4160  0543                     l1448:
  4161  0543  36A7               	lsrf	___aomod@divisor+7,f
  4162  0544  0CA6               	rrf	___aomod@divisor+6,f
  4163  0545  0CA5               	rrf	___aomod@divisor+5,f
  4164  0546  0CA4               	rrf	___aomod@divisor+4,f
  4165  0547  0CA3               	rrf	___aomod@divisor+3,f
  4166  0548  0CA2               	rrf	___aomod@divisor+2,f
  4167  0549  0CA1               	rrf	___aomod@divisor+1,f
  4168  054A  0CA0               	rrf	___aomod@divisor,f
  4169  054B  3001               	movlw	1
  4170  054C  02F1               	subwf	___aomod@counter,f
  4171  054D  1D03               	btfss	3,2
  4172  054E  2D50               	goto	u961
  4173  054F  2D51               	goto	u960
  4174  0550                     u961:
  4175  0550  2D11               	goto	l1444
  4176  0551                     u960:
  4177  0551                     l1450:
  4178  0551  0872               	movf	___aomod@sign,w
  4179  0552  1903               	btfsc	3,2
  4180  0553  2D55               	goto	u971
  4181  0554  2D56               	goto	u970
  4182  0555                     u971:
  4183  0555  2D74               	goto	l384
  4184  0556                     u970:
  4185  0556                     l1452:
  4186  0556  09A8               	comf	___aomod@dividend,f
  4187  0557  09A9               	comf	___aomod@dividend+1,f
  4188  0558  09AA               	comf	___aomod@dividend+2,f
  4189  0559  09AB               	comf	___aomod@dividend+3,f
  4190  055A  09AC               	comf	___aomod@dividend+4,f
  4191  055B  09AD               	comf	___aomod@dividend+5,f
  4192  055C  09AE               	comf	___aomod@dividend+6,f
  4193  055D  09AF               	comf	___aomod@dividend+7,f
  4194  055E  0AA8               	incf	___aomod@dividend,f
  4195  055F  1D03               	skipz
  4196  0560  2D74               	goto	u98lld
  4197  0561  0AA9               	incf	___aomod@dividend+1,f
  4198  0562  1D03               	skipz
  4199  0563  2D74               	goto	u98lld
  4200  0564  0AAA               	incf	___aomod@dividend+2,f
  4201  0565  1D03               	skipz
  4202  0566  2D74               	goto	u98lld
  4203  0567  0AAB               	incf	___aomod@dividend+3,f
  4204  0568  1D03               	skipz
  4205  0569  2D74               	goto	u98lld
  4206  056A  0AAC               	incf	___aomod@dividend+4,f
  4207  056B  1D03               	skipz
  4208  056C  2D74               	goto	u98lld
  4209  056D  0AAD               	incf	___aomod@dividend+5,f
  4210  056E  1D03               	skipz
  4211  056F  2D74               	goto	u98lld
  4212  0570  0AAE               	incf	___aomod@dividend+6,f
  4213  0571  1D03               	skipz
  4214  0572  2D74               	goto	u98lld
  4215  0573  0AAF               	incf	___aomod@dividend+7,f
  4216  0574                     u98lld:
  4217  0574                     l384:
  4218  0574  0020               	movlb	0	; select bank0
  4219  0575  0828               	movf	___aomod@dividend,w
  4220  0576  00A0               	movwf	?___aomod
  4221  0577  0829               	movf	___aomod@dividend+1,w
  4222  0578  00A1               	movwf	?___aomod+1
  4223  0579  082A               	movf	___aomod@dividend+2,w
  4224  057A  00A2               	movwf	?___aomod+2
  4225  057B  082B               	movf	___aomod@dividend+3,w
  4226  057C  00A3               	movwf	?___aomod+3
  4227  057D  082C               	movf	___aomod@dividend+4,w
  4228  057E  00A4               	movwf	?___aomod+4
  4229  057F  082D               	movf	___aomod@dividend+5,w
  4230  0580  00A5               	movwf	?___aomod+5
  4231  0581  082E               	movf	___aomod@dividend+6,w
  4232  0582  00A6               	movwf	?___aomod+6
  4233  0583  082F               	movf	___aomod@dividend+7,w
  4234  0584  00A7               	movwf	?___aomod+7
  4235  0585                     l385:
  4236  0585  0008               	return
  4237  0586                     __end_of___aomod:
  4238                           
  4239                           	psect	text15
  4240  0586                     __ptext15:	
  4241 ;; *************** function ___aodiv *****************
  4242 ;; Defined at:
  4243 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  divisor         8    0[BANK0 ] long long 
  4246 ;;  dividend        8    8[BANK0 ] long long 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  quotient        8    3[COMMON] long long 
  4249 ;;  sign            1    2[COMMON] unsigned char 
  4250 ;;  counter         1    1[COMMON] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  8    0[BANK0 ] long long 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4260 ;;      Params:         0      16       0       0       0       0       0       0
  4261 ;;      Locals:        10       0       0       0       0       0       0       0
  4262 ;;      Temps:          1       0       0       0       0       0       0       0
  4263 ;;      Totals:        11      16       0       0       0       0       0       0
  4264 ;;Total ram usage:       27 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_dtoa
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function ___aodiv
  4275  0586                     ___aodiv:
  4276  0586                     l1386:	
  4277                           ;incstack = 0
  4278                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4279                           
  4280  0586  01F2               	clrf	___aodiv@sign
  4281  0587                     l1388:
  4282  0587  3020               	movlw	low ___aodiv@divisor
  4283  0588  0086               	movwf	6
  4284  0589  3000               	movlw	high ___aodiv@divisor
  4285  058A  0087               	movwf	7
  4286  058B  3F47               	moviw [7]fsr1
  4287  058C  00F0               	movwf	??___aodiv
  4288  058D  1FF0               	btfss	??___aodiv,7
  4289  058E  2D90               	goto	u781
  4290  058F  2D91               	goto	u780
  4291  0590                     u781:
  4292  0590  2DB2               	goto	l1392
  4293  0591                     u780:
  4294  0591                     l1390:
  4295  0591  0020               	movlb	0	; select bank0
  4296  0592  09A0               	comf	___aodiv@divisor,f
  4297  0593  09A1               	comf	___aodiv@divisor+1,f
  4298  0594  09A2               	comf	___aodiv@divisor+2,f
  4299  0595  09A3               	comf	___aodiv@divisor+3,f
  4300  0596  09A4               	comf	___aodiv@divisor+4,f
  4301  0597  09A5               	comf	___aodiv@divisor+5,f
  4302  0598  09A6               	comf	___aodiv@divisor+6,f
  4303  0599  09A7               	comf	___aodiv@divisor+7,f
  4304  059A  0AA0               	incf	___aodiv@divisor,f
  4305  059B  1D03               	skipz
  4306  059C  2DB0               	goto	u79lld
  4307  059D  0AA1               	incf	___aodiv@divisor+1,f
  4308  059E  1D03               	skipz
  4309  059F  2DB0               	goto	u79lld
  4310  05A0  0AA2               	incf	___aodiv@divisor+2,f
  4311  05A1  1D03               	skipz
  4312  05A2  2DB0               	goto	u79lld
  4313  05A3  0AA3               	incf	___aodiv@divisor+3,f
  4314  05A4  1D03               	skipz
  4315  05A5  2DB0               	goto	u79lld
  4316  05A6  0AA4               	incf	___aodiv@divisor+4,f
  4317  05A7  1D03               	skipz
  4318  05A8  2DB0               	goto	u79lld
  4319  05A9  0AA5               	incf	___aodiv@divisor+5,f
  4320  05AA  1D03               	skipz
  4321  05AB  2DB0               	goto	u79lld
  4322  05AC  0AA6               	incf	___aodiv@divisor+6,f
  4323  05AD  1D03               	skipz
  4324  05AE  2DB0               	goto	u79lld
  4325  05AF  0AA7               	incf	___aodiv@divisor+7,f
  4326  05B0                     u79lld:
  4327  05B0  01F2               	clrf	___aodiv@sign
  4328  05B1  0AF2               	incf	___aodiv@sign,f
  4329  05B2                     l1392:
  4330  05B2  3028               	movlw	low ___aodiv@dividend
  4331  05B3  0086               	movwf	6
  4332  05B4  3000               	movlw	high ___aodiv@dividend
  4333  05B5  0087               	movwf	7
  4334  05B6  3F47               	moviw [7]fsr1
  4335  05B7  00F0               	movwf	??___aodiv
  4336  05B8  1FF0               	btfss	??___aodiv,7
  4337  05B9  2DBB               	goto	u801
  4338  05BA  2DBC               	goto	u800
  4339  05BB                     u801:
  4340  05BB  2DDF               	goto	l1398
  4341  05BC                     u800:
  4342  05BC                     l1394:
  4343  05BC  0020               	movlb	0	; select bank0
  4344  05BD  09A8               	comf	___aodiv@dividend,f
  4345  05BE  09A9               	comf	___aodiv@dividend+1,f
  4346  05BF  09AA               	comf	___aodiv@dividend+2,f
  4347  05C0  09AB               	comf	___aodiv@dividend+3,f
  4348  05C1  09AC               	comf	___aodiv@dividend+4,f
  4349  05C2  09AD               	comf	___aodiv@dividend+5,f
  4350  05C3  09AE               	comf	___aodiv@dividend+6,f
  4351  05C4  09AF               	comf	___aodiv@dividend+7,f
  4352  05C5  0AA8               	incf	___aodiv@dividend,f
  4353  05C6  1D03               	skipz
  4354  05C7  2DDB               	goto	u81lld
  4355  05C8  0AA9               	incf	___aodiv@dividend+1,f
  4356  05C9  1D03               	skipz
  4357  05CA  2DDB               	goto	u81lld
  4358  05CB  0AAA               	incf	___aodiv@dividend+2,f
  4359  05CC  1D03               	skipz
  4360  05CD  2DDB               	goto	u81lld
  4361  05CE  0AAB               	incf	___aodiv@dividend+3,f
  4362  05CF  1D03               	skipz
  4363  05D0  2DDB               	goto	u81lld
  4364  05D1  0AAC               	incf	___aodiv@dividend+4,f
  4365  05D2  1D03               	skipz
  4366  05D3  2DDB               	goto	u81lld
  4367  05D4  0AAD               	incf	___aodiv@dividend+5,f
  4368  05D5  1D03               	skipz
  4369  05D6  2DDB               	goto	u81lld
  4370  05D7  0AAE               	incf	___aodiv@dividend+6,f
  4371  05D8  1D03               	skipz
  4372  05D9  2DDB               	goto	u81lld
  4373  05DA  0AAF               	incf	___aodiv@dividend+7,f
  4374  05DB                     u81lld:
  4375  05DB                     l1396:
  4376  05DB  3001               	movlw	1
  4377  05DC  00F0               	movwf	??___aodiv
  4378  05DD  0870               	movf	??___aodiv,w
  4379  05DE  06F2               	xorwf	___aodiv@sign,f
  4380  05DF                     l1398:
  4381  05DF  3073               	movlw	low ___aodiv@quotient
  4382  05E0  0086               	movwf	6
  4383  05E1  3000               	movlw	high ___aodiv@quotient
  4384  05E2  0087               	movwf	7
  4385  05E3  3008               	movlw	8
  4386  05E4  00F0               	movwf	??___aodiv
  4387  05E5  3000               	movlw	0
  4388  05E6                     u820:
  4389  05E6  001E               	movwi fsr1++
  4390  05E7  0BF0               	decfsz	??___aodiv,f
  4391  05E8  2DE6               	goto	u820
  4392  05E9                     l1400:
  4393  05E9  0020               	movlb	0	; select bank0
  4394  05EA  0820               	movf	___aodiv@divisor,w
  4395  05EB  0421               	iorwf	___aodiv@divisor+1,w
  4396  05EC  0422               	iorwf	___aodiv@divisor+2,w
  4397  05ED  0423               	iorwf	___aodiv@divisor+3,w
  4398  05EE  0424               	iorwf	___aodiv@divisor+4,w
  4399  05EF  0425               	iorwf	___aodiv@divisor+5,w
  4400  05F0  0426               	iorwf	___aodiv@divisor+6,w
  4401  05F1  0427               	iorwf	___aodiv@divisor+7,w
  4402  05F2  1903               	skipnz
  4403  05F3  2DF5               	goto	u831
  4404  05F4  2DF6               	goto	u830
  4405  05F5                     u831:
  4406  05F5  2E52               	goto	l1420
  4407  05F6                     u830:
  4408  05F6                     l1402:
  4409  05F6  01F1               	clrf	___aodiv@counter
  4410  05F7  0AF1               	incf	___aodiv@counter,f
  4411  05F8  2E05               	goto	l1408
  4412  05F9                     l1404:
  4413  05F9  35A0               	lslf	___aodiv@divisor,f
  4414  05FA  0DA1               	rlf	___aodiv@divisor+1,f
  4415  05FB  0DA2               	rlf	___aodiv@divisor+2,f
  4416  05FC  0DA3               	rlf	___aodiv@divisor+3,f
  4417  05FD  0DA4               	rlf	___aodiv@divisor+4,f
  4418  05FE  0DA5               	rlf	___aodiv@divisor+5,f
  4419  05FF  0DA6               	rlf	___aodiv@divisor+6,f
  4420  0600  0DA7               	rlf	___aodiv@divisor+7,f
  4421  0601                     l1406:
  4422  0601  3001               	movlw	1
  4423  0602  00F0               	movwf	??___aodiv
  4424  0603  0870               	movf	??___aodiv,w
  4425  0604  07F1               	addwf	___aodiv@counter,f
  4426  0605                     l1408:
  4427  0605  1FA7               	btfss	___aodiv@divisor+7,7
  4428  0606  2E08               	goto	u841
  4429  0607  2E09               	goto	u840
  4430  0608                     u841:
  4431  0608  2DF9               	goto	l1404
  4432  0609                     u840:
  4433  0609                     l1410:
  4434  0609  35F3               	lslf	___aodiv@quotient,f
  4435  060A  0DF4               	rlf	___aodiv@quotient+1,f
  4436  060B  0DF5               	rlf	___aodiv@quotient+2,f
  4437  060C  0DF6               	rlf	___aodiv@quotient+3,f
  4438  060D  0DF7               	rlf	___aodiv@quotient+4,f
  4439  060E  0DF8               	rlf	___aodiv@quotient+5,f
  4440  060F  0DF9               	rlf	___aodiv@quotient+6,f
  4441  0610  0DFA               	rlf	___aodiv@quotient+7,f
  4442  0611                     l1412:
  4443  0611  0827               	movf	___aodiv@divisor+7,w
  4444  0612  022F               	subwf	___aodiv@dividend+7,w
  4445  0613  1D03               	skipz
  4446  0614  2E2F               	goto	u855
  4447  0615  0826               	movf	___aodiv@divisor+6,w
  4448  0616  022E               	subwf	___aodiv@dividend+6,w
  4449  0617  1D03               	skipz
  4450  0618  2E2F               	goto	u855
  4451  0619  0825               	movf	___aodiv@divisor+5,w
  4452  061A  022D               	subwf	___aodiv@dividend+5,w
  4453  061B  1D03               	skipz
  4454  061C  2E2F               	goto	u855
  4455  061D  0824               	movf	___aodiv@divisor+4,w
  4456  061E  022C               	subwf	___aodiv@dividend+4,w
  4457  061F  1D03               	skipz
  4458  0620  2E2F               	goto	u855
  4459  0621  0823               	movf	___aodiv@divisor+3,w
  4460  0622  022B               	subwf	___aodiv@dividend+3,w
  4461  0623  1D03               	skipz
  4462  0624  2E2F               	goto	u855
  4463  0625  0822               	movf	___aodiv@divisor+2,w
  4464  0626  022A               	subwf	___aodiv@dividend+2,w
  4465  0627  1D03               	skipz
  4466  0628  2E2F               	goto	u855
  4467  0629  0821               	movf	___aodiv@divisor+1,w
  4468  062A  0229               	subwf	___aodiv@dividend+1,w
  4469  062B  1D03               	skipz
  4470  062C  2E2F               	goto	u855
  4471  062D  0820               	movf	___aodiv@divisor,w
  4472  062E  0228               	subwf	___aodiv@dividend,w
  4473  062F                     u855:
  4474  062F  1C03               	skipc
  4475  0630  2E32               	goto	u851
  4476  0631  2E33               	goto	u850
  4477  0632                     u851:
  4478  0632  2E44               	goto	l1418
  4479  0633                     u850:
  4480  0633                     l1414:
  4481  0633  0820               	movf	___aodiv@divisor,w
  4482  0634  02A8               	subwf	___aodiv@dividend,f
  4483  0635  0821               	movf	___aodiv@divisor+1,w
  4484  0636  3BA9               	subwfb	___aodiv@dividend+1,f
  4485  0637  0822               	movf	___aodiv@divisor+2,w
  4486  0638  3BAA               	subwfb	___aodiv@dividend+2,f
  4487  0639  0823               	movf	___aodiv@divisor+3,w
  4488  063A  3BAB               	subwfb	___aodiv@dividend+3,f
  4489  063B  0824               	movf	___aodiv@divisor+4,w
  4490  063C  3BAC               	subwfb	___aodiv@dividend+4,f
  4491  063D  0825               	movf	___aodiv@divisor+5,w
  4492  063E  3BAD               	subwfb	___aodiv@dividend+5,f
  4493  063F  0826               	movf	___aodiv@divisor+6,w
  4494  0640  3BAE               	subwfb	___aodiv@dividend+6,f
  4495  0641  0827               	movf	___aodiv@divisor+7,w
  4496  0642  3BAF               	subwfb	___aodiv@dividend+7,f
  4497  0643                     l1416:
  4498  0643  1473               	bsf	___aodiv@quotient,0
  4499  0644                     l1418:
  4500  0644  36A7               	lsrf	___aodiv@divisor+7,f
  4501  0645  0CA6               	rrf	___aodiv@divisor+6,f
  4502  0646  0CA5               	rrf	___aodiv@divisor+5,f
  4503  0647  0CA4               	rrf	___aodiv@divisor+4,f
  4504  0648  0CA3               	rrf	___aodiv@divisor+3,f
  4505  0649  0CA2               	rrf	___aodiv@divisor+2,f
  4506  064A  0CA1               	rrf	___aodiv@divisor+1,f
  4507  064B  0CA0               	rrf	___aodiv@divisor,f
  4508  064C  3001               	movlw	1
  4509  064D  02F1               	subwf	___aodiv@counter,f
  4510  064E  1D03               	btfss	3,2
  4511  064F  2E51               	goto	u861
  4512  0650  2E52               	goto	u860
  4513  0651                     u861:
  4514  0651  2E09               	goto	l1410
  4515  0652                     u860:
  4516  0652                     l1420:
  4517  0652  0872               	movf	___aodiv@sign,w
  4518  0653  1903               	btfsc	3,2
  4519  0654  2E56               	goto	u871
  4520  0655  2E57               	goto	u870
  4521  0656                     u871:
  4522  0656  2E75               	goto	l371
  4523  0657                     u870:
  4524  0657                     l1422:
  4525  0657  09F3               	comf	___aodiv@quotient,f
  4526  0658  09F4               	comf	___aodiv@quotient+1,f
  4527  0659  09F5               	comf	___aodiv@quotient+2,f
  4528  065A  09F6               	comf	___aodiv@quotient+3,f
  4529  065B  09F7               	comf	___aodiv@quotient+4,f
  4530  065C  09F8               	comf	___aodiv@quotient+5,f
  4531  065D  09F9               	comf	___aodiv@quotient+6,f
  4532  065E  09FA               	comf	___aodiv@quotient+7,f
  4533  065F  0AF3               	incf	___aodiv@quotient,f
  4534  0660  1D03               	skipz
  4535  0661  2E75               	goto	u88lld
  4536  0662  0AF4               	incf	___aodiv@quotient+1,f
  4537  0663  1D03               	skipz
  4538  0664  2E75               	goto	u88lld
  4539  0665  0AF5               	incf	___aodiv@quotient+2,f
  4540  0666  1D03               	skipz
  4541  0667  2E75               	goto	u88lld
  4542  0668  0AF6               	incf	___aodiv@quotient+3,f
  4543  0669  1D03               	skipz
  4544  066A  2E75               	goto	u88lld
  4545  066B  0AF7               	incf	___aodiv@quotient+4,f
  4546  066C  1D03               	skipz
  4547  066D  2E75               	goto	u88lld
  4548  066E  0AF8               	incf	___aodiv@quotient+5,f
  4549  066F  1D03               	skipz
  4550  0670  2E75               	goto	u88lld
  4551  0671  0AF9               	incf	___aodiv@quotient+6,f
  4552  0672  1D03               	skipz
  4553  0673  2E75               	goto	u88lld
  4554  0674  0AFA               	incf	___aodiv@quotient+7,f
  4555  0675                     u88lld:
  4556  0675                     l371:
  4557  0675  0873               	movf	___aodiv@quotient,w
  4558  0676  0020               	movlb	0	; select bank0
  4559  0677  00A0               	movwf	?___aodiv
  4560  0678  0874               	movf	___aodiv@quotient+1,w
  4561  0679  00A1               	movwf	?___aodiv+1
  4562  067A  0875               	movf	___aodiv@quotient+2,w
  4563  067B  00A2               	movwf	?___aodiv+2
  4564  067C  0876               	movf	___aodiv@quotient+3,w
  4565  067D  00A3               	movwf	?___aodiv+3
  4566  067E  0877               	movf	___aodiv@quotient+4,w
  4567  067F  00A4               	movwf	?___aodiv+4
  4568  0680  0878               	movf	___aodiv@quotient+5,w
  4569  0681  00A5               	movwf	?___aodiv+5
  4570  0682  0879               	movf	___aodiv@quotient+6,w
  4571  0683  00A6               	movwf	?___aodiv+6
  4572  0684  087A               	movf	___aodiv@quotient+7,w
  4573  0685  00A7               	movwf	?___aodiv+7
  4574  0686                     l372:
  4575  0686  0008               	return
  4576  0687                     __end_of___aodiv:
  4577                           
  4578                           	psect	text16
  4579  0EA0                     __ptext16:	
  4580 ;; *************** function _Lcd_Print_String *****************
  4581 ;; Defined at:
  4582 ;;		line 104 in file "./LCD_Drivers.h"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;  a               2    5[COMMON] PTR unsigned char 
  4585 ;;		 -> STR_14(10), STR_13(15), STR_12(10), STR_11(15), 
  4586 ;;		 -> STR_10(8), STR_9(15), STR_8(15), STR_7(5), 
  4587 ;;		 -> STR_6(14), STR_5(5), STR_4(12), STR_3(2), 
  4588 ;;		 -> STR_2(13), LCD_Print_num@str(10), 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  i               2    8[COMMON] int 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4600 ;;      Params:         2       0       0       0       0       0       0       0
  4601 ;;      Locals:         2       0       0       0       0       0       0       0
  4602 ;;      Temps:          1       0       0       0       0       0       0       0
  4603 ;;      Totals:         5       0       0       0       0       0       0       0
  4604 ;;Total ram usage:        5 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    2
  4607 ;; This function calls:
  4608 ;;		_Lcd_Print_Char
  4609 ;; This function is called by:
  4610 ;;		_LCD_Print_num
  4611 ;;		_Print_DTMF_data
  4612 ;;		_main
  4613 ;;		_hexTest
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _Lcd_Print_String
  4619  0EA0                     _Lcd_Print_String:
  4620  0EA0                     l1652:	
  4621                           ;incstack = 0
  4622                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4623                           
  4624                           
  4625                           ;./LCD_Drivers.h: 104: void Lcd_Print_String(char *a);./LCD_Drivers.h: 105: {;./LCD_Driv
      +                          ers.h: 106:  int i;;./LCD_Drivers.h: 107:  for(i=0;a[i]!='\0';i++)
  4626  0EA0  01F8               	clrf	Lcd_Print_String@i
  4627  0EA1  01F9               	clrf	Lcd_Print_String@i+1
  4628  0EA2  2EB1               	goto	l1658
  4629  0EA3                     l1654:
  4630                           
  4631                           ;./LCD_Drivers.h: 108:     Lcd_Print_Char(a[i]);
  4632  0EA3  0875               	movf	Lcd_Print_String@a,w
  4633  0EA4  0778               	addwf	Lcd_Print_String@i,w
  4634  0EA5  0084               	movwf	4
  4635  0EA6  0876               	movf	Lcd_Print_String@a+1,w
  4636  0EA7  3D79               	addwfc	Lcd_Print_String@i+1,w
  4637  0EA8  0085               	movwf	5
  4638  0EA9  0800               	movf	0,w	;code access
  4639  0EAA  318F  2721  318E   	fcall	_Lcd_Print_Char
  4640  0EAD                     l1656:
  4641  0EAD  3001               	movlw	1
  4642  0EAE  07F8               	addwf	Lcd_Print_String@i,f
  4643  0EAF  3000               	movlw	0
  4644  0EB0  3DF9               	addwfc	Lcd_Print_String@i+1,f
  4645  0EB1                     l1658:
  4646  0EB1  0875               	movf	Lcd_Print_String@a,w
  4647  0EB2  0778               	addwf	Lcd_Print_String@i,w
  4648  0EB3  0084               	movwf	4
  4649  0EB4  0876               	movf	Lcd_Print_String@a+1,w
  4650  0EB5  3D79               	addwfc	Lcd_Print_String@i+1,w
  4651  0EB6  0085               	movwf	5
  4652  0EB7  0012               	moviw fsr0++
  4653  0EB8  1D03               	btfss	3,2
  4654  0EB9  2EBB               	goto	u1341
  4655  0EBA  2EBC               	goto	u1340
  4656  0EBB                     u1341:
  4657  0EBB  2EA3               	goto	l1654
  4658  0EBC                     u1340:
  4659  0EBC                     l84:
  4660  0EBC  0008               	return
  4661  0EBD                     __end_of_Lcd_Print_String:
  4662                           
  4663                           	psect	text17
  4664  0F21                     __ptext17:	
  4665 ;; *************** function _Lcd_Print_Char *****************
  4666 ;; Defined at:
  4667 ;;		line 66 in file "./LCD_Drivers.h"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  data            1    wreg     unsigned char 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  data            1    4[COMMON] unsigned char 
  4672 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  4673 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, pclath, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4683 ;;      Params:         0       0       0       0       0       0       0       0
  4684 ;;      Locals:         3       0       0       0       0       0       0       0
  4685 ;;      Temps:          1       0       0       0       0       0       0       0
  4686 ;;      Totals:         4       0       0       0       0       0       0       0
  4687 ;;Total ram usage:        4 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    1
  4690 ;; This function calls:
  4691 ;;		_Lcd_SetBit
  4692 ;; This function is called by:
  4693 ;;		_Lcd_Print_String
  4694 ;;		_Print_DTMF_data
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function _Lcd_Print_Char
  4700  0F21                     _Lcd_Print_Char:
  4701                           
  4702                           ;incstack = 0
  4703                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+pclath+cstack]
  4704                           ;Lcd_Print_Char@data stored from wreg
  4705  0F21  00F4               	movwf	Lcd_Print_Char@data
  4706  0F22                     l1598:
  4707                           
  4708                           ;./LCD_Drivers.h: 66: void Lcd_Print_Char(char data);./LCD_Drivers.h: 67: {;./LCD_Driver
      +                          s.h: 68:    char Lower_Nibble,Upper_Nibble;;./LCD_Drivers.h: 69:    Lower_Nibble = data&
      +                          0x0F;
  4709  0F22  0874               	movf	Lcd_Print_Char@data,w
  4710  0F23  390F               	andlw	15
  4711  0F24  00F1               	movwf	??_Lcd_Print_Char
  4712  0F25  0871               	movf	??_Lcd_Print_Char,w
  4713  0F26  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  4714                           
  4715                           ;./LCD_Drivers.h: 70:    Upper_Nibble = data&0xF0;
  4716  0F27  0874               	movf	Lcd_Print_Char@data,w
  4717  0F28  39F0               	andlw	240
  4718  0F29  00F1               	movwf	??_Lcd_Print_Char
  4719  0F2A  0871               	movf	??_Lcd_Print_Char,w
  4720  0F2B  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  4721  0F2C                     l1600:
  4722                           
  4723                           ;./LCD_Drivers.h: 71:    RC0 = 1;
  4724  0F2C  0020               	movlb	0	; select bank0
  4725  0F2D  140E               	bsf	14,0	;volatile
  4726  0F2E                     l1602:
  4727                           
  4728                           ;./LCD_Drivers.h: 72:    Lcd_SetBit(Upper_Nibble>>4);
  4729  0F2E  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  4730  0F2F  00F1               	movwf	??_Lcd_Print_Char
  4731  0F30  3004               	movlw	4
  4732  0F31                     u1285:
  4733  0F31  36F1               	lsrf	??_Lcd_Print_Char,f
  4734  0F32  0B89               	decfsz	9,f
  4735  0F33  2F31               	goto	u1285
  4736  0F34  0871               	movf	??_Lcd_Print_Char,w
  4737  0F35  318E  26DD  318F   	fcall	_Lcd_SetBit
  4738  0F38                     l1604:
  4739                           
  4740                           ;./LCD_Drivers.h: 73:    RC1 = 1;
  4741  0F38  0020               	movlb	0	; select bank0
  4742  0F39  148E               	bsf	14,1	;volatile
  4743  0F3A                     l1606:
  4744                           
  4745                           ;./LCD_Drivers.h: 74:    _delay((unsigned long)((500)*(8000000/4000000.0)));
  4746  0F3A  30C8               	movlw	200
  4747  0F3B                     u1497:
  4748  0F3B  3200               	nop2
  4749  0F3C  0B89               	decfsz	9,f
  4750  0F3D  2F3B               	goto	u1497
  4751  0F3E                     l1608:
  4752                           
  4753                           ;./LCD_Drivers.h: 75:    RC1 = 0;
  4754  0F3E  0020               	movlb	0	; select bank0
  4755  0F3F  108E               	bcf	14,1	;volatile
  4756  0F40                     l1610:
  4757                           
  4758                           ;./LCD_Drivers.h: 76:    Lcd_SetBit(Lower_Nibble);
  4759  0F40  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  4760  0F41  318E  26DD  318F   	fcall	_Lcd_SetBit
  4761  0F44                     l1612:
  4762                           
  4763                           ;./LCD_Drivers.h: 77:    RC1 = 1;
  4764  0F44  0020               	movlb	0	; select bank0
  4765  0F45  148E               	bsf	14,1	;volatile
  4766  0F46                     l1614:
  4767                           
  4768                           ;./LCD_Drivers.h: 78:    _delay((unsigned long)((500)*(8000000/4000000.0)));
  4769  0F46  30C8               	movlw	200
  4770  0F47                     u1507:
  4771  0F47  3200               	nop2
  4772  0F48  0B89               	decfsz	9,f
  4773  0F49  2F47               	goto	u1507
  4774  0F4A                     l1616:
  4775                           
  4776                           ;./LCD_Drivers.h: 79:    RC1 = 0;
  4777  0F4A  0020               	movlb	0	; select bank0
  4778  0F4B  108E               	bcf	14,1	;volatile
  4779  0F4C                     l67:
  4780  0F4C  0008               	return
  4781  0F4D                     __end_of_Lcd_Print_Char:
  4782                           
  4783                           	psect	text18
  4784  0EDD                     __ptext18:	
  4785 ;; *************** function _Lcd_SetBit *****************
  4786 ;; Defined at:
  4787 ;;		line 81 in file "./LCD_Drivers.h"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  data_bit        1    wreg     unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  data_bit        1    0[COMMON] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4801 ;;      Params:         0       0       0       0       0       0       0       0
  4802 ;;      Locals:         1       0       0       0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0
  4804 ;;      Totals:         1       0       0       0       0       0       0       0
  4805 ;;Total ram usage:        1 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_Lcd_Print_Char
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           
  4815                           ;psect for function _Lcd_SetBit
  4816  0EDD                     _Lcd_SetBit:
  4817                           
  4818                           ;incstack = 0
  4819                           ; Regs used in _Lcd_SetBit: [wreg]
  4820                           ;Lcd_SetBit@data_bit stored from wreg
  4821  0EDD  00F0               	movwf	Lcd_SetBit@data_bit
  4822  0EDE                     l1538:
  4823                           
  4824                           ;./LCD_Drivers.h: 81: void Lcd_SetBit(char data_bit);./LCD_Drivers.h: 82: {;./LCD_Driver
      +                          s.h: 83:  if(data_bit& 1)
  4825  0EDE  1C70               	btfss	Lcd_SetBit@data_bit,0
  4826  0EDF  2EE1               	goto	u1201
  4827  0EE0  2EE2               	goto	u1200
  4828  0EE1                     u1201:
  4829  0EE1  2EE5               	goto	l70
  4830  0EE2                     u1200:
  4831  0EE2                     l1540:
  4832                           
  4833                           ;./LCD_Drivers.h: 84:   RC4 = 1;
  4834  0EE2  0020               	movlb	0	; select bank0
  4835  0EE3  160E               	bsf	14,4	;volatile
  4836  0EE4  2EE7               	goto	l1542
  4837  0EE5                     l70:	
  4838                           ;./LCD_Drivers.h: 85:  else
  4839                           
  4840                           
  4841                           ;./LCD_Drivers.h: 86:   RC4 = 0;
  4842  0EE5  0020               	movlb	0	; select bank0
  4843  0EE6  120E               	bcf	14,4	;volatile
  4844  0EE7                     l1542:
  4845                           
  4846                           ;./LCD_Drivers.h: 88:  if(data_bit& 2)
  4847  0EE7  1CF0               	btfss	Lcd_SetBit@data_bit,1
  4848  0EE8  2EEA               	goto	u1211
  4849  0EE9  2EEB               	goto	u1210
  4850  0EEA                     u1211:
  4851  0EEA  2EED               	goto	l72
  4852  0EEB                     u1210:
  4853  0EEB                     l1544:
  4854                           
  4855                           ;./LCD_Drivers.h: 89:   RC5 = 1;
  4856  0EEB  168E               	bsf	14,5	;volatile
  4857  0EEC  2EEE               	goto	l1546
  4858  0EED                     l72:	
  4859                           ;./LCD_Drivers.h: 90:  else
  4860                           
  4861                           
  4862                           ;./LCD_Drivers.h: 91:   RC5 = 0;
  4863  0EED  128E               	bcf	14,5	;volatile
  4864  0EEE                     l1546:
  4865                           
  4866                           ;./LCD_Drivers.h: 93:  if(data_bit& 4)
  4867  0EEE  1D70               	btfss	Lcd_SetBit@data_bit,2
  4868  0EEF  2EF1               	goto	u1221
  4869  0EF0  2EF2               	goto	u1220
  4870  0EF1                     u1221:
  4871  0EF1  2EF4               	goto	l74
  4872  0EF2                     u1220:
  4873  0EF2                     l1548:
  4874                           
  4875                           ;./LCD_Drivers.h: 94:   RC6 = 1;
  4876  0EF2  170E               	bsf	14,6	;volatile
  4877  0EF3  2EF5               	goto	l1550
  4878  0EF4                     l74:	
  4879                           ;./LCD_Drivers.h: 95:  else
  4880                           
  4881                           
  4882                           ;./LCD_Drivers.h: 96:   RC6 = 0;
  4883  0EF4  130E               	bcf	14,6	;volatile
  4884  0EF5                     l1550:
  4885                           
  4886                           ;./LCD_Drivers.h: 98:  if(data_bit& 8)
  4887  0EF5  1DF0               	btfss	Lcd_SetBit@data_bit,3
  4888  0EF6  2EF8               	goto	u1231
  4889  0EF7  2EF9               	goto	u1230
  4890  0EF8                     u1231:
  4891  0EF8  2EFB               	goto	l76
  4892  0EF9                     u1230:
  4893  0EF9                     l1552:
  4894                           
  4895                           ;./LCD_Drivers.h: 99:   RC7 = 1;
  4896  0EF9  178E               	bsf	14,7	;volatile
  4897  0EFA  2EFC               	goto	l78
  4898  0EFB                     l76:	
  4899                           ;./LCD_Drivers.h: 100:  else
  4900                           
  4901                           
  4902                           ;./LCD_Drivers.h: 101:   RC7 = 0;
  4903  0EFB  138E               	bcf	14,7	;volatile
  4904  0EFC                     l78:
  4905  0EFC  0008               	return
  4906  0EFD                     __end_of_Lcd_SetBit:
  4907                           
  4908                           	psect	text19
  4909  0210                     __ptext19:	
  4910 ;; *************** function _LCD_init *****************
  4911 ;; Defined at:
  4912 ;;		line 29 in file "./LCD_Drivers.h"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0, pclath, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4926 ;;      Params:         0       0       0       0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0       0       0       0
  4928 ;;      Temps:          2       0       0       0       0       0       0       0
  4929 ;;      Totals:         2       0       0       0       0       0       0       0
  4930 ;;Total ram usage:        2 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    2
  4933 ;; This function calls:
  4934 ;;		_LCD_row_set
  4935 ;;		_LDC_clear
  4936 ;;		_send_CMD
  4937 ;; This function is called by:
  4938 ;;		_main
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function _LCD_init
  4944  0210                     _LCD_init:
  4945  0210                     l1728:	
  4946                           ;incstack = 0
  4947                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  4948                           
  4949                           
  4950                           ;./LCD_Drivers.h: 30:     send_CMD(0,0,0,0);
  4951  0210  3000               	movlw	0
  4952  0211  00F0               	movwf	send_CMD@d7
  4953  0212  00F1               	movwf	send_CMD@d7+1
  4954  0213  3000               	movlw	0
  4955  0214  00F2               	movwf	send_CMD@d6
  4956  0215  00F3               	movwf	send_CMD@d6+1
  4957  0216  3000               	movlw	0
  4958  0217  00F4               	movwf	send_CMD@d5
  4959  0218  00F5               	movwf	send_CMD@d5+1
  4960  0219  3000               	movlw	0
  4961  021A  00F6               	movwf	send_CMD@d4
  4962  021B  00F7               	movwf	send_CMD@d4+1
  4963  021C  318F  277E  3182   	fcall	_send_CMD
  4964                           
  4965                           ;./LCD_Drivers.h: 31:     send_CMD(0,0,0,0);
  4966  021F  3000               	movlw	0
  4967  0220  00F0               	movwf	send_CMD@d7
  4968  0221  00F1               	movwf	send_CMD@d7+1
  4969  0222  3000               	movlw	0
  4970  0223  00F2               	movwf	send_CMD@d6
  4971  0224  00F3               	movwf	send_CMD@d6+1
  4972  0225  3000               	movlw	0
  4973  0226  00F4               	movwf	send_CMD@d5
  4974  0227  00F5               	movwf	send_CMD@d5+1
  4975  0228  3000               	movlw	0
  4976  0229  00F6               	movwf	send_CMD@d4
  4977  022A  00F7               	movwf	send_CMD@d4+1
  4978  022B  318F  277E  3182   	fcall	_send_CMD
  4979  022E                     l1730:
  4980                           
  4981                           ;./LCD_Drivers.h: 32:     _delay((unsigned long)((100)*(8000000/4000.0)));
  4982  022E  3002               	movlw	2
  4983  022F  00FC               	movwf	??_LCD_init+1
  4984  0230  3004               	movlw	4
  4985  0231  00FB               	movwf	??_LCD_init
  4986  0232  30BA               	movlw	186
  4987  0233                     u1517:
  4988  0233  0B89               	decfsz	9,f
  4989  0234  2A33               	goto	u1517
  4990  0235  0BFB               	decfsz	??_LCD_init,f
  4991  0236  2A33               	goto	u1517
  4992  0237  0BFC               	decfsz	??_LCD_init+1,f
  4993  0238  2A33               	goto	u1517
  4994  0239  3200               	nop2
  4995  023A                     l1732:
  4996                           
  4997                           ;./LCD_Drivers.h: 34:     send_CMD(0,0,1,1);
  4998  023A  3000               	movlw	0
  4999  023B  00F0               	movwf	send_CMD@d7
  5000  023C  00F1               	movwf	send_CMD@d7+1
  5001  023D  3000               	movlw	0
  5002  023E  00F2               	movwf	send_CMD@d6
  5003  023F  00F3               	movwf	send_CMD@d6+1
  5004  0240  3001               	movlw	1
  5005  0241  00F4               	movwf	send_CMD@d5
  5006  0242  3000               	movlw	0
  5007  0243  00F5               	movwf	send_CMD@d5+1
  5008  0244  3001               	movlw	1
  5009  0245  00F6               	movwf	send_CMD@d4
  5010  0246  3000               	movlw	0
  5011  0247  00F7               	movwf	send_CMD@d4+1
  5012  0248  318F  277E  3182   	fcall	_send_CMD
  5013  024B                     l1734:
  5014                           
  5015                           ;./LCD_Drivers.h: 35:     send_CMD(0,0,1,1);
  5016  024B  3000               	movlw	0
  5017  024C  00F0               	movwf	send_CMD@d7
  5018  024D  00F1               	movwf	send_CMD@d7+1
  5019  024E  3000               	movlw	0
  5020  024F  00F2               	movwf	send_CMD@d6
  5021  0250  00F3               	movwf	send_CMD@d6+1
  5022  0251  3001               	movlw	1
  5023  0252  00F4               	movwf	send_CMD@d5
  5024  0253  3000               	movlw	0
  5025  0254  00F5               	movwf	send_CMD@d5+1
  5026  0255  3001               	movlw	1
  5027  0256  00F6               	movwf	send_CMD@d4
  5028  0257  3000               	movlw	0
  5029  0258  00F7               	movwf	send_CMD@d4+1
  5030  0259  318F  277E  3182   	fcall	_send_CMD
  5031  025C                     l1736:
  5032                           
  5033                           ;./LCD_Drivers.h: 36:     send_CMD(0,0,1,1);
  5034  025C  3000               	movlw	0
  5035  025D  00F0               	movwf	send_CMD@d7
  5036  025E  00F1               	movwf	send_CMD@d7+1
  5037  025F  3000               	movlw	0
  5038  0260  00F2               	movwf	send_CMD@d6
  5039  0261  00F3               	movwf	send_CMD@d6+1
  5040  0262  3001               	movlw	1
  5041  0263  00F4               	movwf	send_CMD@d5
  5042  0264  3000               	movlw	0
  5043  0265  00F5               	movwf	send_CMD@d5+1
  5044  0266  3001               	movlw	1
  5045  0267  00F6               	movwf	send_CMD@d4
  5046  0268  3000               	movlw	0
  5047  0269  00F7               	movwf	send_CMD@d4+1
  5048  026A  318F  277E  3182   	fcall	_send_CMD
  5049  026D                     l1738:
  5050                           
  5051                           ;./LCD_Drivers.h: 37:     send_CMD(0,0,1,0);
  5052  026D  3000               	movlw	0
  5053  026E  00F0               	movwf	send_CMD@d7
  5054  026F  00F1               	movwf	send_CMD@d7+1
  5055  0270  3000               	movlw	0
  5056  0271  00F2               	movwf	send_CMD@d6
  5057  0272  00F3               	movwf	send_CMD@d6+1
  5058  0273  3001               	movlw	1
  5059  0274  00F4               	movwf	send_CMD@d5
  5060  0275  3000               	movlw	0
  5061  0276  00F5               	movwf	send_CMD@d5+1
  5062  0277  3000               	movlw	0
  5063  0278  00F6               	movwf	send_CMD@d4
  5064  0279  00F7               	movwf	send_CMD@d4+1
  5065  027A  318F  277E  3182   	fcall	_send_CMD
  5066  027D                     l1740:
  5067                           
  5068                           ;./LCD_Drivers.h: 38:     send_CMD(0,0,1,0);
  5069  027D  3000               	movlw	0
  5070  027E  00F0               	movwf	send_CMD@d7
  5071  027F  00F1               	movwf	send_CMD@d7+1
  5072  0280  3000               	movlw	0
  5073  0281  00F2               	movwf	send_CMD@d6
  5074  0282  00F3               	movwf	send_CMD@d6+1
  5075  0283  3001               	movlw	1
  5076  0284  00F4               	movwf	send_CMD@d5
  5077  0285  3000               	movlw	0
  5078  0286  00F5               	movwf	send_CMD@d5+1
  5079  0287  3000               	movlw	0
  5080  0288  00F6               	movwf	send_CMD@d4
  5081  0289  00F7               	movwf	send_CMD@d4+1
  5082  028A  318F  277E  3182   	fcall	_send_CMD
  5083  028D                     l1742:
  5084                           
  5085                           ;./LCD_Drivers.h: 39:     send_CMD(1,0,0,0);
  5086  028D  3001               	movlw	1
  5087  028E  00F0               	movwf	send_CMD@d7
  5088  028F  3000               	movlw	0
  5089  0290  00F1               	movwf	send_CMD@d7+1
  5090  0291  3000               	movlw	0
  5091  0292  00F2               	movwf	send_CMD@d6
  5092  0293  00F3               	movwf	send_CMD@d6+1
  5093  0294  3000               	movlw	0
  5094  0295  00F4               	movwf	send_CMD@d5
  5095  0296  00F5               	movwf	send_CMD@d5+1
  5096  0297  3000               	movlw	0
  5097  0298  00F6               	movwf	send_CMD@d4
  5098  0299  00F7               	movwf	send_CMD@d4+1
  5099  029A  318F  277E  3182   	fcall	_send_CMD
  5100  029D                     l1744:
  5101                           
  5102                           ;./LCD_Drivers.h: 40:     send_CMD(0,0,0,0);
  5103  029D  3000               	movlw	0
  5104  029E  00F0               	movwf	send_CMD@d7
  5105  029F  00F1               	movwf	send_CMD@d7+1
  5106  02A0  3000               	movlw	0
  5107  02A1  00F2               	movwf	send_CMD@d6
  5108  02A2  00F3               	movwf	send_CMD@d6+1
  5109  02A3  3000               	movlw	0
  5110  02A4  00F4               	movwf	send_CMD@d5
  5111  02A5  00F5               	movwf	send_CMD@d5+1
  5112  02A6  3000               	movlw	0
  5113  02A7  00F6               	movwf	send_CMD@d4
  5114  02A8  00F7               	movwf	send_CMD@d4+1
  5115  02A9  318F  277E  3182   	fcall	_send_CMD
  5116  02AC                     l1746:
  5117                           
  5118                           ;./LCD_Drivers.h: 41:     send_CMD(1,1,0,0);
  5119  02AC  3001               	movlw	1
  5120  02AD  00F0               	movwf	send_CMD@d7
  5121  02AE  3000               	movlw	0
  5122  02AF  00F1               	movwf	send_CMD@d7+1
  5123  02B0  3001               	movlw	1
  5124  02B1  00F2               	movwf	send_CMD@d6
  5125  02B2  3000               	movlw	0
  5126  02B3  00F3               	movwf	send_CMD@d6+1
  5127  02B4  3000               	movlw	0
  5128  02B5  00F4               	movwf	send_CMD@d5
  5129  02B6  00F5               	movwf	send_CMD@d5+1
  5130  02B7  3000               	movlw	0
  5131  02B8  00F6               	movwf	send_CMD@d4
  5132  02B9  00F7               	movwf	send_CMD@d4+1
  5133  02BA  318F  277E  3182   	fcall	_send_CMD
  5134  02BD                     l1748:
  5135                           
  5136                           ;./LCD_Drivers.h: 42:     send_CMD(0,0,0,0);
  5137  02BD  3000               	movlw	0
  5138  02BE  00F0               	movwf	send_CMD@d7
  5139  02BF  00F1               	movwf	send_CMD@d7+1
  5140  02C0  3000               	movlw	0
  5141  02C1  00F2               	movwf	send_CMD@d6
  5142  02C2  00F3               	movwf	send_CMD@d6+1
  5143  02C3  3000               	movlw	0
  5144  02C4  00F4               	movwf	send_CMD@d5
  5145  02C5  00F5               	movwf	send_CMD@d5+1
  5146  02C6  3000               	movlw	0
  5147  02C7  00F6               	movwf	send_CMD@d4
  5148  02C8  00F7               	movwf	send_CMD@d4+1
  5149  02C9  318F  277E  3182   	fcall	_send_CMD
  5150  02CC                     l1750:
  5151                           
  5152                           ;./LCD_Drivers.h: 43:     send_CMD(0,1,1,0);
  5153  02CC  3000               	movlw	0
  5154  02CD  00F0               	movwf	send_CMD@d7
  5155  02CE  00F1               	movwf	send_CMD@d7+1
  5156  02CF  3001               	movlw	1
  5157  02D0  00F2               	movwf	send_CMD@d6
  5158  02D1  3000               	movlw	0
  5159  02D2  00F3               	movwf	send_CMD@d6+1
  5160  02D3  3001               	movlw	1
  5161  02D4  00F4               	movwf	send_CMD@d5
  5162  02D5  3000               	movlw	0
  5163  02D6  00F5               	movwf	send_CMD@d5+1
  5164  02D7  3000               	movlw	0
  5165  02D8  00F6               	movwf	send_CMD@d4
  5166  02D9  00F7               	movwf	send_CMD@d4+1
  5167  02DA  318F  277E  3182   	fcall	_send_CMD
  5168  02DD                     l1752:
  5169                           
  5170                           ;./LCD_Drivers.h: 44:     LCD_row_set(1);
  5171  02DD  3001               	movlw	1
  5172  02DE  00F9               	movwf	LCD_row_set@row
  5173  02DF  3000               	movlw	0
  5174  02E0  00FA               	movwf	LCD_row_set@row+1
  5175  02E1  318F  27B3  3182   	fcall	_LCD_row_set
  5176  02E4                     l1754:
  5177                           
  5178                           ;./LCD_Drivers.h: 45:     LDC_clear();
  5179  02E4  318E  26BD  3182   	fcall	_LDC_clear
  5180  02E7                     l53:
  5181  02E7  0008               	return
  5182  02E8                     __end_of_LCD_init:
  5183                           
  5184                           	psect	text20
  5185  0EBD                     __ptext20:	
  5186 ;; *************** function _LDC_clear *****************
  5187 ;; Defined at:
  5188 ;;		line 122 in file "./LCD_Drivers.h"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0, pclath, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5202 ;;      Params:         0       0       0       0       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0
  5205 ;;      Totals:         0       0       0       0       0       0       0       0
  5206 ;;Total ram usage:        0 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    1
  5209 ;; This function calls:
  5210 ;;		_send_CMD
  5211 ;; This function is called by:
  5212 ;;		_LCD_init
  5213 ;;		_Print_DTMF_data
  5214 ;;		_main
  5215 ;;		_hexTest
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           
  5220                           ;psect for function _LDC_clear
  5221  0EBD                     _LDC_clear:
  5222  0EBD                     l1680:	
  5223                           ;incstack = 0
  5224                           ; Regs used in _LDC_clear: [wreg+status,2+status,0+pclath+cstack]
  5225                           
  5226                           
  5227                           ;./LCD_Drivers.h: 123:     send_CMD(0,0,0,0);
  5228  0EBD  3000               	movlw	0
  5229  0EBE  00F0               	movwf	send_CMD@d7
  5230  0EBF  00F1               	movwf	send_CMD@d7+1
  5231  0EC0  3000               	movlw	0
  5232  0EC1  00F2               	movwf	send_CMD@d6
  5233  0EC2  00F3               	movwf	send_CMD@d6+1
  5234  0EC3  3000               	movlw	0
  5235  0EC4  00F4               	movwf	send_CMD@d5
  5236  0EC5  00F5               	movwf	send_CMD@d5+1
  5237  0EC6  3000               	movlw	0
  5238  0EC7  00F6               	movwf	send_CMD@d4
  5239  0EC8  00F7               	movwf	send_CMD@d4+1
  5240  0EC9  318F  277E  318E   	fcall	_send_CMD
  5241                           
  5242                           ;./LCD_Drivers.h: 124:     send_CMD(0,0,0,1);
  5243  0ECC  3000               	movlw	0
  5244  0ECD  00F0               	movwf	send_CMD@d7
  5245  0ECE  00F1               	movwf	send_CMD@d7+1
  5246  0ECF  3000               	movlw	0
  5247  0ED0  00F2               	movwf	send_CMD@d6
  5248  0ED1  00F3               	movwf	send_CMD@d6+1
  5249  0ED2  3000               	movlw	0
  5250  0ED3  00F4               	movwf	send_CMD@d5
  5251  0ED4  00F5               	movwf	send_CMD@d5+1
  5252  0ED5  3001               	movlw	1
  5253  0ED6  00F6               	movwf	send_CMD@d4
  5254  0ED7  3000               	movlw	0
  5255  0ED8  00F7               	movwf	send_CMD@d4+1
  5256  0ED9  318F  277E  318E   	fcall	_send_CMD
  5257  0EDC                     l92:
  5258  0EDC  0008               	return
  5259  0EDD                     __end_of_LDC_clear:
  5260                           
  5261                           	psect	text21
  5262  0FB3                     __ptext21:	
  5263 ;; *************** function _LCD_row_set *****************
  5264 ;; Defined at:
  5265 ;;		line 111 in file "./LCD_Drivers.h"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  row             2    9[COMMON] int 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0, pclath, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5279 ;;      Params:         2       0       0       0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0
  5282 ;;      Totals:         2       0       0       0       0       0       0       0
  5283 ;;Total ram usage:        2 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    1
  5286 ;; This function calls:
  5287 ;;		_send_CMD
  5288 ;; This function is called by:
  5289 ;;		_LCD_init
  5290 ;;		_Print_DTMF_data
  5291 ;;		_main
  5292 ;;		_hexTest
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _LCD_row_set
  5298  0FB3                     _LCD_row_set:
  5299  0FB3                     l1672:	
  5300                           ;incstack = 0
  5301                           ; Regs used in _LCD_row_set: [wreg+status,2+status,0+pclath+cstack]
  5302                           
  5303                           
  5304                           ;./LCD_Drivers.h: 112:     if(row == 1){
  5305  0FB3  0379               	decf	LCD_row_set@row,w
  5306  0FB4  047A               	iorwf	LCD_row_set@row+1,w
  5307  0FB5  1D03               	btfss	3,2
  5308  0FB6  2FB8               	goto	u1351
  5309  0FB7  2FB9               	goto	u1350
  5310  0FB8                     u1351:
  5311  0FB8  2FD8               	goto	l1676
  5312  0FB9                     u1350:
  5313  0FB9                     l1674:
  5314                           
  5315                           ;./LCD_Drivers.h: 113:     send_CMD(1,0,0,0);
  5316  0FB9  3001               	movlw	1
  5317  0FBA  00F0               	movwf	send_CMD@d7
  5318  0FBB  3000               	movlw	0
  5319  0FBC  00F1               	movwf	send_CMD@d7+1
  5320  0FBD  3000               	movlw	0
  5321  0FBE  00F2               	movwf	send_CMD@d6
  5322  0FBF  00F3               	movwf	send_CMD@d6+1
  5323  0FC0  3000               	movlw	0
  5324  0FC1  00F4               	movwf	send_CMD@d5
  5325  0FC2  00F5               	movwf	send_CMD@d5+1
  5326  0FC3  3000               	movlw	0
  5327  0FC4  00F6               	movwf	send_CMD@d4
  5328  0FC5  00F7               	movwf	send_CMD@d4+1
  5329  0FC6  318F  277E  318F   	fcall	_send_CMD
  5330                           
  5331                           ;./LCD_Drivers.h: 114:     send_CMD(0,0,0,0);
  5332  0FC9  3000               	movlw	0
  5333  0FCA  00F0               	movwf	send_CMD@d7
  5334  0FCB  00F1               	movwf	send_CMD@d7+1
  5335  0FCC  3000               	movlw	0
  5336  0FCD  00F2               	movwf	send_CMD@d6
  5337  0FCE  00F3               	movwf	send_CMD@d6+1
  5338  0FCF  3000               	movlw	0
  5339  0FD0  00F4               	movwf	send_CMD@d5
  5340  0FD1  00F5               	movwf	send_CMD@d5+1
  5341  0FD2  3000               	movlw	0
  5342  0FD3  00F6               	movwf	send_CMD@d4
  5343  0FD4  00F7               	movwf	send_CMD@d4+1
  5344  0FD5  318F  277E  318F   	fcall	_send_CMD
  5345  0FD8                     l1676:
  5346                           
  5347                           ;./LCD_Drivers.h: 116:     if(row == 2){
  5348  0FD8  3002               	movlw	2
  5349  0FD9  0679               	xorwf	LCD_row_set@row,w
  5350  0FDA  047A               	iorwf	LCD_row_set@row+1,w
  5351  0FDB  1D03               	btfss	3,2
  5352  0FDC  2FDE               	goto	u1361
  5353  0FDD  2FDF               	goto	u1360
  5354  0FDE                     u1361:
  5355  0FDE  2FFF               	goto	l89
  5356  0FDF                     u1360:
  5357  0FDF                     l1678:
  5358                           
  5359                           ;./LCD_Drivers.h: 117:     send_CMD(1,1,0,0);
  5360  0FDF  3001               	movlw	1
  5361  0FE0  00F0               	movwf	send_CMD@d7
  5362  0FE1  3000               	movlw	0
  5363  0FE2  00F1               	movwf	send_CMD@d7+1
  5364  0FE3  3001               	movlw	1
  5365  0FE4  00F2               	movwf	send_CMD@d6
  5366  0FE5  3000               	movlw	0
  5367  0FE6  00F3               	movwf	send_CMD@d6+1
  5368  0FE7  3000               	movlw	0
  5369  0FE8  00F4               	movwf	send_CMD@d5
  5370  0FE9  00F5               	movwf	send_CMD@d5+1
  5371  0FEA  3000               	movlw	0
  5372  0FEB  00F6               	movwf	send_CMD@d4
  5373  0FEC  00F7               	movwf	send_CMD@d4+1
  5374  0FED  318F  277E  318F   	fcall	_send_CMD
  5375                           
  5376                           ;./LCD_Drivers.h: 118:     send_CMD(0,0,0,0);
  5377  0FF0  3000               	movlw	0
  5378  0FF1  00F0               	movwf	send_CMD@d7
  5379  0FF2  00F1               	movwf	send_CMD@d7+1
  5380  0FF3  3000               	movlw	0
  5381  0FF4  00F2               	movwf	send_CMD@d6
  5382  0FF5  00F3               	movwf	send_CMD@d6+1
  5383  0FF6  3000               	movlw	0
  5384  0FF7  00F4               	movwf	send_CMD@d5
  5385  0FF8  00F5               	movwf	send_CMD@d5+1
  5386  0FF9  3000               	movlw	0
  5387  0FFA  00F6               	movwf	send_CMD@d4
  5388  0FFB  00F7               	movwf	send_CMD@d4+1
  5389  0FFC  318F  277E  318F   	fcall	_send_CMD
  5390  0FFF                     l89:
  5391  0FFF  0008               	return
  5392  1000                     __end_of_LCD_row_set:
  5393                           
  5394                           	psect	text22
  5395  0F7E                     __ptext22:	
  5396 ;; *************** function _send_CMD *****************
  5397 ;; Defined at:
  5398 ;;		line 49 in file "./LCD_Drivers.h"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  d7              2    0[COMMON] int 
  5401 ;;  d6              2    2[COMMON] int 
  5402 ;;  d5              2    4[COMMON] int 
  5403 ;;  d4              2    6[COMMON] int 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5415 ;;      Params:         8       0       0       0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0
  5417 ;;      Temps:          1       0       0       0       0       0       0       0
  5418 ;;      Totals:         9       0       0       0       0       0       0       0
  5419 ;;Total ram usage:        9 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_LCD_init
  5425 ;;		_LCD_row_set
  5426 ;;		_LDC_clear
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function _send_CMD
  5432  0F7E                     _send_CMD:
  5433  0F7E                     l1630:	
  5434                           ;incstack = 0
  5435                           ; Regs used in _send_CMD: [wreg+status,2+status,0]
  5436                           
  5437                           
  5438                           ;./LCD_Drivers.h: 50:   RC0=0;
  5439  0F7E  0020               	movlb	0	; select bank0
  5440  0F7F  100E               	bcf	14,0	;volatile
  5441  0F80                     l1632:
  5442                           
  5443                           ;./LCD_Drivers.h: 51:   if(d7 == 1){RC7=1;}
  5444  0F80  0370               	decf	send_CMD@d7,w
  5445  0F81  0471               	iorwf	send_CMD@d7+1,w
  5446  0F82  1D03               	btfss	3,2
  5447  0F83  2F85               	goto	u1301
  5448  0F84  2F86               	goto	u1300
  5449  0F85                     u1301:
  5450  0F85  2F88               	goto	l56
  5451  0F86                     u1300:
  5452  0F86                     l1634:
  5453  0F86  178E               	bsf	14,7	;volatile
  5454  0F87  2F89               	goto	l1636
  5455  0F88                     l56:	
  5456                           ;./LCD_Drivers.h: 52:   else {RC7=0;}
  5457                           
  5458  0F88  138E               	bcf	14,7	;volatile
  5459  0F89                     l1636:
  5460                           
  5461                           ;./LCD_Drivers.h: 53:   if(d6 == 1){RC6=1;}
  5462  0F89  0372               	decf	send_CMD@d6,w
  5463  0F8A  0473               	iorwf	send_CMD@d6+1,w
  5464  0F8B  1D03               	btfss	3,2
  5465  0F8C  2F8E               	goto	u1311
  5466  0F8D  2F8F               	goto	u1310
  5467  0F8E                     u1311:
  5468  0F8E  2F91               	goto	l58
  5469  0F8F                     u1310:
  5470  0F8F                     l1638:
  5471  0F8F  170E               	bsf	14,6	;volatile
  5472  0F90  2F92               	goto	l1640
  5473  0F91                     l58:	
  5474                           ;./LCD_Drivers.h: 54:   else {RC6=0;}
  5475                           
  5476  0F91  130E               	bcf	14,6	;volatile
  5477  0F92                     l1640:
  5478                           
  5479                           ;./LCD_Drivers.h: 55:   if(d5 == 1){RC5=1;}
  5480  0F92  0374               	decf	send_CMD@d5,w
  5481  0F93  0475               	iorwf	send_CMD@d5+1,w
  5482  0F94  1D03               	btfss	3,2
  5483  0F95  2F97               	goto	u1321
  5484  0F96  2F98               	goto	u1320
  5485  0F97                     u1321:
  5486  0F97  2F9A               	goto	l60
  5487  0F98                     u1320:
  5488  0F98                     l1642:
  5489  0F98  168E               	bsf	14,5	;volatile
  5490  0F99  2F9B               	goto	l1644
  5491  0F9A                     l60:	
  5492                           ;./LCD_Drivers.h: 56:   else {RC5=0;}
  5493                           
  5494  0F9A  128E               	bcf	14,5	;volatile
  5495  0F9B                     l1644:
  5496                           
  5497                           ;./LCD_Drivers.h: 57:   if(d4 == 1){RC4=1;}
  5498  0F9B  0376               	decf	send_CMD@d4,w
  5499  0F9C  0477               	iorwf	send_CMD@d4+1,w
  5500  0F9D  1D03               	btfss	3,2
  5501  0F9E  2FA0               	goto	u1331
  5502  0F9F  2FA1               	goto	u1330
  5503  0FA0                     u1331:
  5504  0FA0  2FA3               	goto	l62
  5505  0FA1                     u1330:
  5506  0FA1                     l1646:
  5507  0FA1  160E               	bsf	14,4	;volatile
  5508  0FA2  2FA4               	goto	l63
  5509  0FA3                     l62:	
  5510                           ;./LCD_Drivers.h: 58:   else {RC4=0;}
  5511                           
  5512  0FA3  120E               	bcf	14,4	;volatile
  5513  0FA4                     l63:
  5514                           
  5515                           ;./LCD_Drivers.h: 60:   RC1=1;
  5516  0FA4  148E               	bsf	14,1	;volatile
  5517  0FA5                     l1648:
  5518                           
  5519                           ;./LCD_Drivers.h: 61:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  5520  0FA5  30C8               	movlw	200
  5521  0FA6                     u1527:
  5522  0FA6  3200               	nop2
  5523  0FA7  0B89               	decfsz	9,f
  5524  0FA8  2FA6               	goto	u1527
  5525  0FA9                     l1650:
  5526                           
  5527                           ;./LCD_Drivers.h: 62:   RC1=0;
  5528  0FA9  0020               	movlb	0	; select bank0
  5529  0FAA  108E               	bcf	14,1	;volatile
  5530                           
  5531                           ;./LCD_Drivers.h: 63:  _delay((unsigned long)((1)*(8000000/4000.0)));
  5532  0FAB  3003               	movlw	3
  5533  0FAC  00F8               	movwf	??_send_CMD
  5534  0FAD  3098               	movlw	152
  5535  0FAE                     u1537:
  5536  0FAE  0B89               	decfsz	9,f
  5537  0FAF  2FAE               	goto	u1537
  5538  0FB0  0BF8               	decfsz	??_send_CMD,f
  5539  0FB1  2FAE               	goto	u1537
  5540  0FB2                     l64:
  5541  0FB2  0008               	return
  5542  0FB3                     __end_of_send_CMD:
  5543                           
  5544                           	psect	text23
  5545  0E54                     __ptext23:	
  5546 ;; *************** function _DTMF_start *****************
  5547 ;; Defined at:
  5548 ;;		line 21 in file "./DTMF_Drivers.h"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      _Bool 
  5555 ;; Registers used:
  5556 ;;		wreg
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5562 ;;      Params:         0       0       0       0       0       0       0       0
  5563 ;;      Locals:         0       0       0       0       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0
  5565 ;;      Totals:         0       0       0       0       0       0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_main
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function _DTMF_start
  5577  0E54                     _DTMF_start:
  5578  0E54                     l1248:	
  5579                           ;incstack = 0
  5580                           ; Regs used in _DTMF_start: [wreg]
  5581                           
  5582                           
  5583                           ;./DTMF_Drivers.h: 22:     if(!RC3 && RB4 &&!RB5 && !RB6 && !RB7)return 1;
  5584  0E54  0020               	movlb	0	; select bank0
  5585  0E55  198E               	btfsc	14,3	;volatile
  5586  0E56  2E58               	goto	u661
  5587  0E57  2E59               	goto	u660
  5588  0E58                     u661:
  5589  0E58  2E6B               	goto	l1264
  5590  0E59                     u660:
  5591  0E59                     l1250:
  5592  0E59  1E0D               	btfss	13,4	;volatile
  5593  0E5A  2E5C               	goto	u671
  5594  0E5B  2E5D               	goto	u670
  5595  0E5C                     u671:
  5596  0E5C  2E6B               	goto	l1264
  5597  0E5D                     u670:
  5598  0E5D                     l1252:
  5599  0E5D  1A8D               	btfsc	13,5	;volatile
  5600  0E5E  2E60               	goto	u681
  5601  0E5F  2E61               	goto	u680
  5602  0E60                     u681:
  5603  0E60  2E6B               	goto	l1264
  5604  0E61                     u680:
  5605  0E61                     l1254:
  5606  0E61  1B0D               	btfsc	13,6	;volatile
  5607  0E62  2E64               	goto	u691
  5608  0E63  2E65               	goto	u690
  5609  0E64                     u691:
  5610  0E64  2E6B               	goto	l1264
  5611  0E65                     u690:
  5612  0E65                     l1256:
  5613  0E65  1B8D               	btfsc	13,7	;volatile
  5614  0E66  2E68               	goto	u701
  5615  0E67  2E69               	goto	u700
  5616  0E68                     u701:
  5617  0E68  2E6B               	goto	l1264
  5618  0E69                     u700:
  5619  0E69                     l1258:
  5620  0E69  3001               	movlw	1
  5621  0E6A  2E6C               	goto	l99
  5622  0E6B                     l1264:
  5623  0E6B  3000               	movlw	0
  5624  0E6C                     l99:
  5625  0E6C  0008               	return
  5626  0E6D                     __end_of_DTMF_start:
  5627  007E                     btemp	set	126	;btemp
  5628  007E                     wtemp0	set	126
  5629                           
  5630                           	psect	config
  5631                           
  5632                           ;Config register CONFIG1 @ 0x8007
  5633                           ;	FEXTOSC External Oscillator mode Selection bits
  5634                           ;	FEXTOSC = HS, HS (crystal oscillator) above 4 MHz
  5635                           ;	Power-up default value for COSC bits
  5636                           ;	RSTOSC = EXT1X, EXTOSC operating per FEXTOSC bits
  5637                           ;	Clock Out Enable bit
  5638                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  5639                           ;	Clock Switch Enable bit
  5640                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5641                           ;	Fail-Safe Clock Monitor Enable
  5642                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5643  8007                     	org	32775
  5644  8007  1FFA               	dw	8186
  5645                           
  5646                           ;Config register CONFIG2 @ 0x8008
  5647                           ;	Master Clear Enable bit
  5648                           ;	MCLRE = 0x1, unprogrammed default
  5649                           ;	Power-up Timer Enable bit
  5650                           ;	PWRTE = 0x1, unprogrammed default
  5651                           ;	Watchdog Timer Enable bits
  5652                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
  5653                           ;	Low-power BOR enable bit
  5654                           ;	LPBOREN = 0x1, unprogrammed default
  5655                           ;	Brown-out Reset Enable bits
  5656                           ;	BOREN = 0x3, unprogrammed default
  5657                           ;	Brown-out Reset Voltage selection bit
  5658                           ;	BORV = 0x1, unprogrammed default
  5659                           ;	PPSLOCK bit One-Way Set Enable bit
  5660                           ;	PPS1WAY = 0x1, unprogrammed default
  5661                           ;	Stack Overflow/Underflow Reset Enable bit
  5662                           ;	STVREN = 0x1, unprogrammed default
  5663                           ;	Debugger enable bit
  5664                           ;	DEBUG = 0x1, unprogrammed default
  5665  8008                     	org	32776
  5666  8008  3FF3               	dw	16371
  5667                           
  5668                           ;Config register CONFIG3 @ 0x8009
  5669                           ;	User NVM self-write protection bits
  5670                           ;	WRT = 0x3, unprogrammed default
  5671                           ;	Low Voltage Programming Enable bit
  5672                           ;	LVP = OFF, High Voltage on MCLR/VPP must be used for programming.
  5673  8009                     	org	32777
  5674  8009  1FFF               	dw	8191

Data Sizes:
    Strings     112
    Constant    0
    Data        0
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     37      77
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> LCD_Print_num@str(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> LCD_Print_num@str(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S589_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> LCD_Print_num@str(BANK1[10]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 10
		 -> LCD_Print_num@str(BANK1[10]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_14(CODE[10]), STR_13(CODE[15]), STR_12(CODE[10]), STR_11(CODE[15]), 
		 -> STR_10(CODE[8]), STR_9(CODE[15]), STR_8(CODE[15]), STR_7(CODE[5]), 
		 -> STR_6(CODE[14]), STR_5(CODE[5]), STR_4(CODE[12]), STR_3(CODE[2]), 
		 -> STR_2(CODE[13]), LCD_Print_num@str(BANK1[10]), 


Critical Paths under _main in COMMON

    _LCD_Print_num->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _LCD_init->_LCD_row_set
    _LDC_clear->_send_CMD
    _LCD_row_set->_send_CMD

Critical Paths under _main in BANK0

    _main->_read_DTMF_Data
    _read_DTMF_Data->_Print_DTMF_data
    _Print_DTMF_data->_LCD_Print_num
    _LCD_Print_num->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_read_DTMF_Data
    _read_DTMF_Data->_Print_DTMF_data
    _Print_DTMF_data->_LCD_Print_num
    _LCD_Print_num->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   53476
                                             35 BANK1      2     2      0
                         _DTMF_start
                           _LCD_init
                        _LCD_row_set
                          _LDC_clear
                   _Lcd_Print_String
                     _read_DTMF_Data
 ---------------------------------------------------------------------------------
 (1) _read_DTMF_Data                                      12    12      0   22128
                                             78 BANK0      2     2      0
                                             25 BANK1     10    10      0
                    _Print_DTMF_data
 ---------------------------------------------------------------------------------
 (2) _Print_DTMF_data                                      8     2      6   21852
                                             76 BANK0      2     2      0
                                             19 BANK1      6     0      6
                      _LCD_Print_num
                        _LCD_row_set
                          _LDC_clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Print_num                                       12    10      2    7820
                                             74 BANK0      2     0      2
                                              9 BANK1     10    10      0
                   _Lcd_Print_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             14    10      4    6112
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (3) _Lcd_Print_String                                     5     3      2    1332
                                              5 COMMON     5     3      2
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Print_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (5) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0   17788
                                             11 COMMON     2     2      0
                        _LCD_row_set
                          _LDC_clear
                           _send_CMD
 ---------------------------------------------------------------------------------
 (3) _LDC_clear                                            0     0      0    5560
                           _send_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_row_set                                          2     0      2    6668
                                              9 COMMON     2     0      2
                           _send_CMD
 ---------------------------------------------------------------------------------
 (4) _send_CMD                                             9     1      8    5560
                                              0 COMMON     9     1      8
 ---------------------------------------------------------------------------------
 (1) _DTMF_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DTMF_start
   _LCD_init
     _LCD_row_set
       _send_CMD
     _LDC_clear
       _send_CMD
     _send_CMD
   _LCD_row_set
     _send_CMD
   _LDC_clear
     _send_CMD
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _read_DTMF_Data
     _Print_DTMF_data
       _LCD_Print_num
         _Lcd_Print_String
           _Lcd_Print_Char
             _Lcd_SetBit
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
       _LCD_row_set
         _send_CMD
       _LDC_clear
         _send_CMD
       _Lcd_Print_Char
         _Lcd_SetBit
       _Lcd_Print_String
         _Lcd_Print_Char
           _Lcd_SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      AB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      4D       8       96.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      AB      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 27 10:52:39 2020

                        l60 0F9A                          l53 02E7                          l62 0FA3  
                        l70 0EE5                          l63 0FA4                          l64 0FB2  
                        l56 0F88                          l72 0EED                          l58 0F91  
                        l74 0EF4                          l67 0F4C                          l92 0EDC  
                        l76 0EFB                          l84 0EBC                          l78 0EFC  
                        l95 0E53                          l89 0FFF                          l99 0E6C  
               ?_DTMF_start 0070                         l103 03C0                         l106 020F  
         read_DTMF_Data@low 00E9                         l371 0675                         l372 0686  
                       l384 0574                         l385 0585                         l810 0E9F  
                       l813 0E9F                         l806 0F7D                         l734 0F20  
                       l825 007C                         l833 002D                         l761 0099  
                       l842 0E85                         l770 06D9                         l836 0005  
                       l764 00BB                         l766 00D5                         l774 06F6  
                       l775 070E                         l792 07F4                         l769 06D0  
                       l778 077E                         l799 049B                         _RC0 0070  
                       _RC1 0071                         _RB4 006C                         _RC3 0073  
                       _RB5 006D                         _RC4 0074                         _RB6 006E  
                       _RC5 0075                         _RB7 006F                         _RC6 0076  
                       _RC7 0077                         u700 0E69                         u701 0E68  
                       u800 05BC                         u720 0033                         u801 05BB  
                       u721 0032                         u730 0038                         u731 0037  
                       u660 0E59                         u820 05E6                         u740 0047  
                       u661 0E58                         u741 0046                         u670 0E5D  
                       u830 05F6                         u910 04D2                         u750 0064  
                       u671 0E5C                         u831 05F5                         u911 04D1  
                       u751 0063                         u680 0E61                         u840 0609  
                       u760 002D                         u681 0E60                         u841 0608  
                       u761 002C                         u690 0E65                         u850 0633  
                       u930 04FE                         u770 0E7F                         u691 0E64  
                       u851 0632                         u931 04FD                         u755 0060  
                       u771 0E7E                         u860 0652                         u780 0591  
                       u940 0511                         u861 0651                         u781 0590  
                       u941 0510                         u870 0657                         u950 0533  
                       u871 0656                         u855 062F                         u951 0532  
                       u960 0551                         u961 0550                         u970 0556  
                       u890 04A7                         u971 0555                         u955 052F  
                       u891 04A6                         u990 0084                         u991 0083  
                       _abs 0E86                         _pad 007D                         wreg 0009  
             _LCD_Print_num 0E3F                        ?_abs 0073                        l1400 05E9  
                      l1250 0E59                        l1410 0609                        l1402 05F6  
                      l1252 0E5D                        l1412 0611                        l1404 05F9  
                      l1420 0652                        l1500 0713                        l1254 0E61  
                      l1422 0657                        l1414 0633                        l1406 0601  
                      l1430 04C8                        l1510 0751                        l1502 0716  
                      l1256 0E65                        l1264 0E6B                        l1248 0E54  
                      l1600 0F2C                        l1416 0643                        l1408 0605  
                      l1440 0509                        l1432 04D2                        l1424 049C  
                      l1360 0047                        l1352 002E                        l1512 078C  
                      l1520 07B9                        l1504 071B                        l1258 0E69  
                      l1610 0F40                        l1602 0F2E                        l1418 0644  
                      l1442 050D                        l1450 0551                        l1434 04F1  
                      l1426 049D                        l1362 0064                        l1354 0033  
                      l1370 000B                        l1530 07D5                        l1522 07C0  
                      l1514 0799                        l1506 0749                        l1540 0EE2  
                      l1612 0F44                        l1604 0F38                        l1452 0556  
                      l1444 0511                        l1436 04FE                        l1428 04A7  
                      l1364 0074                        l1356 0038                        l1372 0019  
                      l1380 0E77                        l1460 0092                        l1532 07D9  
                      l1524 07C5                        l1516 07A6                        l1508 074D  
                      l1620 0F53                        l1700 019E                        l1630 0F7E  
                      l1550 0EF5                        l1542 0EE7                        l1614 0F46  
                      l1606 0F3A                        l1390 0591                        l1446 0533  
                      l1438 0501                        l1358 003D                        l1374 001E  
                      l1382 0E7F                        l1470 00C0                        l1462 0097  
                      l1454 007F                        l1526 07CA                        l1534 07E1  
                      l1518 07B4                        l1622 0F57                        l1710 01C1  
                      l1702 01A1                        l1640 0F92                        l1632 0F80  
                      l1552 0EF9                        l1544 0EEB                        l1616 0F4A  
                      l1608 0F3E                        l1392 05B2                        l1448 0543  
                      l1368 0008                        l1376 0E6E                        l1472 00C9  
                      l1464 009C                        l1456 0084                        l1528 07D0  
                      l1480 0689                        l1560 03E1                        l1624 0F6B  
                      l1720 01ED                        l1712 01D5                        l1704 01A8  
                      l1800 00DB                        l1650 0FA9                        l1642 0F98  
                      l1634 0F86                        l1730 022E                        l1546 0EEE  
                      l1538 0EDE                        l1394 05BC                        l1386 0586  
                      l1378 0E73                        l1466 00A8                        l1458 008D  
                      l1490 06E8                        l1482 0699                        l1570 0429  
                      l1562 03E5                        l1554 03C3                        l1626 0F75  
                      l1618 0F4F                        l1722 01F8                        l1714 01D8  
                      l1706 01AF                        l1810 00F1                        l1802 00E0  
                      l1644 0F9B                        l1636 0F89                        l1740 027D  
                      l1732 023A                        l1548 0EF2                        l1652 0EA0  
                      l1396 05DB                        l1388 0587                        l1476 0E86  
                      l1468 00AD                        l1492 06EE                        l1484 06AC  
                      l1580 0467                        l1564 03F7                        l1556 03D4  
                      l1660 0EFF                        l1724 01FF                        l1716 01DF  
                      l1708 01B6                        l1820 0116                        l1812 00F8  
                      l1804 00E2                        l1646 0FA1                        l1638 0F8F  
                      l1750 02CC                        l1742 028D                        l1734 024B  
                      l1654 0EA3                        l1398 05DF                        l1478 0E93  
                      l1494 06FE                        l1486 06B2                        l1574 0443  
                      l1566 0408                        l1558 03DC                        l1590 0478  
                      l1662 0F07                        l1726 020C                        l1718 01E6  
                      l1822 011E                        l1830 0137                        l1814 00FF  
                      l1806 00E7                        l1648 0FA5                        l1672 0FB3  
                      l1680 0EBD                        l1752 02DD                        l1744 029D  
                      l1736 025C                        l1728 0210                        l1656 0EAD  
                      l1496 0704                        l1488 06D5                        l1592 0491  
                      l1576 0454                        l1584 046D                        l1568 0410  
                      l1664 0F09                        l1760 0325                        l1832 013E  
                      l1824 0125                        l1816 0106                        l1808 00EA  
                      l1674 0FB9                        l1754 02E4                        l1746 02AC  
                      l1738 026D                        l1658 0EB1                        l1498 0709  
                      l1586 0475                        l1578 045C                        l1666 0F0B  
                      l1682 0E3F                        l1690 0174                        l1770 0368  
                      l1762 032B                        l1834 0145                        l1826 012C  
                      l1818 0113                        l1676 0FD8                        l1748 02BD  
                      l1668 0F18                        l1684 0E4C                        l1692 017B  
                      l1780 039E                        l1772 036E                        l1764 0338  
                      l1756 02E8                        l1836 0153                        l1828 0133  
                      l1678 0FDF                        l1598 0F22                        l1694 0186  
                      l1686 0163                        l1782 03B1                        l1774 037B  
                      l1766 0343                        l1758 0318                        l1696 018A  
                      l1688 016D                        l1776 0386                        l1768 0350  
                      l1698 0191                        l1778 0393                        l1796 00D6  
                      l1798 00D8                        ?_pad 0024          read_DTMF_Data@temp 00E1  
                      STR_1 086B                        STR_2 082C                        STR_3 086E  
                      STR_4 0839                        STR_5 0861                        STR_6 081E  
                      STR_7 0866                        STR_8 0800                        STR_9 080F  
        read_DTMF_Data@wind 00E3                        u1000 0092                        u1001 0091  
                      u1010 00BB                        u1011 00BA                        u1020 00C0  
                      u1100 0704                        u1021 00BF                        u1101 0703  
                      u1030 0E93                        u1110 0709                        u1031 0E92  
                      u1015 00B7                        u1111 0708                        u1200 0EE2  
                      u1120 078C                        u1040 06A4                        u1201 0EE1  
                      u1121 078B                        u1041 06A2                        u1210 0EEB  
                      u1130 0799                        u1050 06A5                        u1211 0EEA  
                      u1035 0E8F                        u1131 0798                        u1300 0F86  
                      u1220 0EF2                        u1140 07A6                        u1060 06B2  
                      u1301 0F85                        u1221 0EF1                        u1141 07A5  
                      u1125 0788                        u1061 06B1                        u1310 0F8F  
                      u1230 0EF9                        u1150 07B4                        u1311 0F8E  
                      u1231 0EF8                        u1151 07B3                        u1320 0F98  
                      u1160 07B9                        u1080 06D5                        u1240 03D4  
                      u1321 0F97                        u1161 07B8                        u1145 07A2  
                      u1081 06D4                        u1241 03D3                        u1330 0FA1  
                      u1170 07C0                        u1090 06E8                        u1250 03F7  
                      u1331 0FA0                        u1171 07BF                        u1155 07B0  
                      u1091 06E7                        u1251 03F6                        u1340 0EBC  
                      u1180 07C5                        u1260 0408                        u1341 0EBB  
                      u1181 07C4                        u1261 0407                        u1350 0FB9  
                      u1190 07D0                        u1270 0454                        u1351 0FB8  
                      u1191 07CF                        u1095 06E4                        u1271 0453  
                      u1407 02EE                        _LATC 010E                        u1360 0FDF  
                      u1361 0FDE                        u1417 0306                        u1290 0F75  
                      u1370 011E                        u1507 0F47                        u1291 0F74  
                      u1427 0331                        u1371 011D                        u1517 0233  
                      u1285 0F31                        u1437 0349                        u1527 0FA6  
                      u1447 0374                        u1537 0FAE                        u1457 038C  
                      u1467 0197                        u1387 010C                        u1477 01CE  
                      u1397 0159                        u1487 0205                        u1497 0F3B  
                      abs@a 0073                        _dbuf 00A8                        _main 00D6  
                      _dtoa 0687                        _prec 00A4            ?_Print_DTMF_data 00DB  
                      _nout 00A0                        pad@i 0027                        pad@p 0025  
                      fsr0h 0005                        fsr1h 0007                        indf0 0000  
                      fsr0l 0004                        indf1 0001                        fsr1l 0006  
                      pad@w 0029                        btemp 007E                        start 0002  
              ?_LCD_row_set 0079          Lcd_Print_Char@data 0074          __size_of_LDC_clear 0020  
                     ??_abs 0075                       ??_pad 007C                  _Lcd_SetBit 0EDD  
          __end_of_LCD_init 02E8             __end_of___aodiv 0687                       ?_main 0070  
                     ?_dtoa 0030             __end_of___aomod 0586                       STR_10 0859  
                     STR_11 080F                       STR_12 0845                       STR_13 080F  
                     STR_14 084F         read_DTMF_Data@press 00E5                vfpfcnvrt@fmt 004E  
                     _PORTB 000D                       _TRISA 008C                       _TRISB 008D  
                     _TRISC 008E                       u81lld 05DB                       u90lld 04C6  
                     u92lld 04F1                       u79lld 05B0                       u88lld 0675  
                     u98lld 0574              ?_LCD_Print_num 006A                       _flags 00A6  
                     _fputc 002E                       _fputs 0006                       pad@fp 002B  
                     _width 00A2                       _putch 0005                       dtoa@d 0030  
                     dtoa@i 004C                       dtoa@n 0044                       dtoa@p 003E  
                     dtoa@s 0042                       dtoa@w 0040   __size_of_Lcd_Print_String 001D  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0F21  
       __size_of_DTMF_start 0019     __size_of_Lcd_Print_Char 002C             __initialization 07F5  
              __end_of_main 0163                __end_of_dtoa 07F5                      ??_main 00EB  
                    ??_dtoa 0038           __end_of_LDC_clear 0EDD                      ?_fputc 0070  
                    ?_fputs 0078                      ?_putch 0070                      _ANSELB 018D  
                    _ANSELC 018E                      u107lld 06D0                vfprintf@cfmt 0064  
                 ??___aodiv 0070                   ??___aomod 0070                 ?_Lcd_SetBit 0070  
                    pad@buf 0024            __end_of_send_CMD 0FB3                      dtoa@fp 003D  
                    _strlen 0E6D     __size_of_read_DTMF_Data 00D9                      fputc@c 0070  
                    fputs@c 0020                      fputs@i 0021                      fputs@s 0023  
           ??_LCD_Print_num 007E                      putch@c 0070            __end_of_vfprintf 0F7E  
                 ??_sprintf 007D     __end_of__initialization 07FD                   ?_LCD_init 0070  
            __pcstackCOMMON 0070        __size_of_LCD_row_set 004D               __end_of_fputc 007D  
             __end_of_fputs 002E               __end_of_putch 0006              LCD_row_set@row 0079  
              ??_DTMF_start 0070                     ??_fputc 0073                     ??_fputs 0079  
                   ??_putch 0070                  __pbssBANK1 00A0            _Lcd_Print_String 0EA0  
       __size_of_Lcd_SetBit 0020                  ??_LCD_init 007B              _Lcd_Print_Char 0F21  
        __end_of_DTMF_start 0E6D                  __pmaintext 00D6          Lcd_SetBit@data_bit 0070  
                   ?_strlen 0070          __size_of_vfpfcnvrt 00DB      __end_of_Lcd_Print_Char 0F4D  
                 ?_send_CMD 0070                     ___aodiv 0586                     ___aomod 049C  
  __size_of_Print_DTMF_data 00AD                   ?_vfprintf 005E              _read_DTMF_Data 02E8  
                   __ptext1 02E8                     __ptext2 0163                     __ptext3 0E3F  
                   __ptext4 0EFD                     __ptext5 0F4D                     __ptext6 03C1  
                   __ptext7 0687                     __ptext8 007D                     __ptext9 0E6D  
           __size_of_strlen 0019                __size_of_abs 001A                __size_of_pad 0059  
                   _sprintf 0EFD                     clrloop0 0E3A        end_of_initialization 07FD  
                 _LDC_clear 0EBD                     fputc@fp 0072             ?_Lcd_Print_Char 0070  
                   fputs@fp 0078                  ??_send_CMD 0078           __end_of_vfpfcnvrt 049C  
                ??_vfprintf 0061      __end_of_read_DTMF_Data 03C1                ??_Lcd_SetBit 0070  
                   strlen@a 0073                     strlen@s 0074                  ?_LDC_clear 0070  
          read_DTMF_Data@up 00E7          __end_of_Lcd_SetBit 0EFD           __size_of_LCD_init 00D8  
           ?_read_DTMF_Data 0070                 vfpfcnvrt@ap 004F                 vfpfcnvrt@fp 005D  
               vfpfcnvrt@ll 0055    __end_of_Lcd_Print_String 0EBD           ??_Print_DTMF_data 006C  
            __end_of_strlen 0E86         start_initialization 07F5                 __end_of_abs 0EA0  
               __end_of_pad 00D6       __end_of_LCD_Print_num 0E54           Lcd_Print_String@a 0075  
         Lcd_Print_String@i 0078               ??_LCD_row_set 007B                 vfprintf@fmt 005E  
Lcd_Print_Char@Lower_Nibble 0072                    ??_strlen 0072                   ___latbits 0001  
             __pcstackBANK0 0020               __pcstackBANK1 00C8            ___aodiv@dividend 0028  
               ??_LDC_clear 0079                  send_CMD@d4 0076                  send_CMD@d5 0074  
                send_CMD@d6 0072                  send_CMD@d7 0070           __size_of_send_CMD 0035  
                  ?___aodiv 0020                    ?___aomod 0020            ___aodiv@quotient 0073  
       __end_of_LCD_row_set 1000           __size_of_vfprintf 0031            ??_Lcd_Print_Char 0071  
                  ?_sprintf 0066              __size_of_fputc 004F              __size_of_fputs 0028  
            __size_of_putch 0001                    _LCD_init 0210                   clear_ram0 0E39  
                 _vfpfcnvrt 03C1                 _LCD_row_set 0FB3            ??_read_DTMF_Data 006E  
                vfprintf@ap 0060                  vfprintf@fp 0063             _Print_DTMF_data 0163  
          __size_of___aodiv 0101            __size_of___aomod 00EA                  ?_vfpfcnvrt 004E  
          LCD_Print_num@num 006A            LCD_Print_num@str 00D1             ___aodiv@divisor 0020  
           ___aodiv@counter 0071           ?_Lcd_Print_String 0075                  sprintf@fmt 0066  
        ??_Lcd_Print_String 0077                    _dtoa$662 003B                    __ptext10 0006  
                  __ptext11 002E                    __ptext20 0EBD                    __ptext12 0005  
                  __ptext21 0FB3                    __ptext13 0E86                    __ptext22 0F7E  
                  __ptext14 049C                    __ptext23 0E54                    __ptext15 0586  
                  __ptext16 0EA0                    __ptext17 0F21                    __ptext18 0EDD  
                  __ptext19 0210            __size_of_sprintf 0024               __size_of_main 008D  
             __size_of_dtoa 016E                    _send_CMD 0F7E                    _vfprintf 0F4D  
Lcd_Print_Char@Upper_Nibble 0073                  _DTMF_start 0E54            ___aomod@dividend 0028  
      Print_DTMF_data@speed 00DD        Print_DTMF_data@press 00DF              __pstringtext10 0866  
            __pstringtext11 086B              __pstringtext12 086E              __pstringtext13 0000  
                 sprintf@ap 00CA     __end_of_Print_DTMF_data 0210      __size_of_LCD_Print_num 0015  
           ___aomod@divisor 0020                 ??_vfpfcnvrt 0050             ___aomod@counter 0071  
       Print_DTMF_data@temp 00DB               __pstringtext1 0800               __pstringtext2 080F  
             __pstringtext3 081E               __pstringtext4 082C               __pstringtext5 0839  
             __pstringtext6 0845               __pstringtext7 084F               __pstringtext8 0859  
             __pstringtext9 0861                    sprintf@f 00CC                    sprintf@s 00CB  
              ___aodiv@sign 0072                ___aomod@sign 0072  
